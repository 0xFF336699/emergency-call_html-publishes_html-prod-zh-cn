{"version":3,"file":"static/chunks/2740-06f81286af3d9b78.js","mappings":"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","sources":["webpack://_N_E/../../libs/app/model/src/remote/emc/inviteContacts.ts","webpack://_N_E/../../libs/app/model/src/remote/emc/tmsEmcGetContactTypes.ts","webpack://_N_E/./src/components/dialogs/InviteContactDialog.tsx","webpack://_N_E/../../libs/app/model/src/remote/emergency-call/list_pending_received_invitations.ts","webpack://_N_E/./src/components/PendingInvitationsList/PendingInvitationsList.tsx","webpack://_N_E/../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/lodash.js","webpack://_N_E/./src/components/pre-alarm-config2/index.tsx","webpack://_N_E/./src/components/privacies/ListenShowPrivacyContent.tsx","webpack://_N_E/./src/components/test/TestEmergencyCall.tsx","webpack://_N_E/./src/components/emergency-audio-control/stopAllHandler.ts","webpack://_N_E/./src/components/emergency-audio-control/EmergencyStopButton.tsx","webpack://_N_E/./src/components/emergency-tts-settings/EmergencyTTSSettings.tsx","webpack://_N_E/./src/components/emergency-tts-settings/index.ts","webpack://_N_E/./src/components/permission-status/PermissionStatusPanel.tsx","webpack://_N_E/./src/components/permission-status/index.ts","webpack://_N_E/./src/components/sensor-monitor/SensorMonitor.tsx","webpack://_N_E/./src/pages/home/index.tsx","webpack://_N_E/./src/components/privacies/PrivacyDialogAuto.tsx","webpack://_N_E/./src/components/navbar/NavBar.tsx","webpack://_N_E/../../libs/app/model/src/remote/emergency-call/list_all_invitations.ts","webpack://_N_E/./src/components/privacies/PrivacyDialogDisplay.tsx","webpack://_N_E/../../libs/app/ui/src/components/tabbar/Tabbar.tsx"],"sourcesContent":["import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 单个联系人的信息，由前端提供\n */\nexport interface IEmcContactIdentity {\n    identity: string;\n    identityType: 'email' | 'mobile';\n}\n\n/**\n * @description 邀请联系人的请求参数\n */\nexport interface IEmcInviteContactsParams extends IRequestParams {\n    contacts: IEmcContactIdentity[];\n    remark?: string;\n    type: string;\n    message?: string;\n    matrix_access_token: string; // 新增：用于创建 Matrix 房间的授权 Token\n}\n\n/**\n * @description 单个邀请的处理结果，由后端返回\n */\nexport interface IEmcInviteResultItem {\n    identity: string;\n    result_code: string; // 使用 ResultCode 的字符串形式\n    msg: string;\n}\n\n/**\n * @description 邀请联系人的完整响应体\n */\n// export interface IEmcInviteContactsResult extends IResultContent {\n//     data: {\n//         data: {\n//             results: IEmcInviteResultItem[];\n//             msg?: string;\n//         };\n//         msg?: string;\n//     };\n//     results?: IEmcInviteResultItem[]; // 保持向后兼容\n// }\n\nexport interface IEmcInviteContactsResult extends IResultContent {\n    data: {\n        is_ok:boolean;\n        results: IEmcInviteResultItem[];\n        msg?: string;\n    };\n}\n\n/**\n * @description 调用邀请联系人接口的函数\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEmcInviteContacts(opts: IRequestOptions<IEmcInviteContactsParams>) {\n    const res = await request<IEmcInviteContactsResult>(tms.TEmc, tms.MEmcInviteContacts, opts.params, opts.gateway, opts.handler);\n    return res;\n}","import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 获取联系人类型的请求参数\n */\nexport interface IEmcGetContactTypesParams extends IRequestParams {\n    // 可能不需要额外参数，但保留结构以备将来扩展\n}\n\n/**\n * @description 单个联系人类型\n */\nexport interface IEmcContactTypeItem {\n    id: string;\n    name: string;\n    // 根据实际需要可以添加更多字段，例如 icon, description 等\n}\n\n/**\n * @description 获取联系人类型的完整响应体\n */\nexport interface IEmcGetContactTypesResult extends IResultContent {\n    data: {\n        types: Array<{\n            uuid: string;\n            name: string;\n            is_system: boolean;\n        }>;\n    };\n}\n\n/**\n * @description 调用获取联系人类型接口的函数\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEmcGetContactTypes(opts: IRequestOptions<IEmcGetContactTypesParams>) {\n    const res = await request<IEmcGetContactTypesResult>(tms.TEmc, tms.MEmcGetContactTypes, opts.params, opts.gateway, opts.handler);\n    return res;\n}\n","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n    Box,\n    CircularProgress,\n    Autocomplete,\n} from '@mui/material';\nimport { useState, useCallback, useEffect, useRef, SyntheticEvent } from 'react';\nimport { \n    IEmcInviteContactsParams, \n    tmsEmcInviteContacts, \n    IEmcContactIdentity, \n    user, \n    tmsEmcGetContactTypes,\n    IEmcGetContactTypesResult,\n    IEmcContactTypeItem,\n    IEmcInviteResultItem,\n} from '@app/model';\nimport toast from 'react-hot-toast';\nimport { matrixUser } from '@im/matrix';\nimport { authService } from '@src/services/authService';\nimport { Log, useProxyWatch,\n    IRequestResult } from '@fanfanlo';\nconst fileLogger = new Log(false, 'InviteContactDialog.tsx');\n\nconst isValidIdentity = (text: string) => /(^\\d{11}$)|(^[a-zA-Z0-9]{32}$)/.test(text);\nconst is11DigitNumber = (text: string) => /^\\d{11}$/.test(text);\n\ninterface InviteContactDialogProps {\n    open: boolean;\n    onClose: () => void;\n    onInviteSent?: () => void;\n}\n\nexport function InviteContactDialog({ open, onClose, onInviteSent }: InviteContactDialogProps) {\n    const uiLogger = fileLogger.sub(false, 'InviteContactDialog_ui');\n\n    const [contacts, setContacts] = useState('');\n    const [remark, setRemark] = useState('');\n    const [callType, setCallType] = useState<string | null>(null);\n    const [availableCallTypes, setAvailableCallTypes] = useState<readonly IEmcContactTypeItem[]>([]);\n    \n    // Debug effect to log availableCallTypes changes\n    useEffect(() => {\n        console.log('availableCallTypes updated:', availableCallTypes);\n    }, [availableCallTypes]);\n    \n    // Debug effect to log callType changes\n    useEffect(() => {\n        console.log('callType updated:', callType);\n    }, [callType]);\n    const [message, setMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isTypesLoading, setIsTypesLoading] = useState(false);\n\n    const [pendingParams, setPendingParams] = useState<Omit<IEmcInviteContactsParams, 'matrix_access_token'> | null>(null);\n    const executionLock = useRef(false);\n    const [accessToken] = useProxyWatch(matrixUser.userData.userInfo, 'loginResponse.access_token', matrixUser.userData.userInfo.loginResponse?.access_token);\n    const [isUserLoggedIn] = useProxyWatch(user.data.sessionData, 'global_user_info', !!user.data.sessionData.global_user_info);\n    const [userToken] = useProxyWatch(user, 'data.storeData.user_token', user.data.storeData.user_token);\n    useEffect(() => {\n        if (accessToken && pendingParams && !executionLock.current) {\n            executionLock.current = true;\n            const finalParams: IEmcInviteContactsParams = {\n                ...pendingParams,\n                matrix_access_token: accessToken,\n                contacts: pendingParams?.contacts || [],\n                type: pendingParams?.type || ''\n            };\n            executeApiCall(finalParams);\n        }\n    }, [accessToken, pendingParams]);\n\n    const executeApiCall = useCallback(async (params: IEmcInviteContactsParams) => {\n        if (!params.contacts || !params.type) {\n            toast.error('请填写联系人和呼叫类型');\n            return;\n        }\n\n        setIsLoading(true);\n        \n        try {\n            const res = await tmsEmcInviteContacts({\n                params,\n                handler: { printLog: true }\n            });\n\n            console.log('Invite response:', res);\n\n            // 处理响应结果\n            if (res.err || !res.shellIsOk || !res.dataIsOk) {\n                const errorMessage = res.err?.message || '邀请失败，请稍后重试';\n                toast.error(errorMessage);\n                return;\n            }\n\n            // 处理嵌套的响应结构\n            const responseData = res.data;\n            if (!responseData?.data?.results) {\n                const errorMessage = responseData?.data?.msg || res.data?.msg || '未返回有效的结果';\n                toast.error(errorMessage);\n                return;\n            }\n            \n            const results: IEmcInviteResultItem[] = responseData.data.results;\n\n            // 统计成功和失败的数量\n            const successResults = results.filter(r => r.result_code === 'SUCCESS');\n            const infoResults = results.filter(r => r.result_code === 'INVITE_ALREADY_SENT' || r.result_code === 'ALREADY_A_CONTACT');\n            const errorResults = results.filter(r => r.result_code !== 'SUCCESS' && r.result_code !== 'INVITE_ALREADY_SENT' && r.result_code !== 'ALREADY_A_CONTACT');\n\n            if (successResults.length > 0) {\n                toast.success(`成功邀请 ${successResults.length} 个联系人`);\n                onInviteSent?.();\n            }\n            \n            if (infoResults.length > 0) {\n                const infoMessages = infoResults.map(r => r.msg).filter(Boolean).join('\\n');\n                if (infoMessages) {\n                    // 使用默认的 toast 替代 toast.info\n                    toast(infoMessages);\n                }\n            }\n            \n            if (errorResults.length > 0) {\n                const errorMessages = errorResults.map(r => r.msg).filter(Boolean).join('\\n');\n                if (errorMessages) {\n                    toast.error(`部分邀请失败：\\n${errorMessages}`);\n                }\n            }\n        } catch (error) {\n            console.error('Error in executeApiCall:', error);\n            toast.error('处理请求时发生错误，请稍后重试');\n        } finally {\n            setIsLoading(false);\n        }\n    }, [onInviteSent]);\n\n    const fetchCallTypes = useCallback(async () => {\n        const logger = uiLogger.sub(false, 'fetchCallTypes_fn');\n        logger.log('Fetching call types...');\n        setIsTypesLoading(true);\n        const res: IRequestResult<IEmcGetContactTypesResult, any> = await tmsEmcGetContactTypes({ params: {}, handler: { printLog: true } });\n        logger.log('Call types response:', JSON.stringify(res));\n        setIsTypesLoading(false);\n\n        if (res.err || !res.shellIsOk || !res.dataIsOk) {\n            const errorMessage = res.err?.message || '加载呼叫类型失败。';\n            toast.error(errorMessage);\n            setAvailableCallTypes([]);\n            logger.error('Failed to load call types:', errorMessage);\n        } else {\n            // 从 res.data.data.types 获取数据\n            const types = res.data?.data?.types || [];\n            logger.log('Setting availableCallTypes:', JSON.stringify(types));\n            \n            // 转换为 IEmcContactTypeItem[] 格式\n            const formattedTypes = types.map(type => ({\n                id: type.uuid,\n                name: type.name,\n                is_system: type.is_system\n            }));\n            \n            setAvailableCallTypes(formattedTypes);\n            \n            // 只在 callType 为空时设置默认值\n            if (formattedTypes.length > 0 && !callType) {\n                const defaultType = formattedTypes[0].name;\n                logger.log('Setting default call type:', defaultType);\n                setCallType(defaultType);\n            } else if (formattedTypes.length === 0) {\n                logger.warn('No call types available');\n            }\n        }\n    }, []); // 移除了 callType 依赖\n\n    useEffect(() => {\n        if (open) {\n            fetchCallTypes();\n        } else {\n            setContacts('');\n            setRemark('');\n            setCallType(null);\n            setAvailableCallTypes([]);\n            setMessage('');\n            setIsLoading(false);\n            setPendingParams(null);\n            executionLock.current = false;\n        }\n    }, [open, fetchCallTypes]);\n\n    const handleSendInvitation = useCallback(async () => {\n        const contactInputs = contacts.split('\\n').map(c => c.trim()).filter(c => c);\n        if (contactInputs.length === 0) {\n            toast.error('请输入至少一个联系人。');\n            return;\n        }\n\n        const contactIdentities: IEmcContactIdentity[] = [];\n        for (const input of contactInputs) {\n            if (isValidIdentity(input)) {\n                const type = is11DigitNumber(input) ? 'mobile' : 'email';\n                contactIdentities.push({ identity: input, identityType: type });\n            } else {\n                toast.error(`联系人格式无效: ${input}。必须是11位手机号或32位字符串。`);\n                return;\n            }\n        }\n\n        if (!callType || callType.trim() === '') {\n            toast.error('请选择或输入一个呼叫类型。');\n            return;\n        }\n\n        setIsLoading(true);\n\n        if (!userToken) {\n            const appLoggedIn = await authService.showLoginDialog();\n            if (!appLoggedIn) {\n                setIsLoading(false);\n                return; \n            }\n        }\n\n        const currentAccessToken = matrixUser.userData.userInfo.loginResponse?.access_token;\n        const params: Omit<IEmcInviteContactsParams, 'matrix_access_token'> = {\n            contacts: contactIdentities,\n            type: callType.trim(),\n            remark: remark.trim(),\n            message: message.trim(),\n        };\n\n        if (currentAccessToken) {\n            executionLock.current = true;\n            const apiParams: IEmcInviteContactsParams = {\n                ...params,\n                matrix_access_token: currentAccessToken,\n                contacts: params.contacts || [],\n                type: params.type || ''\n            };\n            executeApiCall(apiParams);\n        } else {\n            toast('等待登录...');\n            setPendingParams(params);\n        }\n\n    }, [contacts, remark, callType, message, executeApiCall, isUserLoggedIn]);\n\n    return (\n        <Dialog open={open} onClose={() => onClose()} maxWidth=\"sm\" fullWidth>\n            <DialogTitle>邀请紧急联系人</DialogTitle>\n            <DialogContent>\n                <Box component=\"form\" sx={{ mt: 2 }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"contacts\"\n                        label=\"联系人 (11位手机号)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                        placeholder=\"13800138000\"\n                        value={contacts}\n                        onChange={(e) => setContacts(e.target.value)}\n                        disabled={isLoading}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"remark\"\n                        label=\"备注名 (可选)\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"outlined\"\n                        value={remark}\n                        onChange={(e) => setRemark(e.target.value)}\n                        disabled={isLoading}\n                    />\n                    <Autocomplete\n                        freeSolo\n                        id=\"call-type-autocomplete\"\n                        options={availableCallTypes.map((option) => option.name)}\n                        value={callType || ''}\n                        onChange={(event: SyntheticEvent, newValue: string | null) => {\n                            console.log('Call type changed to:', newValue);\n                            setCallType(newValue);\n                        }}\n                        inputValue={callType || ''}\n                        onInputChange={(event, newInputValue, reason) => {\n                            // Only update when the user is typing, not when an option is selected\n                            if (reason === 'input') {\n                                console.log('Input value changed to:', newInputValue);\n                                setCallType(newInputValue);\n                            }\n                        }}\n                        disablePortal\n                        disableClearable\n                        forcePopupIcon={!isTypesLoading}\n                        sx={{ mt: 1, mb: 1, width: '100%' }}\n                        renderInput={(params) => (\n                            <TextField\n                                {...params}\n                                label=\"呼叫类型\"\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{\n                                    ...params.InputProps,\n                                    endAdornment: (\n                                        <>\n                                            {isTypesLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                            {params.InputProps.endAdornment}\n                                        </>\n                                    ),\n                                }}\n                            />\n                        )}\n                        ListboxProps={{\n                            style: {\n                                maxHeight: '200px',\n                                overflow: 'auto',\n                            },\n                        }}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"message\"\n                        label=\"邀请信息 (可选)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        rows={3}\n                        variant=\"outlined\"\n                        placeholder=\"我已将您添加为我的紧急联系人，请接受邀请。\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        disabled={isLoading}\n                    />\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => onClose()} disabled={isLoading}>关闭</Button>\n                <Button onClick={handleSendInvitation} variant=\"contained\" disabled={isLoading}>\n                    {isLoading ? <CircularProgress size={24} /> : '发送邀请'}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { request } from \"@fanfanlo\";\n\n/**\n * 获取未处理被邀请信息的请求参数\n */\nexport interface IParamsListPendingReceivedInvitations {\n  // 可以添加分页等参数\n  page?: number;\n  page_size?: number;\n}\n\n/**\n * 未处理的被邀请信息\n */\nexport interface IPendingInvitationInfo {\n  invitation_id: string;\n  user_info: {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n  };\n  status: 'pending';\n  message: string;\n  created_at: number;\n  expires_at: number;\n}\n\n/**\n * 获取未处理被邀请信息的响应结果\n */\nexport interface IResultListPendingReceivedInvitations {\n  is_ok: boolean;\n  msg?: string;\n  invitations: IPendingInvitationInfo[];\n}\n\n/**\n * 获取未处理的被邀请信息\n */\nexport async function tmsEmergencyCallListPendingReceivedInvitations(\n  opts: IRequestOptions<IParamsListPendingReceivedInvitations>\n) {\n  return request<IResultListPendingReceivedInvitations, IParamsListPendingReceivedInvitations>(\n    tms.TEmc,\n    tms.MEmcListPendingReceivedInvitations,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出服务\nexport const emergencyCallPendingInvitationService = {\n  listPendingReceivedInvitations: tmsEmergencyCallListPendingReceivedInvitations,\n};\n\nexport default emergencyCallPendingInvitationService;","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  CircularProgress,\n  Avatar,\n  Chip,\n  Alert,\n  Stack,\n} from '@mui/material';\nimport {\n  Check as CheckIcon,\n  Close as CloseIcon,\n  AccessTime as AccessTimeIcon,\n  Person as PersonIcon,\n  Notifications as NotificationsIcon,\n} from '@mui/icons-material';\nimport { formatDistanceToNow } from 'date-fns';\nimport { zhCN } from 'date-fns/locale';\nimport { \n  emergencyCallPendingInvitationService,\n  emergencyCallInvitationService,\n  IPendingInvitationInfo,\n  user,\n  AppModelEvent,\n  appModel\n} from '@app/model';\nimport { useProxyWatch } from '@fanfanlo';\nimport { matrixClient } from '@im/matrix';\n\n// 邀请卡片组件\nfunction PendingInvitationCard({ \n  invitation,\n  onRespond,\n  isProcessing = false,\n}: { \n  invitation: IPendingInvitationInfo;\n  onRespond?: (action: 'accept' | 'decline') => Promise<void>;\n  isProcessing?: boolean;\n}) {\n  const [isProcessingAction, setIsProcessingAction] = useState(false);\n\n  const handleRespond = async (action: 'accept' | 'decline') => {\n    if (!onRespond) return;\n    \n    try {\n      setIsProcessingAction(true);\n      await onRespond(action);\n    } finally {\n      setIsProcessingAction(false);\n    }\n  };\n\n  const isExpired = new Date(invitation.expires_at * 1000) < new Date();\n\n  return (\n    <Card variant=\"outlined\" sx={{ mb: 2, opacity: isProcessing ? 0.7 : 1 }}>\n      <CardContent>\n        <Box display=\"flex\" alignItems=\"center\" mb={2}>\n          <Avatar \n            src={invitation.user_info.avatar_url} \n            alt={invitation.user_info.display_name}\n            sx={{ width: 50, height: 50, mr: 2 }}\n          >\n            {invitation.user_info.display_name?.[0]?.toUpperCase() || '?'}\n          </Avatar>\n          <Box flexGrow={1}>\n            <Typography variant=\"h6\">\n              {invitation.user_info.display_name || '未知用户'}\n            </Typography>\n            {/* <Typography variant=\"body2\" color=\"text.secondary\">\n              ID: {invitation.user_info.user_id}\n            </Typography> */}\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 0.5 }}>\n              {formatDistanceToNow(invitation.created_at * 1000, { \n                addSuffix: true, \n                locale: zhCN \n              })}\n            </Typography>\n          </Box>\n          <Box textAlign=\"right\">\n            <Chip \n              size=\"small\"\n              icon={<AccessTimeIcon fontSize=\"small\" />}\n              label={isExpired ? '已过期' : `${formatDistanceToNow(invitation.expires_at * 1000, { \n                addSuffix: true, \n                locale: zhCN \n              })}`}\n              color={isExpired ? 'error' : 'primary'}\n              variant=\"outlined\"\n            />\n          </Box>\n        </Box>\n        \n        {invitation.message && (\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1, mb: 1 }}>\n            邀请信息: {invitation.message}\n          </Typography>\n        )}\n\n        <Typography variant=\"body2\" color=\"primary\" sx={{ fontWeight: 'medium' }}>\n          邀请您成为紧急联系人\n        </Typography>\n      </CardContent>\n      \n      {!isExpired && (\n        <CardActions sx={{ justifyContent: 'flex-end', pt: 0 }}>\n          <Button \n            size=\"small\" \n            color=\"error\"\n            startIcon={<CloseIcon />}\n            onClick={() => handleRespond('decline')}\n            disabled={isProcessing || isProcessingAction}\n          >\n            拒绝\n          </Button>\n          <Button \n            size=\"small\" \n            color=\"primary\"\n            variant=\"contained\"\n            startIcon={<CheckIcon />}\n            onClick={() => handleRespond('accept')}\n            disabled={isProcessing || isProcessingAction}\n          >\n            接受\n          </Button>\n        </CardActions>\n      )}\n    </Card>\n  );\n}\n\nconst PendingInvitationsList: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [invitations, setInvitations] = useState<IPendingInvitationInfo[]>([]);\n  const [isProcessing, setIsProcessing] = useState<boolean>(false);\n\n  // 监听用户登录状态\n  const [userToken] = useProxyWatch(user, 'data.storeData.user_token', user.data.storeData.user_token);\n\n  // 加载未处理的被邀请信息\n  const loadPendingInvitations = useCallback(async () => {\n    if (!userToken) {\n      setInvitations([]);\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const res = await emergencyCallPendingInvitationService.listPendingReceivedInvitations({\n        params: {},\n      } as any);\n      \n      if (res.shellIsOk && res.dataIsOk && res.data?.is_ok) {\n        setInvitations(res.data.invitations || []);\n      } else {\n        setError(res.data?.msg || '加载邀请列表失败');\n      }\n    } catch (err) {\n      console.error('加载未处理邀请列表异常:', err);\n      setError('发生未知错误');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [userToken]); // 现在可以安全地依赖userToken了\n\n  // 响应邀请\n  const handleRespondToInvite = useCallback(async (invitationId: string, action: 'accept' | 'decline'): Promise<void> => {\n    try {\n      setIsProcessing(true);\n\n      const res = await emergencyCallInvitationService.respondToInvite({\n        params: { invitation_id: invitationId, action },\n      } as any);\n\n      if (!res.shellIsOk || !res.dataIsOk || !res.data?.is_ok) {\n        throw new Error(res.data?.msg || '操作失败');\n      }\n      \n      // 从列表中移除已处理的邀请\n      setInvitations(prev => prev.filter(invite => invite.invitation_id !== invitationId));\n      \n      // 发送邀请列表更新事件\n      appModel.dispatcher.emit(AppModelEvent.InviteListUpdated);\n      \n    } catch (err) {\n      console.error('处理邀请失败:', err);\n      setError(err instanceof Error ? err.message : '操作失败，请重试');\n    } finally {\n      setIsProcessing(false);\n    }\n  }, []);\n\n  // 监听用户登录状态变化\n  useEffect(() => {\n    console.log('PendingInvitationsList - userToken changed:', userToken);\n    if (userToken) {\n      // 有登录用户了，刷新邀请列表\n      loadPendingInvitations();\n    } else {\n      // 清空邀请信息列表\n      setInvitations([]);\n    }\n  }, [userToken]); // 只依赖userToken\n\n  // 监听邀请列表更新事件\n  useEffect(() => {\n    const unsubscribe = appModel.dispatcher.addListener(AppModelEvent.InviteListUpdated, () => {\n      console.log('AppModelEvent.InviteListUpdated - 刷新未处理邀请列表');\n      loadPendingInvitations();\n    });\n\n    return unsubscribe;\n  }, [loadPendingInvitations]); // 依赖loadPendingInvitations函数\n\n  useEffect(()=>{\n    const unsub = matrixClient.imDispatcher.addListener(matrixClient.ImDispatcherEventTypes.INVITE, ()=>{\n      console.log('xxxxxxxxxxxxxxxxxxdddddddddddd')\n      if(!userToken)return;\n      console.log('fffffffffffffffffffff')\n      loadPendingInvitations();\n    });\n    return unsub;\n  }, [])\n  // 如果没有登录用户，不显示任何内容\n  if (!userToken) {\n    return null;\n  }\n\n  if (isLoading) {\n    return (\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" p={2}>\n        {/* <CircularProgress size={24} />\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n          加载中...\n        </Typography> */}\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box p={2}>\n        <Alert severity=\"error\">\n          {error}\n        </Alert>\n      </Box>\n    );\n  }\n\n  if (invitations.length === 0) {\n    return (\n      <Box \n        display=\"flex\" \n        flexDirection=\"column\" \n        alignItems=\"center\" \n        p={2}\n        textAlign=\"center\"\n      >\n        {/* <NotificationsIcon color=\"disabled\" sx={{ fontSize: 48, mb: 1 }} />\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          暂无未处理的邀请\n        </Typography> */}\n      </Box>\n    );\n  }\n\n  return (\n    <Box p={2}>\n      <Box display=\"flex\" alignItems=\"center\" mb={2}>\n        <NotificationsIcon color=\"primary\" sx={{ mr: 1 }} />\n        <Typography variant=\"h6\" color=\"primary\">\n          未处理的邀请 ({invitations.length})\n        </Typography>\n      </Box>\n\n      <Stack spacing={2}>\n        {invitations.map((invitation) => (\n          <PendingInvitationCard\n            key={invitation.invitation_id}\n            invitation={invitation}\n            onRespond={(action) => handleRespondToInvite(invitation.invitation_id, action)}\n            isProcessing={isProcessing}\n          />\n        ))}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default PendingInvitationsList;","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\lodash@4.17.21\\\\node_modules\\\\lodash\\\\lodash.js\"","import React, { useState, useCallback } from 'react';\nimport {\n    Box,\n    Switch,\n    Button,\n    Typography,\n    Paper,\n    Collapse,\n    Divider,\n    IconButton,\n    TextField,\n    FormControlLabel,\n    Tooltip,\n    Stack,\n    FormControl,\n    MenuItem,\n    InputLabel,\n    Select,\n} from '@mui/material';\nimport {\n    DragIndicator as DragIndicatorIcon,\n    ExpandLess,\n    Settings,\n    Delete,\n    PlayArrow,\n    Stop,\n    VolumeUp as VolumeUpIcon,\n    Vibration as VibrationIcon\n} from '@mui/icons-material';\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, TouchSensor, useSensor, useSensors, DragEndEvent } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, sortableKeyboardCoordinates, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { debounce } from 'lodash';\nimport { autoJsStoreUtils } from '@droid/android';\n\nconst PRE_ALARM_CONFIG_KEY = 'PRE_ALARM_ACTIONS_CONFIG';\n\ninterface PreAlarmAction {\n    id: string;\n    type: 'sound' | 'vibration';\n    duration: number;\n    resourceId?: string;\n}\n\ninterface PreAlarmConfig {\n    enabled: boolean;\n    actions: PreAlarmAction[];\n    maxWaitDuration: number;\n}\n\nconst defaultSoundResources = [\n    { id: 'beep_short', name: '短提示音' },\n    { id: 'siren_gentle', name: '缓和警报' },\n    { id: 'alarm_clock', name: '闹钟' },\n];\n\nconst SortableActionItem: React.FC<{\n    action: PreAlarmAction;\n    isPlaying: boolean;\n    onUpdate: (id: string, updates: Partial<Omit<PreAlarmAction, 'id'>>) => void;\n    onRemove: (id: string) => void;\n    onPreview: (resourceId?: string) => void;\n    onStopPreview: () => void;\n}> = ({ action, isPlaying, onUpdate, onRemove, onPreview, onStopPreview }) => {\n    const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id: action.id });\n\n    const style = {\n        transform: CSS.Transform.toString(transform),\n        transition,\n        opacity: isDragging ? 0.8 : 1,\n        zIndex: isDragging ? 1 : 'auto',\n    };\n\n    return (\n        <Paper\n            ref={setNodeRef}\n            style={style}\n            elevation={isDragging ? 3 : 1}\n            sx={{\n                p: 2,\n                mb: 1,\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2,\n                userSelect: 'none',\n            }}\n        >\n            <Box {...attributes} {...listeners} sx={{ display: 'flex', alignItems: 'center', cursor: 'grab', touchAction: 'none' }}>\n                <DragIndicatorIcon />\n            </Box>\n            \n            <Box sx={{ flexGrow: 1 }}>\n                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', gap: 1.5 }}>\n                    <Typography variant=\"subtitle2\">\n                        {action.type === 'sound' ? '声音' : '震动'}\n                    </Typography>\n                    <TextField\n                        size=\"small\"\n                        type=\"number\"\n                        label=\"持续时间 (ms)\"\n                        value={action.duration}\n                        onChange={(e) => onUpdate(action.id, { duration: parseInt(e.target.value, 10) || 0 })}\n                        sx={{ width: '100%' }}\n                    />\n                    \n                    {action.type === 'sound' && (\n                        <FormControl size=\"small\" sx={{ width: '100%' }}>\n                            <InputLabel>声音类型</InputLabel>\n                            <Select\n                                value={action.resourceId || ''}\n                                label=\"声音类型\"\n                                onChange={(e) => onUpdate(action.id, { resourceId: e.target.value })}\n                                startAdornment={\n                                    <Tooltip title={isPlaying ? \"停止\" : \"试听\"}>\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() => isPlaying ? onStopPreview() : onPreview(action.resourceId)}\n                                            sx={{ mr: 1 }}\n                                        >\n                                            {isPlaying ? <Stop fontSize=\"small\" /> : <PlayArrow fontSize=\"small\" />}\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                            >\n                                {defaultSoundResources.map((sound) => (\n                                    <MenuItem key={sound.id} value={sound.id}>\n                                        {sound.name}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    )}\n                </Box>\n            </Box>\n            \n            <IconButton onClick={() => onRemove(action.id)} size=\"small\" color=\"error\">\n                <Delete />\n            </IconButton>\n        </Paper>\n    );\n};\n\nconst PreAlarmConfig2: React.FC = () => {\n    const [config, setConfig] = useState<PreAlarmConfig | null>(null);\n    const [expanded, setExpanded] = useState(false);\n    const [playingSoundId, setPlayingSoundId] = useState<string | null>(null);\n\n    const debouncedWrite = useCallback(\n        debounce((newConfig: PreAlarmConfig) => {\n            autoJsStoreUtils.write(PRE_ALARM_CONFIG_KEY, newConfig);\n        }, 500),\n        []\n    );\n\n    const sensors = useSensors(\n        useSensor(PointerSensor, {\n            activationConstraint: {\n                distance: 8,\n            },\n        }),\n        useSensor(TouchSensor, {\n            activationConstraint: {\n                delay: 250,\n                tolerance: 5,\n            },\n        }),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: sortableKeyboardCoordinates,\n        })\n    );\n\n    React.useEffect(() => {\n        const loadConfig = async () => {\n            const storedConfig = await autoJsStoreUtils.read<PreAlarmConfig>(PRE_ALARM_CONFIG_KEY);\n            if (storedConfig) {\n                const actionsWithIds = storedConfig.actions.map((action) => ({\n                    ...action,\n                    id: action.id || `action-${Math.random().toString(36).substr(2, 9)}`,\n                }));\n                setConfig({\n                    ...storedConfig,\n                    actions: actionsWithIds,\n                });\n            } else {\n                setConfig({\n                    enabled: true,\n                    actions: [],\n                    maxWaitDuration: 30000,\n                });\n            }\n        };\n        loadConfig();\n    }, []);\n\n    const updateConfig = useCallback(\n        (updates: Partial<PreAlarmConfig>) => {\n            setConfig((prev) => {\n                if (!prev) return null;\n                const newConfig = { ...prev, ...updates };\n                debouncedWrite(newConfig);\n                return newConfig;\n            });\n        },\n        [debouncedWrite]\n    );\n\n    const handleToggleEnabled = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateConfig({ enabled: event.target.checked });\n    };\n\n    const handleAddAction = (type: 'sound' | 'vibration') => {\n        const newAction: PreAlarmAction = {\n            id: `action-${Date.now()}`,\n            type,\n            duration: 8000,\n            ...(type === 'sound' && { resourceId: defaultSoundResources[0].id }),\n        };\n        updateConfig({\n            actions: [...(config?.actions || []), newAction],\n        });\n    };\n\n    const handleUpdateAction = (id: string, updates: Partial<Omit<PreAlarmAction, 'id'>>) => {\n        if (!config) return;\n        updateConfig({\n            actions: config.actions.map((action) =>\n                action.id === id ? { ...action, ...updates } : action\n            ),\n        });\n    };\n\n    const handleRemoveAction = (id: string) => {\n        if (!config) return;\n        updateConfig({\n            actions: config.actions.filter((action) => action.id !== id),\n        });\n    };\n\n    const handleDragEnd = (event: DragEndEvent) => {\n        const { active, over } = event;\n        if (!config || !over || active.id === over.id) return;\n\n        const oldIndex = config.actions.findIndex((a) => a.id === active.id);\n        const newIndex = config.actions.findIndex((a) => a.id === over.id);\n\n        if (oldIndex !== -1 && newIndex !== -1) {\n            updateConfig({\n                actions: arrayMove(config.actions, oldIndex, newIndex),\n            });\n        }\n    };\n\n    const handlePreviewSound = (resourceId?: string) => {\n        if (!resourceId) return;\n        handleStopSound();\n        \n        console.log(`[WebView] Attempting to preview sound. resourceId: ${resourceId}`);\n\n        if ((window as any).SoundManager) {\n            (window as any).SoundManager.previewSound(resourceId);\n            setPlayingSoundId(resourceId);\n        } else {\n            console.warn('SoundManager JavascriptInterface is not available.');\n        }\n    };\n\n    const handleStopSound = () => {\n        if ((window as any).SoundManager) {\n            (window as any).SoundManager.stopPreview();\n        }\n        setPlayingSoundId(null);\n    };\n\n    if (!config) {\n        return <Box sx={{ p: 2, textAlign: 'center' }}>加载中...</Box>;\n    }\n\n    return (\n        <Box sx={{ mb: 3 }}>\n            <Paper \n                elevation={1} \n                sx={{ \n                    p: 2, \n                    display: 'flex', \n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    borderRadius: 1,\n                }}\n            >\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <Typography variant=\"subtitle1\">防误触报警设置</Typography>\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={config.enabled}\n                                onChange={handleToggleEnabled}\n                                color=\"primary\"\n                            />\n                        }\n                        label={config.enabled ? '已启用' : '已禁用'}\n                    />\n                </Box>\n                \n                <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    startIcon={expanded ? <ExpandLess /> : <Settings />}\n                    onClick={() => setExpanded(!expanded)}\n                >\n                    {expanded ? '收起设置' : '设置'}\n                </Button>\n            </Paper>\n\n            <Collapse in={expanded}>\n                <Paper \n                    elevation={0} \n                    sx={{ \n                        mt: 1, \n                        p: 2, \n                        border: '1px solid', \n                        borderColor: 'divider',\n                        borderRadius: 1,\n                    }}\n                >\n                    <Box sx={{ mb: 3 }}>\n                        <Typography variant=\"subtitle2\" gutterBottom>\n                            最大等待时间 (毫秒)\n                        </Typography>\n                        <TextField\n                            fullWidth\n                            type=\"number\"\n                            value={config.maxWaitDuration}\n                            onChange={(e) =>\n                                updateConfig({ maxWaitDuration: parseInt(e.target.value, 10) || 0 })\n                            }\n                            size=\"small\"\n                            InputProps={{\n                                endAdornment: (\n                                    <Typography variant=\"body2\" sx={{ ml: 1 }}>\n                                        毫秒\n                                    </Typography>\n                                ),\n                            }}\n                        />\n                    </Box>\n\n                    <Divider sx={{ my: 2 }} />\n\n                    <Box sx={{ mb: 2 }}>\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                            <Typography variant=\"subtitle2\">\n                                预警动作 ({config.actions.length})\n                            </Typography>\n                            <Stack direction=\"row\" spacing={1}>\n                                <Button\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    startIcon={<VolumeUpIcon />}\n                                    onClick={() => handleAddAction('sound')}\n                                >\n                                    添加声音\n                                </Button>\n                                <Button\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    startIcon={<VibrationIcon />}\n                                    onClick={() => handleAddAction('vibration')}\n                                >\n                                    添加震动\n                                </Button>\n                            </Stack>\n                        </Box>\n\n                        {config.actions.length === 0 ? (\n                            <Paper\n                                variant=\"outlined\"\n                                sx={{\n                                    p: 3,\n                                    textAlign: 'center',\n                                    color: 'text.secondary',\n                                }}\n                            >\n                                <Typography>暂无报警动作，请点击上方按钮添加</Typography>\n                            </Paper>\n                        ) : (\n                            <DndContext\n                                sensors={sensors}\n                                collisionDetection={closestCenter}\n                                onDragEnd={handleDragEnd}\n                            >\n                                <SortableContext\n                                    items={config.actions.map((a) => a.id)}\n                                    strategy={verticalListSortingStrategy}\n                                >\n                                    {config.actions.map((action) => (\n                                        <SortableActionItem\n                                            key={action.id}\n                                            action={action}\n                                            isPlaying={playingSoundId === action.resourceId}\n                                            onUpdate={handleUpdateAction}\n                                            onRemove={handleRemoveAction}\n                                            onPreview={handlePreviewSound}\n                                            onStopPreview={handleStopSound}\n                                        />\n                                    ))}\n                                </SortableContext>\n                            </DndContext>\n                        )}\n                    </Box>\n                </Paper>\n            </Collapse>\n        </Box>\n    );\n};\n\nexport default PreAlarmConfig2;\n","import { useEffect, useState } from \"react\";\r\nimport { PrivacyDialogAuto } from \"./PrivacyDialogAuto\";\r\nimport { autoJsStoreUtils } from \"@droid/android\";\r\n\r\n\r\nexport function ListenShowPrivacyContent({type}:{type:string}){\r\n\r\n    const [open, setOpen] = useState(false);\r\n    function onClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const value = autoJsStoreUtils.read(`privacy_${type}`, false)\r\n        console.log('privacy value is', value, typeof value);\r\n    }, [])\r\n    return(\r\n        <PrivacyDialogAuto type={type} area=\"zh-cn\" />\r\n    )\r\n}","import { autoWebViewJs } from \"@droid/android\";\r\nimport { Box, Button } from \"@mui/material\";\r\n\r\n\r\nexport function TestEmergencyCall() {\r\n    function onClick(){\r\n        // const script = `\r\n//         var instance = com.fanfanlo.emergencycall.service\r\n// .SensorMonitoringService.callFallDetection();\r\n//         `\r\n        const script = `\r\n        com.fanfanlo.emergencycall.manager.EmergencyCallJSInterface.startFallDetectionCall()`\r\n        const res = autoWebViewJs.callScript(script);\r\n        console.log(\"TestEmergencyCall res=\", res);\r\n    }\r\n    return(\r\n        <Box >\r\n            <Button  variant=\"contained\" onClick={onClick}>\r\n                测试呼救\r\n            </Button>\r\n        </Box>  \r\n    )\r\n}","import { autoWebViewJs } from \"@droid/android\";\r\nimport { Log } from \"@fanfanlo\";\r\n\r\nconst fileLog = new Log(false, 'stopAllHandler_f');\r\n\r\nexport function stopAllHandler() {\r\n\r\n    try {\r\n      fileLog.log('开始停止所有紧急音频和震动...');\r\n\r\n      // 使用正确的停止方法（与EmergencyAudioControl.tsx保持一致）\r\n      const stopEmergencyMethods = [\r\n        // 停止监控\r\n        // `com.fanfanlo.emergencycall.manager.SensorManager.stopMonitoring();`,\r\n        `\r\n        try {\r\n          com.fanfanlo.emergencycall.manager.SoundManager.stop();\r\n          com.fanfanlo.emergencycall.manager.AlarmSoundManager.stop();\r\n          com.fanfanlo.emergencycall.v2.core.EmergencySystemV2.forceStopHelpSound();\r\n        } catch(e) {\r\n          console.log('停止呼救者声音失败:', e);\r\n        }\r\n        `,\r\n        \r\n        // 停止联系人报警声音（主要方法）\r\n        `\r\n        try {\r\n          com.fanfanlo.emergencycall.manager.SoundManager.stopEmergencyAlarm();\r\n          \r\n          // 备用方案：如果WebViewActivity的Android接口可用，也调用它\r\n          if(typeof Android !== 'undefined' && typeof Android.stopAlarm === 'function') {\r\n            Android.stopAlarm();\r\n          }\r\n        } catch(e) {\r\n          console.log('停止联系人报警声音失败:', e);\r\n        }\r\n        `\r\n      ];\r\n\r\n      for (const script of stopEmergencyMethods) {\r\n        try {\r\n          fileLog.log(`调用停止脚本: ${script.trim()}`);\r\n          autoWebViewJs.callScript(script);\r\n        } catch (methodError) {\r\n          fileLog.warn(`停止方法调用失败:`, methodError);\r\n          // 继续尝试其他方法\r\n        }\r\n      }\r\n\r\n      fileLog.log('已停止所有紧急音频和震动');\r\n      return true;\r\n    //   setMessage({\r\n    //     type: 'success',\r\n    //     text: '已停止所有紧急音频和震动'\r\n    //   });\r\n    } catch (error) {\r\n      fileLog.error('停止紧急音频失败:', error);\r\n    //   setMessage({\r\n    //     type: 'error',\r\n    //     text: `停止失败: ${error instanceof Error ? error.message : '未知错误'}`\r\n    //   });\r\n    return false;\r\n    } finally {\r\n    //   setLoading(false);\r\n    }\r\n    \r\n}","import React, { useState } from 'react';\nimport {\n  Button,\n  Snackbar,\n  Alert,\n  Fab,\n  Tooltip\n} from '@mui/material';\nimport {\n  Stop as StopIcon,\n  VolumeOff as VolumeOffIcon\n} from '@mui/icons-material';\nimport { autoWebViewJs } from \"@droid/android\";\nimport { Log } from \"@fanfanlo\";\nimport { stopAllHandler } from './stopAllHandler';\n\nconst fileLog = new Log(false, 'EmergencyStopButton');\n\ninterface EmergencyStopButtonProps {\n  variant?: 'button' | 'fab';\n  size?: 'small' | 'medium' | 'large';\n  fullWidth?: boolean;\n}\n\n/**\n * 紧急停止按钮组件\n * 快速停止所有紧急呼救相关的音频和震动\n */\nconst EmergencyStopButton: React.FC<EmergencyStopButtonProps> = ({ \n  variant = 'button',\n  size = 'medium',\n  fullWidth = false\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n\n  /**\n   * 检查是否在Android WebView环境中\n   */\n  const isAndroidWebView = (): boolean => {\n    try {\n      return !!(autoWebViewJs && typeof autoWebViewJs.callScript === 'function');\n    } catch (e) {\n      fileLog.error('检查WebView环境时出错:', e);\n      return false;\n    }\n  };\n\n  /**\n   * 停止所有紧急呼救音频和震动\n   */\n  const handleStopAllEmergencyAudio = async (): Promise<void> => {\n    setLoading(true);\n    setMessage(null);\n\n    const bl = stopAllHandler();\n    if (bl){\n      \n      setMessage({\n        type: 'success',\n        text: '已停止所有紧急音频和震动'\n      });\n    }else{\n      \n      setMessage({\n        type: 'error',\n        text: `停止失败`\n      });\n    }\n    setLoading(false);\n  };\n\n  /**\n   * 关闭消息提示\n   */\n  const handleCloseMessage = () => {\n    setMessage(null);\n  };\n\n  // 浮动操作按钮样式\n  if (variant === 'fab') {\n    return (\n      <>\n        <Tooltip title=\"停止所有紧急音频和震动\" placement=\"left\">\n          <Fab\n            color=\"error\"\n            onClick={handleStopAllEmergencyAudio}\n            disabled={loading}\n            size={size}\n            sx={{\n              position: 'fixed',\n              bottom: 80,\n              right: 16,\n              zIndex: 1000\n            }}\n          >\n            {loading ? <VolumeOffIcon /> : <StopIcon />}\n          </Fab>\n        </Tooltip>\n\n        <Snackbar\n          open={!!message}\n          autoHideDuration={4000}\n          onClose={handleCloseMessage}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert \n            onClose={handleCloseMessage} \n            severity={message?.type || 'info'}\n            sx={{ width: '100%' }}\n          >\n            {message?.text}\n          </Alert>\n        </Snackbar>\n      </>\n    );\n  }\n\n  // 普通按钮样式\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        color=\"error\"\n        size={size}\n        fullWidth={fullWidth}\n        startIcon={loading ? <VolumeOffIcon /> : <StopIcon />}\n        onClick={handleStopAllEmergencyAudio}\n        disabled={loading}\n        sx={{ mb: 1 }}\n      >\n        🔕 静音\n      </Button>\n\n      <Snackbar\n        open={!!message}\n        autoHideDuration={4000}\n        onClose={handleCloseMessage}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert \n          onClose={handleCloseMessage} \n          severity={message?.type || 'info'}\n          sx={{ width: '100%' }}\n        >\n          {message?.text}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default EmergencyStopButton;","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Box,\n  Typography,\n  Switch,\n  TextField,\n  Paper,\n  Button,\n  FormControlLabel,\n  Slider,\n  Divider,\n  Alert,\n  Snackbar,\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Chip,\n  LinearProgress,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Tabs,\n  Tab,\n  CircularProgress,\n} from '@mui/material';\nimport { \n  PlayArrow, \n  Stop, \n  VolumeUp, \n  Settings, \n  ExpandLess, \n  Mic,\n  Save,\n  Share,\n  Delete,\n  Refresh,\n  Star,\n  StarBorder,\n  MusicNote,\n  CloudUpload,\n  AudioFile,\n  InsertDriveFile,\n} from '@mui/icons-material';\nimport { autoJsStoreUtils, autoWebViewJs } from '@droid/android';\n\n// 完整的TTS设置数据结构（整合录制功能后）\ninterface EmergencyTTSSettings {\n  enabled: boolean;\n  message: string;\n  repeatInterval: number;\n  voiceSpeed: number;\n  voicePitch: number;\n  useCustomAudio: boolean;        // 是否使用自定义录音\n  medicalEmergencyAudioPath?: string; // 医疗呼救音频路径\n  lastUpdated: number;\n}\n\n// TTS文件信息接口（扩展版本）\ninterface TTSFileInfo {\n  fileName: string;\n  filePath: string;\n  fileSize: number;\n  createTime: number;\n  type: 'general' | 'medical' | 'security' | 'custom';\n  source: 'recorded' | 'uploaded';  // 新增来源标识\n  isDefault?: boolean;\n  duration?: number;  // 音频时长（毫秒）\n  format?: string;    // 文件格式\n  mimeType?: string;  // MIME类型\n}\n\n// 录制结果接口\ninterface TTSRecordResult {\n  success: boolean;\n  filePath: string;\n  message: string;\n}\n\n// 语音配置接口\ninterface VoiceEmergencyConfig {\n  medicalDefault?: string;\n  securityDefault?: string;\n  lastUpdated: number;\n}\n\n// 文件上传相关接口\ninterface FileSelectResult {\n  success: boolean;\n  filePath: string;\n  message: string;\n  fileInfo?: SelectedFileInfo;\n}\n\ninterface SelectedFileInfo {\n  filePath: string;\n  fileName: string;\n  fileSize: number;\n  mimeType: string;\n  duration?: number;\n}\n\ninterface FileUploadResult {\n  success: boolean;\n  filePath: string;\n  message: string;\n  fileInfo?: TTSFileInfo;\n}\n\ninterface FileValidationResult {\n  isValid: boolean;\n  message: string;\n  fileSize: number;\n  duration: number;\n  format: string;\n  warnings: string[];\n}\n\ninterface SupportedFormats {\n  formats: string[];\n  maxFileSizeMB: number;\n  maxDurationSeconds: number;\n  recommendedDurationSeconds: number;\n}\n\n// 默认设置\nconst DEFAULT_SETTINGS: EmergencyTTSSettings = {\n  enabled: false,\n  message: '我遇到了紧急情况，需要帮助！请立即联系紧急服务！',\n  repeatInterval: 3000,\n  voiceSpeed: 1.0,\n  voicePitch: 1.0,\n  useCustomAudio: false,\n  lastUpdated: Date.now(),\n};\n\nconst DEFAULT_VOICE_CONFIG: VoiceEmergencyConfig = {\n  lastUpdated: Date.now(),\n};\n\nconst TTS_SETTINGS_KEY = 'emergencyTTSSettings';\nconst VOICE_CONFIG_KEY = 'voiceEmergencyConfig';\n\nexport const EmergencyTTSSettings: React.FC = () => {\n  const [settings, setSettings] = useState<EmergencyTTSSettings>(DEFAULT_SETTINGS);\n  const [voiceConfig, setVoiceConfig] = useState<VoiceEmergencyConfig>(DEFAULT_VOICE_CONFIG);\n  const [fileList, setFileList] = useState<TTSFileInfo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [testing, setTesting] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [expanded, setExpanded] = useState(false);\n  const [activeTab, setActiveTab] = useState(0);\n  \n  // 录制相关状态\n  const [isRecording, setIsRecording] = useState(false);\n  const [playingFile, setPlayingFile] = useState<string | null>(null);\n  const [recordText, setRecordText] = useState(DEFAULT_SETTINGS.message);\n  const [recordSpeed, setRecordSpeed] = useState(1.0);\n  const [recordPitch, setRecordPitch] = useState(1.0);\n  const [showRecordDialog, setShowRecordDialog] = useState(false);\n  const [ttsAvailable, setTtsAvailable] = useState<boolean | null>(null);\n  \n  // 文件上传相关状态\n  const [isUploading, setIsUploading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState<SelectedFileInfo | null>(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [supportedFormats, setSupportedFormats] = useState<SupportedFormats | null>(null);\n\n  // 加载所有设置和数据\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        \n        // 加载TTS设置\n        const savedSettings = await autoJsStoreUtils.read<EmergencyTTSSettings>(\n          TTS_SETTINGS_KEY, \n          DEFAULT_SETTINGS\n        );\n        setSettings(savedSettings);\n        \n        // 加载语音配置\n        const savedConfig = await autoJsStoreUtils.read<VoiceEmergencyConfig>(\n          VOICE_CONFIG_KEY,\n          DEFAULT_VOICE_CONFIG\n        );\n        setVoiceConfig(savedConfig);\n        \n        // 检查TTS可用性\n        checkTTSAvailability();\n        \n        // 加载文件列表\n        loadFileList();\n      } catch (err) {\n        console.error('加载数据失败:', err);\n        setError('加载设置失败');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // 初始化时加载支持的音频格式\n  useEffect(() => {\n    loadSupportedFormats();\n  }, []);\n\n  // 加载支持的音频格式\n  const loadSupportedFormats = useCallback(() => {\n    try {\n      const script = `var data = com.fanfanlo.emergencycall.manager.TTSRecorderJSInterface.getSupportedAudioFormats();\ndata;`;\n      const { javaResultString } = autoWebViewJs.callScript(script);\n      const formats = JSON.parse(javaResultString || '{}') as SupportedFormats;\n      setSupportedFormats(formats);\n    } catch (error) {\n      console.error('加载支持格式失败:', error);\n      setSupportedFormats({\n        formats: ['mp3', 'wav', 'm4a', 'aac'],\n        maxFileSizeMB: 10,\n        maxDurationSeconds: 60,\n        recommendedDurationSeconds: 30\n      });\n    }\n  }, []);\n\n  // 加载文件列表\n  const loadFileList = useCallback(() => {\n    try {\n      const script = `var data = com.fanfanlo.emergencycall.manager.TTSRecorderJSInterface.getFileList();\ndata;`;\n      const { javaResultString: listJson } = autoWebViewJs.callScript(script);\n      console.log('加载文件列表:', listJson);\n      const files = JSON.parse((listJson || \"[]\") as string) as TTSFileInfo[];\n      \n      // 为现有文件设置默认类型（兼容性处理）\n      const filesWithType = files.map(file => ({\n        ...file,\n        type: (file as any).type || 'general' as const,\n        isDefault: (file as any).isDefault || false,\n      }));\n      \n      setFileList(filesWithType);\n    } catch (error) {\n      console.error('加载文件列表失败:', error);\n      setFileList([]);\n    }\n  }, []);\n\n  // 选择并上传音频文件（整合操作）\n  const handleSelectAndUploadAudioFile = useCallback(async () => {\n    if (isUploading) return;\n    \n    try {\n      setIsUploading(true);\n      setUploadProgress(0);\n      \n      const script = `var data = com.fanfanlo.emergencycall.manager.TTSRecorderJSInterface.selectAndUploadAudioFile();\ndata;`;\n      \n      // 模拟上传进度\n      const progressInterval = setInterval(() => {\n        setUploadProgress(prev => {\n          if (prev >= 90) {\n            clearInterval(progressInterval);\n            return 90;\n          }\n          return prev + 10;\n        });\n      }, 300);\n      \n      const { javaResultString } = autoWebViewJs.callScript(script);\n      const result = JSON.parse(javaResultString || '{}') as FileUploadResult;\n      \n      clearInterval(progressInterval);\n      setUploadProgress(100);\n      \n      if (result.success) {\n        setSuccessMessage('音频文件上传成功！');\n        setShowSuccess(true);\n        loadFileList(); // 刷新文件列表\n      } else {\n        setError(result.message || '上传失败');\n      }\n    } catch (error) {\n      console.error('文件上传失败:', error);\n      setError('文件上传异常：' + (error as Error).message);\n    } finally {\n      setIsUploading(false);\n      setUploadProgress(0);\n    }\n  }, [isUploading, loadFileList]);\n\n  // 检查TTS可用性\n  const checkTTSAvailability = useCallback(() => {\n    try {\n      const script = `var data = com.fanfanlo.emergencycall.manager.TTSRecorderJSInterface.isTTSAvailable();\ndata;`;\n      const { javaResultString } = autoWebViewJs.callScript(script);\n      setTtsAvailable(javaResultString === 'true');\n    } catch (error) {\n      console.error('检查TTS可用性失败:', error);\n      setTtsAvailable(false);\n    }\n  }, []);\n\n  // 保存设置\n  const saveSettings = async (newSettings: EmergencyTTSSettings) => {\n    try {\n      const settingsToSave = {\n        ...newSettings,\n        lastUpdated: Date.now(),\n      };\n      \n      await autoJsStoreUtils.write(TTS_SETTINGS_KEY, settingsToSave);\n      setSettings(settingsToSave);\n      setSuccessMessage('设置保存成功');\n      setShowSuccess(true);\n      setError(null);\n    } catch (err) {\n      console.error('保存TTS设置失败:', err);\n      setError('保存设置失败');\n    }\n  };\n\n  // 保存语音配置\n  const saveVoiceConfig = async (newConfig: VoiceEmergencyConfig) => {\n    try {\n      const configToSave = {\n        ...newConfig,\n        lastUpdated: Date.now(),\n      };\n      \n      await autoJsStoreUtils.write(VOICE_CONFIG_KEY, configToSave);\n      setVoiceConfig(configToSave);\n    } catch (err) {\n      console.error('保存语音配置失败:', err);\n      setError('保存配置失败');\n    }\n  };\n\n  // 录制TTS\n  const handleRecord = useCallback(() => {\n    if (!recordText.trim()) {\n      setError('请输入要录制的文字');\n      return;\n    }\n\n    if (!ttsAvailable) {\n      setError('TTS服务不可用，无法录制');\n      return;\n    }\n\n    try {\n      setIsRecording(true);\n      // 生成文件名：TTS_YYYYMMDD_HHMMSS.wav\n      const now = new Date();\n      const timestamp = now.getFullYear().toString() + \n                       (now.getMonth() + 1).toString().padStart(2, '0') + \n                       now.getDate().toString().padStart(2, '0') + '_' +\n                       now.getHours().toString().padStart(2, '0') + \n                       now.getMinutes().toString().padStart(2, '0') + \n                       now.getSeconds().toString().padStart(2, '0');\n      const fileName = `TTS_${timestamp}.wav`;\n      \n      const script = `var data = com.fanfanlo.emergencycall.manager.TTSRecorderJSInterface.recordTTS(\"${recordText.replace(/\"/g, '\\\\\"')}\", \"${fileName}\", ${recordSpeed}, ${recordPitch});\ndata;`;\n      \n      // 模拟异步录制过程\n      setTimeout(() => {\n        try {\n          const { javaResultString: resultJson } = autoWebViewJs.callScript(script);\n          console.log('录制结果:', resultJson);\n          const result = JSON.parse(resultJson || '{}') as TTSRecordResult;\n          \n          if (result.success) {\n            setSuccessMessage('录制成功！');\n            setShowSuccess(true);\n            setShowRecordDialog(false);\n            loadFileList(); // 刷新文件列表\n          } else {\n            setError(result.message || '录制失败');\n          }\n        } catch (error) {\n          console.error('录制失败:', error);\n          setError('录制异常：' + (error as Error).message);\n        } finally {\n          setIsRecording(false);\n        }\n      }, 2000);\n    } catch (error) {\n      setError('录制异常：' + (error as Error).message);\n      setIsRecording(false);\n    }\n  }, [recordText, recordSpeed, recordPitch, ttsAvailable, loadFileList]);\n\n  // 播放文件\n  const handlePlayFile = useCallback((filePath: string) => {\n    try {\n      if (playingFile === filePath) {\n        setPlayingFile(null);\n        return;\n      }\n\n      const script = `var data = com.fanfanlo.emergencycall.manager.TTSRecorderJSInterface.playFile(\"${filePath.replace(/\"/g, '\\\\\"')}\");\ndata;`;\n      const { javaResultString: success } = autoWebViewJs.callScript(script);\n      if (success === 'true') {\n        setPlayingFile(filePath);\n        setTimeout(() => setPlayingFile(null), 3000);\n      } else {\n        setError('播放失败');\n      }\n    } catch (error) {\n      setError('播放异常：' + (error as Error).message);\n    }\n  }, [playingFile]);\n\n  // 分享文件\n  const handleShareFile = useCallback((filePath: string) => {\n    try {\n      const script = `var data = com.fanfanlo.emergencycall.manager.TTSRecorderJSInterface.shareFile(\"${filePath.replace(/\"/g, '\\\\\"')}\", \"紧急呼救语音\");\ndata;`;\n      const { javaResultString: success } = autoWebViewJs.callScript(script);\n      if (success !== 'true') {\n        setError('分享失败');\n      }\n    } catch (error) {\n      setError('分享异常：' + (error as Error).message);\n    }\n  }, []);\n\n  // 删除文件\n  const handleDeleteFile = useCallback((filePath: string) => {\n    if (window.confirm('确定要删除这个文件吗？')) {\n      try {\n        const script = `var data = com.fanfanlo.emergencycall.manager.TTSRecorderJSInterface.deleteFile(\"${filePath.replace(/\"/g, '\\\\\"')}\");\ndata;`;\n        const { javaResultString: success } = autoWebViewJs.callScript(script);\n        if (success === 'true') {\n          setSuccessMessage('文件删除成功');\n          setShowSuccess(true);\n          loadFileList();\n        } else {\n          setError('删除失败');\n        }\n      } catch (error) {\n        setError('删除异常：' + (error as Error).message);\n      }\n    }\n  }, [loadFileList]);\n\n  // 设置为默认音频\n  const setAsDefaultAudio = useCallback(async (filePath: string, type: 'medical' | 'security') => {\n    try {\n      // 调用Android端设置默认音频\n      const script = `var data = com.fanfanlo.emergencycall.manager.TTSRecorderJSInterface.setFileAsDefault(\"${filePath.replace(/\"/g, '\\\\\"')}\", \"${type}\");\ndata;`;\n      const { javaResultString: success } = autoWebViewJs.callScript(script);\n      \n      if (success !== 'true') {\n        setError('设置默认音频失败');\n        return;\n      }\n      \n      const newConfig = { ...voiceConfig };\n      if (type === 'medical') {\n        newConfig.medicalDefault = filePath;\n        // 同时更新TTS设置中的路径\n        const updatedSettings = {\n          ...settings,\n          medicalEmergencyAudioPath: filePath,\n          useCustomAudio: true,\n        };\n        setSettings(updatedSettings);\n        await saveSettings(updatedSettings);\n      } else {\n        newConfig.securityDefault = filePath;\n      }\n      \n      await saveVoiceConfig(newConfig);\n      \n      // 更新文件列表中的默认标记\n      const updatedFiles = fileList.map(file => ({\n        ...file,\n        isDefault: file.filePath === filePath,\n      }));\n      setFileList(updatedFiles);\n      \n      setSuccessMessage(`已设置为${type === 'medical' ? '医疗' : '安全'}呼救默认音频`);\n      setShowSuccess(true);\n    } catch (err) {\n      console.error('设置默认音频失败:', err);\n      setError('设置默认音频失败');\n    }\n  }, [voiceConfig, fileList, settings, saveSettings, saveVoiceConfig]);\n\n  // 格式化文件大小\n  const formatFileSize = (bytes: number): string => {\n    if (bytes < 1024) return `${bytes} B`;\n    if (bytes < 1024 * 1024) return `${(bytes / 1024).toFixed(1)} KB`;\n    return `${(bytes / (1024 * 1024)).toFixed(1)} MB`;\n  };\n\n  // 格式化时间\n  const formatTime = (timestamp: number): string => {\n    return new Date(timestamp).toLocaleString();\n  };\n\n  // 格式化时长\n  const formatDuration = (milliseconds: number): string => {\n    if (!milliseconds || milliseconds <= 0) return '';\n    const seconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    if (minutes > 0) {\n      return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n    }\n    return `${seconds}s`;\n  };\n\n  // 测试TTS\n  const testTTS = async () => {\n    if (!settings.message.trim()) {\n      setError('请输入呼救文字后再测试');\n      return;\n    }\n\n    try {\n      setTesting(true);\n      \n      // 调用Android端TTS测试方法\n      const script = `\n        com.fanfanlo.emergencycall.manager.EmergencyTTSManager.testTTS(\"${settings.message}\", ${settings.voiceSpeed}, ${settings.voicePitch});\n      `;\n      \n      await new Promise(resolve => setTimeout(resolve, 500)); // 模拟测试时间\n      // TODO: 实际调用时取消注释\n      autoWebViewJs.callScript(script);\n      \n    } catch (err) {\n      console.error('TTS测试失败:', err);\n      setError('TTS测试失败');\n    } finally {\n      setTesting(false);\n    }\n  };\n\n  // 停止TTS测试\n  const stopTest = async () => {\n    try {\n      const script = `\n        com.fanfanlo.emergencycall.manager.EmergencyTTSManager.stopTest();\n      `;\n      // TODO: 实际调用时取消注释\n      autoWebViewJs.callScript(script);\n      setTesting(false);\n    } catch (err) {\n      console.error('停止TTS测试失败:', err);\n    }\n  };\n\n  const handleSettingChange = (key: keyof EmergencyTTSSettings, value: any) => {\n    const newSettings = { ...settings, [key]: value };\n    setSettings(newSettings);\n    \n    // 对于启用/禁用这样的关键设置，立即保存\n    if (key === 'enabled') {\n      saveSettings(newSettings);\n    }\n  };\n\n  const handleSave = () => {\n    if (settings.enabled && !settings.useCustomAudio && !settings.message.trim()) {\n      setError('启用TTS功能时，呼救文字不能为空');\n      return;\n    }\n    saveSettings(settings);\n  };\n\n  if (loading) {\n    return (\n      <Box sx={{ p: 2, textAlign: 'center' }}>\n        <Typography>加载中...</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ mb: 3 }}>\n      {/* 折叠头部 */}\n      <Paper \n        elevation={1} \n        sx={{ \n          p: 2, \n          display: 'flex', \n          alignItems: 'center',\n          justifyContent: 'space-between',\n          borderRadius: 1,\n        }}\n      >\n        <Box sx={{ \n          display: 'flex', \n          alignItems: 'center', \n          gap: { xs: 1, sm: 2 },\n          flexWrap: { xs: 'wrap', sm: 'nowrap' },\n          flex: 1,\n          minWidth: 0\n        }}>\n          <Typography \n            variant=\"subtitle1\" \n            sx={{ \n              display: 'flex', \n              alignItems: 'center', \n              gap: 1,\n              fontSize: { xs: '0.95rem', sm: '1.25rem' },\n              minWidth: 0,\n              flexShrink: 0\n            }}\n          >\n            <VolumeUp fontSize=\"small\" />\n            <Box component=\"span\" sx={{ \n              display: { xs: 'none', sm: 'inline' }\n            }}>紧急呼救语音设置</Box>\n            <Box component=\"span\" sx={{ \n              display: { xs: 'inline', sm: 'none' }\n            }}>呼救设置</Box>\n          </Typography>\n          \n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center', \n            gap: { xs: 1, sm: 2 },\n            flexWrap: { xs: 'wrap', sm: 'nowrap' }\n          }}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={settings.enabled}\n                  onChange={(e) => handleSettingChange('enabled', e.target.checked)}\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              }\n              label={settings.enabled ? '已启用' : '未启用'}\n              sx={{ \n                margin: 0,\n                '& .MuiFormControlLabel-label': {\n                  fontSize: { xs: '0.8rem', sm: '0.875rem' }\n                }\n              }}\n            />\n            \n            {/* 状态指示器 */}\n            {/* <Chip \n              size=\"small\"\n              icon={ttsAvailable ? <VolumeUp /> : <MusicNote />}\n              label={ttsAvailable === null ? '检测中...' : (ttsAvailable ? 'TTS可用' : 'TTS不可用')}\n              color={ttsAvailable === null ? 'default' : (ttsAvailable ? 'success' : 'warning')}\n              variant=\"outlined\"\n              sx={{ \n                fontSize: { xs: '0.7rem', sm: '0.8125rem' },\n                height: { xs: '24px', sm: '32px' }\n              }}\n            /> */}\n          </Box>\n        </Box>\n        \n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          startIcon={expanded ? <ExpandLess /> : <Settings />}\n          onClick={() => setExpanded(!expanded)}\n          sx={{ \n            fontSize: { xs: '0.75rem', sm: '0.875rem' },\n            padding: { xs: '4px 8px', sm: '6px 16px' },\n            minWidth: { xs: 'auto', sm: '64px' },\n            flexShrink: 0\n          }}\n        >\n          <Box component=\"span\" sx={{ display: { xs: 'none', sm: 'inline' } }}>\n            {expanded ? '收起设置' : '设置'}\n          </Box>\n          <Box component=\"span\" sx={{ display: { xs: 'inline', sm: 'none' } }}>\n            {expanded ? '收起' : '设置'}\n          </Box>\n        </Button>\n      </Paper>\n\n      {/* 折叠内容 */}\n      <Collapse in={expanded}>\n        <Paper \n          elevation={0} \n          sx={{ \n            mt: 1, \n            p: 0,\n            border: '1px solid', \n            borderColor: 'divider',\n            borderRadius: 1,\n          }}\n        >\n          {/* 功能标签页 */}\n          <Tabs \n            value={activeTab} \n            onChange={(_, newValue) => setActiveTab(newValue)}\n            variant=\"fullWidth\"\n          >\n            {/* <Tab label=\"文字设置\" /> */}\n            <Tab label=\"上传/文字转语音\" />\n            <Tab label=\"文件管理\" />\n          </Tabs>\n\n          {/* 标签页内容 */}\n          <Box sx={{ p: 2 }}>\n            {/* 文字设置 Tab */}\n            {activeTab === -1 && (\n              <Box>\n                {/* 呼救文字设置 */}\n                <Box sx={{ mb: 3 }}>\n                  <Typography variant=\"subtitle2\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n                    呼救文字内容\n                  </Typography>\n                  <TextField\n                    fullWidth\n                    multiline\n                    rows={3}\n                    value={settings.message}\n                    onChange={(e) => handleSettingChange('message', e.target.value)}\n                    placeholder=\"请输入紧急情况下要播报的文字...\"\n                    disabled={!settings.enabled}\n                    helperText={`当前字数: ${settings.message.length} 字符`}\n                    sx={{ \n                      '& .MuiInputBase-input': {\n                        fontSize: '16px',\n                        lineHeight: 1.5,\n                      }\n                    }}\n                  />\n                </Box>\n\n                {/* 语音设置 */}\n                {settings.enabled && (\n                  <>\n                    <Divider sx={{ my: 3 }} />\n                    \n                    <Typography variant=\"subtitle2\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n                      语音参数设置\n                    </Typography>\n\n                    {/* 重复间隔 */}\n                    <Box sx={{ mb: 3 }}>\n                      <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                        重复间隔: {settings.repeatInterval / 1000} 秒\n                      </Typography>\n                      <Slider\n                        value={settings.repeatInterval}\n                        onChange={(_, value) => handleSettingChange('repeatInterval', value)}\n                        min={2000}\n                        max={10000}\n                        step={500}\n                        marks={[\n                          { value: 2000, label: '2s' },\n                          { value: 5000, label: '5s' },\n                          { value: 10000, label: '10s' },\n                        ]}\n                        valueLabelDisplay=\"auto\"\n                        valueLabelFormat={(value) => `${value / 1000}s`}\n                      />\n                    </Box>\n\n                    {/* 语音速度 */}\n                    <Box sx={{ mb: 3 }}>\n                      <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                        语音速度: {settings.voiceSpeed}x\n                      </Typography>\n                      <Slider\n                        value={settings.voiceSpeed}\n                        onChange={(_, value) => handleSettingChange('voiceSpeed', value)}\n                        min={0.5}\n                        max={2.0}\n                        step={0.1}\n                        marks={[\n                          { value: 0.5, label: '0.5x' },\n                          { value: 1.0, label: '1.0x' },\n                          { value: 2.0, label: '2.0x' },\n                        ]}\n                        valueLabelDisplay=\"auto\"\n                      />\n                    </Box>\n\n                    {/* 语音音调 */}\n                    <Box sx={{ mb: 3 }}>\n                      <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                        语音音调: {settings.voicePitch}x\n                      </Typography>\n                      <Slider\n                        value={settings.voicePitch}\n                        onChange={(_, value) => handleSettingChange('voicePitch', value)}\n                        min={0.5}\n                        max={2.0}\n                        step={0.1}\n                        marks={[\n                          { value: 0.5, label: '低' },\n                          { value: 1.0, label: '标准' },\n                          { value: 2.0, label: '高' },\n                        ]}\n                        valueLabelDisplay=\"auto\"\n                      />\n                    </Box>\n                  </>\n                )}\n              </Box>\n            )}\n\n            {/* 录制音频 Tab */}\n            {activeTab === 0 && (\n              <Box>\n                {/* 录制语音区域 */}\n                <Box sx={{ mb: 4 }}>\n                  <Typography variant=\"subtitle2\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n                    录制新的呼救语音\n                  </Typography>\n                  \n                  {!ttsAvailable ? (\n                    <Alert severity=\"warning\" sx={{ mb: 2 }}>\n                      TTS服务不可用，无法录制语音。请检查设备设置或联系技术支持。\n                    </Alert>\n                  ) : (\n                    <Button\n                      variant=\"contained\"\n                      startIcon={<Mic />}\n                      onClick={() => setShowRecordDialog(true)}\n                      disabled={isUploading}\n                      sx={{ mb: 3 }}\n                    >\n                      录制新语音\n                    </Button>\n                  )}\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    • 点击\"录制新语音\"开始录制<br />\n                    • 可以调节语速和音调参数<br />\n                    • 录制完成后会自动保存到文件列表<br />\n                    • 在文件管理中可以设置为默认呼救音频\n                  </Typography>\n                </Box>\n\n                <Divider sx={{ my: 3 }} />\n\n                {/* 上传音频文件区域 */}\n                <Box>\n                  <Typography variant=\"subtitle2\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n                    上传音频文件\n                  </Typography>\n                  \n                  <Button\n                    variant=\"outlined\"\n                    startIcon={isUploading ? <CircularProgress size={16} /> : <CloudUpload />}\n                    onClick={handleSelectAndUploadAudioFile}\n                    disabled={isUploading}\n                    sx={{ mb: 2 }}\n                  >\n                    {isUploading ? '上传中...' : '选择并上传音频文件'}\n                  </Button>\n                  \n                  {/* 上传进度 */}\n                  {isUploading && uploadProgress > 0 && (\n                    <Box sx={{ mb: 2 }}>\n                      <LinearProgress \n                        variant=\"determinate\" \n                        value={uploadProgress} \n                        sx={{ mb: 1 }}\n                      />\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center' }}>\n                        上传中... {uploadProgress}%\n                      </Typography>\n                    </Box>\n                  )}\n                  \n                  {supportedFormats && supportedFormats.formats && (\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                      支持格式: {supportedFormats.formats.join(', ').toUpperCase()}<br />\n                      文件大小限制: {supportedFormats.maxFileSizeMB}MB<br />\n                      推荐时长: {supportedFormats.recommendedDurationSeconds}秒内\n                    </Typography>\n                  )}\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    • 支持从设备中选择现有的音频文件<br />\n                    {/* • 文件会被自动复制到应用私有目录<br />\n                    • 上传前会自动验证文件格式和大小<br /> */}\n                    • 上传成功后可在文件管理中设置为默认音频\n                  </Typography>\n                </Box>\n              </Box>\n            )}\n\n            {/* 文件管理 Tab */}\n            {activeTab === 1 && (\n              <Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                  <Typography variant=\"subtitle2\" fontWeight=\"bold\">\n                    录制文件列表\n                  </Typography>\n                  <Button\n                    size=\"small\"\n                    startIcon={<Refresh />}\n                    onClick={loadFileList}\n                  >\n                    刷新\n                  </Button>\n                </Box>\n\n                {fileList.length === 0 ? (\n                  <Typography color=\"text.secondary\" sx={{ textAlign: 'center', py: 3 }}>\n                    暂无录制文件\n                  </Typography>\n                ) : (\n                  <List dense>\n                    {fileList.map((file, index) => (\n                      <React.Fragment key={file.filePath}>\n                        <ListItem sx={{ pl: 0 }}>\n                          <ListItemText\n                            primary={\n                              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flexWrap: 'wrap' }}>\n                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                                  {file.source === 'uploaded' ? <InsertDriveFile fontSize=\"small\" /> : <Mic fontSize=\"small\" />}\n                                  <Typography variant=\"body2\" fontWeight=\"medium\">\n                                    {file.fileName}\n                                  </Typography>\n                                </Box>\n                                \n                                {/* 标签集合 */}\n                                <Box sx={{ display: 'flex', gap: 0.5 }}>\n                                  {file.isDefault && (\n                                    <Chip size=\"small\" label=\"默认\" color=\"primary\" />\n                                  )}\n                                  <Chip \n                                    size=\"small\" \n                                    label={file.source === 'uploaded' ? '上传' : '录制'} \n                                    color={file.source === 'uploaded' ? 'secondary' : 'default'}\n                                    variant=\"outlined\"\n                                  />\n                                  {file.format && (\n                                    <Chip \n                                      size=\"small\" \n                                      label={file.format.toUpperCase()} \n                                      color=\"default\" \n                                      variant=\"outlined\"\n                                    />\n                                  )}\n                                </Box>\n                              </Box>\n                            }\n                            secondary={\n                              <Box>\n                                <Typography variant=\"caption\" color=\"text.secondary\">\n                                  {formatFileSize(file.fileSize)} • {formatTime(file.createTime)}\n                                  {file.duration && file.duration > 0 && ` • ${formatDuration(file.duration)}`}\n                                </Typography>\n                                {file.mimeType && (\n                                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block' }}>\n                                    {file.mimeType}\n                                  </Typography>\n                                )}\n                              </Box>\n                            }\n                          />\n                          <ListItemSecondaryAction>\n                            <Box sx={{ display: 'flex', gap: 0.5 }}>\n                              <IconButton\n                                size=\"small\"\n                                onClick={() => handlePlayFile(file.filePath)}\n                                color={playingFile === file.filePath ? \"primary\" : \"default\"}\n                              >\n                                {playingFile === file.filePath ? <Stop /> : <PlayArrow />}\n                              </IconButton>\n                              <IconButton\n                                size=\"small\"\n                                onClick={() => setAsDefaultAudio(file.filePath, 'medical')}\n                                color={file.isDefault ? \"primary\" : \"default\"}\n                              >\n                                {file.isDefault ? <Star /> : <StarBorder />}\n                              </IconButton>\n                              <IconButton\n                                size=\"small\"\n                                onClick={() => handleShareFile(file.filePath)}\n                              >\n                                <Share />\n                              </IconButton>\n                              <IconButton\n                                size=\"small\"\n                                onClick={() => handleDeleteFile(file.filePath)}\n                                color=\"error\"\n                              >\n                                <Delete />\n                              </IconButton>\n                            </Box>\n                          </ListItemSecondaryAction>\n                        </ListItem>\n                        {index < fileList.length - 1 && <Divider />}\n                      </React.Fragment>\n                    ))}\n                  </List>\n                )}\n              </Box>\n            )}\n\n            {/* 通用操作按钮 */}\n            <Divider sx={{ my: 3 }} />\n            \n            {/* <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap', mb: 2 }}>\n              <Button\n                variant=\"contained\"\n                onClick={handleSave}\n                sx={{ minWidth: 100 }}\n              >\n                保存设置\n              </Button>\n\n              {settings.enabled && settings.message.trim() && (\n                <>\n                  {!testing ? (\n                    <Button\n                      variant=\"outlined\"\n                      startIcon={<PlayArrow />}\n                      onClick={testTTS}\n                      sx={{ minWidth: 100 }}\n                    >\n                      测试呼救\n                    </Button>\n                  ) : (\n                    <Button\n                      variant=\"outlined\"\n                      color=\"error\"\n                      startIcon={<Stop />}\n                      onClick={stopTest}\n                      sx={{ minWidth: 100 }}\n                    >\n                      停止测试\n                    </Button>\n                  )}\n                </>\n              )}\n            </Box> */}\n\n            {/* 使用说明 */}\n            <Box sx={{ p: 2, backgroundColor: 'rgba(0,0,0,0.05)', borderRadius: 1 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                <strong>智能音频回退说明:</strong><br />\n                • 第1级: 检查是否启用呼救功能<br />\n                • 第2级: 优先播放设置为默认的自定义音频文件<br />\n                {/* • 第3级: 降级到文字转语音播报<br /> */}\n                • 第3级: 最终降级到系统默认提示音<br />\n                <br />\n                <strong>使用建议:</strong><br />\n                • 建议录制或上传个人化的呼救信息，包含您的姓名、病情和紧急联系人<br />\n                • 在文件管理中点击五角星设置为默认音频<br />\n                • 先测试语音效果，确保在紧急情况下能清楚传达<br />\n                • 定期检查和更新呼救音频内容\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      </Collapse>\n\n      {/* 录制对话框 */}\n      <Dialog open={showRecordDialog} onClose={() => setShowRecordDialog(false)} maxWidth=\"md\" fullWidth>\n        <DialogTitle>录制新语音</DialogTitle>\n        <DialogContent>\n          <TextField\n            fullWidth\n            multiline\n            rows={4}\n            label=\"录制文字内容\"\n            value={recordText}\n            onChange={(e) => setRecordText(e.target.value)}\n            margin=\"normal\"\n            placeholder=\"请输入要录制的紧急呼救内容...\"\n            helperText={`字数: ${recordText.length} 字符`}\n          />\n          \n          {isRecording && (\n            <Box sx={{ mt: 2 }}>\n              <LinearProgress />\n              <Typography variant=\"body2\" sx={{ mt: 1, textAlign: 'center' }}>\n                正在录制中，请稍候...\n              </Typography>\n            </Box>\n          )}\n          \n          <Box sx={{ mt: 3 }}>\n            <Typography variant=\"subtitle2\" gutterBottom>\n              录制参数\n            </Typography>\n            \n            <Box sx={{ mt: 2 }}>\n              <Typography variant=\"body2\" gutterBottom>\n                语音速度: {recordSpeed}x\n              </Typography>\n              <Slider\n                value={recordSpeed}\n                onChange={(_, value) => setRecordSpeed(value as number)}\n                min={0.5}\n                max={2.0}\n                step={0.1}\n                marks={[\n                  { value: 0.5, label: '慢' },\n                  { value: 1.0, label: '标准' },\n                  { value: 2.0, label: '快' },\n                ]}\n                disabled={isRecording}\n              />\n            </Box>\n            \n            <Box sx={{ mt: 2 }}>\n              <Typography variant=\"body2\" gutterBottom>\n                语音音调: {recordPitch}x\n              </Typography>\n              <Slider\n                value={recordPitch}\n                onChange={(_, value) => setRecordPitch(value as number)}\n                min={0.5}\n                max={2.0}\n                step={0.1}\n                marks={[\n                  { value: 0.5, label: '低' },\n                  { value: 1.0, label: '标准' },\n                  { value: 2.0, label: '高' },\n                ]}\n                disabled={isRecording}\n              />\n            </Box>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button \n            onClick={() => setShowRecordDialog(false)}\n            disabled={isRecording}\n          >\n            取消\n          </Button>\n          <Button \n            onClick={handleRecord} \n            variant=\"contained\"\n            disabled={!recordText.trim() || isRecording}\n            startIcon={isRecording ? undefined : <Mic />}\n          >\n            {isRecording ? '录制中...' : '开始录制'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* 成功提示 */}\n      <Snackbar\n        open={showSuccess}\n        autoHideDuration={3000}\n        onClose={() => setShowSuccess(false)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setShowSuccess(false)} severity=\"success\">\n          {successMessage || 'TTS设置保存成功！'}\n        </Alert>\n      </Snackbar>\n\n      {/* 错误提示 */}\n      <Snackbar\n        open={!!error}\n        autoHideDuration={6000}\n        onClose={() => setError(null)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setError(null)} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};","export { EmergencyTTSSettings } from './EmergencyTTSSettings';","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  List,\n  ListItem,\n  Button,\n  Chip,\n  Alert,\n  IconButton,\n  Tooltip,\n  CircularProgress,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Divider\n} from '@mui/material';\nimport {\n  CheckCircle as CheckCircleIcon,\n  Error as ErrorIcon,\n  Help as HelpIcon,\n  Settings as SettingsIcon,\n  Refresh as RefreshIcon,\n  Security as SecurityIcon,\n  Info as InfoIcon\n} from '@mui/icons-material';\nimport { autoWebViewJs, isRealInAndroid } from '@droid/android';\n\ninterface Permission {\n  id: string;\n  name: string;\n  type: 'runtime' | 'special' | 'vendor';\n  status: 'granted' | 'denied' | 'unknown';\n  canDetect: boolean;\n  description: string;\n  settingsAction: string;\n}\n\ninterface PermissionsData {\n  permissions: Permission[];\n  timestamp: number;\n  deviceBrand: string;\n  apiLevel: number;\n  error?: string;\n}\n\nexport const PermissionStatusPanel: React.FC = () => {\n  const [permissionsData, setPermissionsData] = useState<PermissionsData | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [infoDialogOpen, setInfoDialogOpen] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState<Permission | null>(null);\n\n  const fetchPermissions = async () => {\n    try {\n      if(!isRealInAndroid) return;\n      setLoading(true);\n      setError(null);\n      \n      const script = `\n        com.fanfanlo.emergencycall.manager.PermissionJSInterface.getAllPermissionsStatus();\n      `;\n      \n      const { javaResultString } = autoWebViewJs.callScript(script);\n      \n      if (!javaResultString) {\n        throw new Error('No response from permission interface');\n      }\n      \n      const data = JSON.parse(javaResultString) as PermissionsData;\n      \n      if (data.error) {\n        throw new Error(data.error);\n      }\n      \n      setPermissionsData(data);\n      console.log('Permissions data loaded:', data);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Unknown error';\n      setError(errorMessage);\n      console.error('Error fetching permissions:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPermissions();\n  }, []);\n\n  const handleOpenSettings = (permission: Permission) => {\n    try {\n      const script = `\n        com.fanfanlo.emergencycall.manager.PermissionJSInterface.openPermissionSettings(\"${permission.id}\");\n      `;\n      autoWebViewJs.callScript(script);\n      console.log(`Opening settings for permission: ${permission.id}`);\n    } catch (err) {\n      console.error('Error opening permission settings:', err);\n    }\n  };\n\n  const handleConfirmLockScreenPermission = () => {\n    try {\n      const script = `\n        com.fanfanlo.emergencycall.manager.PermissionJSInterface.confirmLockScreenPermission();\n      `;\n      autoWebViewJs.callScript(script);\n      console.log('Confirmed lock screen permission');\n      // 刷新权限状态\n      setTimeout(() => fetchPermissions(), 500);\n    } catch (err) {\n      console.error('Error confirming lock screen permission:', err);\n    }\n  };\n\n  const handleShowPermissionInfo = (permission: Permission) => {\n    setSelectedPermission(permission);\n    setInfoDialogOpen(true);\n  };\n\n  const handleCloseInfoDialog = () => {\n    setInfoDialogOpen(false);\n    setSelectedPermission(null);\n  };\n\n  const getPermissionReason = (permission: Permission): string => {\n    const reasonMap: Record<string, string> = {\n      'android.permission.ACCESS_FINE_LOCATION': '精确定位权限用于在紧急情况下获取您的准确位置信息，以便救援人员能够快速找到您。这对于户外活动、老人独居等场景下的紧急救助至关重要。',\n      'android.permission.ACCESS_COARSE_LOCATION': '大概位置权限作为精确定位的备用选择，在精确定位不可用时仍能提供基本的位置信息，确保紧急情况下不会完全失去位置服务。',\n      'android.permission.BODY_SENSORS': '身体传感器权限用于访问手机的加速度计、陀螺仪等传感器，实现跌倒检测功能。当检测到您可能发生跌倒时，系统会自动触发紧急呼叫，对老人和高危工作者尤为重要。',\n      'android.permission.CAMERA': '相机权限用于在紧急情况下自动拍摄现场照片，为救援人员和家属提供重要的环境信息，帮助判断紧急情况的严重程度和选择合适的救援方案。',\n      'android.permission.RECORD_AUDIO': '录音权限用于记录紧急情况发生时的环境声音，可以为救援人员提供重要线索，同时支持语音紧急呼叫功能，让您在无法操作手机时也能求救。',\n      'android.permission.ACTIVITY_RECOGNITION': '身体活动识别权限用于识别您当前的活动状态(如走路、跑步、静止等)，结合传感器数据提高跌倒检测的准确性，减少误报的同时确保真正的紧急情况不会被遗漏。',\n      'overlay': '悬浮窗权限允许应用在任何界面上显示紧急呼叫窗口，确保即使您在使用其他应用时，紧急呼叫功能也能立即激活，不会被其他应用界面阻挡。',\n      'lock_screen_popup': '后台弹出界面权限确保应用在后台运行时仍能在检测到紧急情况时立即弹出呼叫界面，即使手机处于息屏或锁定状态也不会影响紧急功能的响应速度。',\n      'lock_screen_display': '锁屏显示权限允许应用在手机锁屏状态下显示紧急信息和呼叫界面，确保紧急情况发生时不会因为屏幕锁定而延误救援时机。这对于意外昏迷等无法解锁手机的情况尤为重要。',\n      'desktop_shortcut': '桌面快捷方式权限允许应用在桌面创建一键紧急呼叫的快捷图标，让您在紧急情况下能够更快速地启动求救功能，特别适合老年用户或紧急情况下的快速操作。'\n    };\n    return reasonMap[permission.id] || '该权限对于应用的正常运行是必要的，请根据您的需要进行授权。';\n  };\n\n  const getPermissionImpact = (permission: Permission): string => {\n    const impactMap: Record<string, string> = {\n      'android.permission.ACCESS_FINE_LOCATION': '🚨 高影响：没有位置权限将无法在紧急情况下提供准确的位置信息给救援人员',\n      'android.permission.ACCESS_COARSE_LOCATION': '⚠️ 中影响：作为位置服务的备用选择，建议配合精确位置一起授权',\n      'android.permission.BODY_SENSORS': '🚨 高影响：没有此权限将无法实现自动跌倒检测功能',\n      'android.permission.CAMERA': '⚠️ 中影响：无法自动拍摄现场照片，但不影响基本呼叫功能',\n      'android.permission.RECORD_AUDIO': '⚠️ 中影响：无法录制环境音或使用语音功能，但不影响基本呼叫功能',\n      'android.permission.ACTIVITY_RECOGNITION': '⚠️ 中影响：跌倒检测准确性可能降低，增加误报或漏报风险',\n      'overlay': '🚨 高影响：无法在其他应用界面上显示紧急呼叫，可能错过紧急救援时机',\n      'lock_screen_popup': '🚨 高影响：手机锁屏时无法自动弹出紧急呼叫界面',\n      'lock_screen_display': '🚨 高影响：锁屏状态下无法显示紧急信息，可能延误救援',\n      'desktop_shortcut': '💡 低影响：无法创建桌面快捷方式，但不影响应用内的紧急呼叫功能'\n    };\n    return impactMap[permission.id] || '该权限的具体影响取决于您的使用场景。';\n  };\n\n  const getStatusIcon = (permission: Permission) => {\n    const iconProps = { fontSize: 18 };\n    switch (permission.status) {\n      case 'granted':\n        return <CheckCircleIcon sx={{ color: 'success.main', ...iconProps }} />;\n      case 'denied':\n        return <ErrorIcon sx={{ color: 'error.main', ...iconProps }} />;\n      case 'unknown':\n        return <HelpIcon sx={{ color: 'warning.main', ...iconProps }} />;\n      default:\n        return <HelpIcon sx={{ color: 'grey.500', ...iconProps }} />;\n    }\n  };\n\n  const getStatusChip = (permission: Permission) => {\n    const statusConfig = {\n      granted: { label: '✓', color: 'success' as const },\n      denied: { label: '✗', color: 'error' as const },\n      unknown: { label: '?', color: 'warning' as const }\n    };\n\n    const config = statusConfig[permission.status];\n    return (\n      <Chip \n        label={config.label} \n        color={config.color} \n        size=\"small\"\n        sx={{ \n          minWidth: 24,\n          height: 20,\n          fontSize: '0.7rem',\n          '& .MuiChip-label': { px: 0.5 }\n        }}\n      />\n    );\n  };\n\n  const getTypeLabel = (type: string) => {\n    const typeLabels = {\n      runtime: '运行时',\n      special: '特殊',\n      vendor: '厂商'\n    };\n    return typeLabels[type as keyof typeof typeLabels] || type;\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"120px\">\n        <CircularProgress size={20} />\n        <Typography variant=\"caption\" sx={{ ml: 1 }}>加载中...</Typography>\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ py: 1 }}>\n        <Typography variant=\"body2\">权限检查失败: {error}</Typography>\n        <Button onClick={fetchPermissions} size=\"small\" sx={{ mt: 0.5 }}>\n          重试\n        </Button>\n      </Alert>\n    );\n  }\n\n  if (!permissionsData) {\n    return (\n      <Alert severity=\"info\" sx={{ py: 1 }}>\n        <Typography variant=\"body2\">无权限数据，请重新加载</Typography>\n      </Alert>\n    );\n  }\n\n  const { permissions, deviceBrand, apiLevel } = permissionsData;\n\n  return (\n    <Paper elevation={1} sx={{ p: 1 }}>\n      {/* 标题栏 */}\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={1}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <SecurityIcon sx={{ mr: 0.5, color: 'primary.main', fontSize: 18 }} />\n          <Typography variant=\"body2\" fontWeight=\"medium\">权限状态</Typography>\n        </Box>\n        <Tooltip title=\"刷新\">\n          <IconButton onClick={fetchPermissions} size=\"small\" sx={{ p: 0.5 }}>\n            <RefreshIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      </Box>\n\n      {/* 说明 */}\n      <Alert severity=\"info\" sx={{ mb: 1, py: 0.5 }}>\n        <Typography variant=\"caption\" display=\"block\">\n          🟢已授权 🔴未授权 🟡无法检测\n        </Typography>\n        <Typography variant=\"caption\" color=\"textSecondary\">\n          {deviceBrand} • API{apiLevel}\n        </Typography>\n      </Alert>\n\n      {/* 权限列表 */}\n      <List sx={{ py: 0 }}>\n        {permissions.map((permission) => (\n          <ListItem\n            key={permission.id}\n            sx={{\n              borderLeft: 2,\n              borderLeftColor: \n                permission.status === 'granted' ? 'success.main' :\n                permission.status === 'denied' ? 'error.main' : 'warning.main',\n              mb: 0.5,\n              py: 0.5,\n              px: 0.5,\n              borderRadius: 0.5,\n              bgcolor: 'grey.50',\n              display: 'block' // 改为block布局\n            }}\n          >\n            {/* 第一行：图标 + 名称 + 状态 + 信息按钮 */}\n            <Box display=\"flex\" alignItems=\"center\" mb={0.5}>\n              <Box sx={{ mr: 0.5 }}>\n                {getStatusIcon(permission)}\n              </Box>\n              <Typography \n                variant=\"body2\" \n                fontWeight=\"medium\" \n                sx={{ flex: 1, minWidth: 0 }}\n              >\n                {permission.name}\n              </Typography>\n              <Tooltip title=\"查看权限说明\">\n                <IconButton\n                  size=\"small\"\n                  onClick={() => handleShowPermissionInfo(permission)}\n                  sx={{ mr: 0.5, p: 0.25 }}\n                >\n                  <InfoIcon sx={{ fontSize: 16, color: 'primary.main' }} />\n                </IconButton>\n              </Tooltip>\n              {getStatusChip(permission)}\n            </Box>\n            \n            {/* 第二行：类型标签 + 确认信息 */}  \n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={0.5}>\n              <Box display=\"flex\" alignItems=\"center\" gap={0.5}>\n                <Chip \n                  label={getTypeLabel(permission.type)} \n                  variant=\"outlined\" \n                  size=\"small\"\n                  sx={{ \n                    fontSize: '0.65rem',\n                    height: 18,\n                    '& .MuiChip-label': { px: 0.5, py: 0 }\n                  }}\n                />\n                {!permission.canDetect && (\n                  <Typography variant=\"caption\" color=\"textSecondary\" sx={{ fontSize: '0.65rem' }}>\n                    需确认\n                  </Typography>\n                )}\n              </Box>\n            </Box>\n            \n            {/* 第三行：操作按钮 */}\n            <Box display=\"flex\" gap={0.5}>\n              {/* {(permission.id === 'lock_screen' || permission.id === 'lock_screen_popup' || permission.id === 'lock_screen_display') && permission.status === 'unknown' && (\n                <Button\n                  variant=\"outlined\"\n                  size=\"small\" \n                  color=\"success\"\n                  onClick={handleConfirmLockScreenPermission}\n                  sx={{ \n                    fontSize: '0.65rem',\n                    minWidth: 'auto',\n                    px: 0.5,\n                    py: 0.25,\n                    height: 24\n                  }}\n                >\n                  已授权\n                </Button>\n              )} */}\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                startIcon={<SettingsIcon sx={{ fontSize: 12 }} />}\n                onClick={() => handleOpenSettings(permission)}\n                sx={{ \n                  fontSize: '0.65rem',\n                  minWidth: 'auto',\n                  px: 0.5,\n                  py: 0.25,\n                  height: 24\n                }}\n              >\n                设置\n              </Button>\n            </Box>\n          </ListItem>\n        ))}\n      </List>\n\n      {/* 底部时间戳 */}\n      <Box mt={0.5} py={0.25} px={0.5} bgcolor=\"grey.100\" borderRadius={0.25}>\n        <Typography variant=\"caption\" color=\"textSecondary\" sx={{ fontSize: '0.6rem' }}>\n          更新: {new Date(permissionsData.timestamp).toLocaleTimeString()}\n        </Typography>\n      </Box>\n\n      {/* 权限说明对话框 */}\n      <Dialog\n        open={infoDialogOpen}\n        onClose={handleCloseInfoDialog}\n        maxWidth=\"sm\"\n        fullWidth\n        PaperProps={{\n          sx: { mx: 1 } // 移动端适配\n        }}\n      >\n        <DialogTitle sx={{ pb: 1 }}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <SecurityIcon sx={{ mr: 1, color: 'primary.main' }} />\n            <Box>\n              <Typography variant=\"h6\" component=\"div\">\n                {selectedPermission?.name}\n              </Typography>\n              <Typography variant=\"caption\" color=\"textSecondary\">\n                {selectedPermission && getTypeLabel(selectedPermission.type)}权限\n              </Typography>\n            </Box>\n          </Box>\n        </DialogTitle>\n        \n        <DialogContent sx={{ pt: 0 }}>\n          {selectedPermission && (\n            <Box>\n              {/* 权限状态 */}\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                <Typography variant=\"subtitle2\" sx={{ mr: 1 }}>当前状态:</Typography>\n                <Box display=\"flex\" alignItems=\"center\">\n                  {getStatusIcon(selectedPermission)}\n                  <Typography variant=\"body2\" sx={{ ml: 0.5 }}>\n                    {selectedPermission.status === 'granted' ? '已授权' : \n                     selectedPermission.status === 'denied' ? '未授权' : '待确认'}\n                  </Typography>\n                </Box>\n              </Box>\n              \n              <Divider sx={{ mb: 2 }} />\n              \n              {/* 权限用途说明 */}\n              <Box mb={2}>\n                <Typography variant=\"subtitle2\" gutterBottom color=\"primary.main\">\n                  🎯 为什么需要这个权限？\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" lineHeight={1.6}>\n                  {getPermissionReason(selectedPermission)}\n                </Typography>\n              </Box>\n              \n              <Divider sx={{ mb: 2 }} />\n              \n              {/* 影响说明 */}\n              <Box mb={1}>\n                <Typography variant=\"subtitle2\" gutterBottom color=\"warning.main\">\n                  ⚡ 不授权的影响\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" lineHeight={1.6}>\n                  {getPermissionImpact(selectedPermission)}\n                </Typography>\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n        \n        <DialogActions sx={{ px: 3, pb: 2 }}>\n          <Button onClick={handleCloseInfoDialog} color=\"primary\">\n            我知道了\n          </Button>\n          {selectedPermission && (\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                handleOpenSettings(selectedPermission);\n                handleCloseInfoDialog();\n              }}\n              color=\"primary\"\n            >\n              去设置\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n};","export { PermissionStatusPanel } from './PermissionStatusPanel';","import React, { useState, useEffect, useRef } from 'react';\nimport { Box, TextField, Button, Typography, Paper, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Accordion, AccordionSummary, AccordionDetails } from '@mui/material';\nimport { ExpandMore as ExpandMoreIcon } from '@mui/icons-material';\nimport { autoJsStoreUtils, autoWebViewJs } from '@droid/android';\nimport { PermissionStatusPanel } from '../permission-status';\n\nexport const SensorMonitor: React.FC = () => {\n  const [threshold, setThreshold] = useState<string>('5.0');\n  const [isMonitoring, setIsMonitoring] = useState<boolean>(false);\n\n  // 为每个对话框创建独立的状态\n  const [isSensorInfoDialogOpen, setSensorInfoDialogOpen] = useState(false);\n  const [isForegroundServiceDialogOpen, setForegroundServiceDialogOpen] = useState(false);\n\n  // 使用useRef来保存回调函数，避免在re-render中丢失\n  const sensorCallbackRef = useRef<(passed: boolean) => void>();\n  const foregroundServiceCallbackRef = useRef<(passed: boolean) => void>();\n\n\n  useEffect(() => {\n    try {\n      const script = `\n      var thresholdValue = com.fanfanlo.emergencycall.manager.SensorManager.getThreshold();\n      thresholdValue;`;\n      const { javaResultString } = autoWebViewJs.callScript(script);\n      const thresholdValue = parseFloat(javaResultString || '5.0');\n      console.log(\"script get threshold=\", thresholdValue, javaResultString);\n      setThreshold(thresholdValue.toString());\n    } catch (error) {\n      console.error('Error fetching initial threshold value:', error);\n    }\n  }, []);\n\n  function readIsMonitoring() {\n    try {\n      const script = `\n      var isMonitoring = com.fanfanlo.emergencycall.manager.SensorManager.isMonitoring();\n      isMonitoring;`;\n      const { javaResultString } = autoWebViewJs.callScript(script);\n      const isMonitoring = javaResultString === \"true\";\n      console.log(\"script get isMonitoring=\", isMonitoring, javaResultString);\n      setIsMonitoring(isMonitoring);\n    } catch (error) {\n      console.error('Error fetching initial monitoring state:', error);\n    }\n  }\n\n  useEffect(() => {\n    readIsMonitoring();\n  }, []);\n\n  const handleSetThreshold = () => {\n    const thresholdValue = parseFloat(threshold);\n    if (isNaN(thresholdValue)) {\n      alert('请输入一个有效的数字作为阈值。');\n      return;\n    }\n    try {\n      const script = `com.fanfanlo.emergencycall.manager.SensorManager.updateThreshold(${thresholdValue});`;\n      autoWebViewJs.callScript(script);\n      alert(`阈值已设置为: ${thresholdValue}`);\n    } catch (error) {\n      console.error('Error calling updateThreshold:', error);\n      alert('设置阈值失败。请确保您在安卓应用中。');\n    }\n  };\n\n  const handleToggleMonitoring = () => {\n    if (isMonitoring) {\n      // 如果当前正在监控，则直接停止，不进行检查\n      try {\n        const script = `com.fanfanlo.emergencycall.manager.SensorManager.stopMonitoring();`;\n        autoWebViewJs.callScript(script);\n        readIsMonitoring();\n      } catch (error) {\n        console.error('Error stopping monitoring:', error);\n        alert('停止监控失败。');\n      }\n    } else {\n      // 如果当前未监控，则检查权限，然后启动\n      checkShowInfo(passed => {\n        if (!passed) return; // 用户不同意，则不执行任何操作\n        try {\n          const script = `com.fanfanlo.emergencycall.manager.SensorManager.startMonitoring();`;\n          // const script = `com.fanfanlo.emergencycall.manager.SensorManagerShell.startMonitoring();`;\n          // const script = `com.fanfanlo.emergencycall.manager.SensorManagerShell.xx();`;\n          autoWebViewJs.callScript(script);\n          readIsMonitoring();\n        } catch (error) {\n          console.error('Error starting monitoring:', error);\n          alert('开始监控失败。');\n        }\n      });\n    }\n  };\n\n  useEffect(()=>{\n    const id = setInterval(() => {\n      readIsMonitoring();\n    }, 3000); // 每5秒检查一次监控状态\n    return () => clearInterval(id);\n  }, [])\n  function checkShowSensorInfo(callback: (passed: boolean) => void) {\n    interface Info {\n      passed: boolean;\n    }\n    const info = autoJsStoreUtils.read<Info>('showSensorInfo', { passed: false });\n    if (!info || !info.passed) {\n      // 保存回调，并在Dialog操作后调用\n      sensorCallbackRef.current = callback;\n      // 打开传感器权限对话框\n      setSensorInfoDialogOpen(true);\n    } else {\n      callback(true);\n    }\n  }\n\n  function checkShowInfo(callback:(passed:boolean)=>void){\n    checkShowSensorInfo(passed=>{\n      if(!passed) {\n        callback(false);\n        return;\n      };\n      checkShowForegroundServiceInfo(callback);\n    })\n  }\n\n  function checkShowForegroundServiceInfo(callback: (passed: boolean) => void) {\n    interface Info {\n      passed: boolean;\n    }\n    const info = autoJsStoreUtils.read<Info>('showForegroundServiceInfo', { passed: false });\n    if (!info || !info.passed) {\n      // 保存回调，并在Dialog操作后调用\n      foregroundServiceCallbackRef.current = callback;\n      // 打开前台服务对话框\n      setForegroundServiceDialogOpen(true);\n    } else {\n      callback(true);\n    }\n  }\n\n  // 传感器对话框的处理器\n  const handleSensorDialog = (passed: boolean) => {\n    autoJsStoreUtils.write('showSensorInfo', { passed });\n    setSensorInfoDialogOpen(false);\n    if (sensorCallbackRef.current) {\n      sensorCallbackRef.current(passed);\n    }\n  };\n\n  // 前台服务对话框的处理器\n  const handleForegroundServiceDialog = (passed: boolean) => {\n    autoJsStoreUtils.write('showForegroundServiceInfo', { passed });\n    setForegroundServiceDialogOpen(false);\n    if (foregroundServiceCallbackRef.current) {\n      foregroundServiceCallbackRef.current(passed);\n    }\n  };\n\n\n  return (\n    <Box>\n      {/* 传感器监控控制面板 */}\n      <Paper elevation={3} sx={{ padding: 2, marginBottom: 2 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          传感器监控控制\n        </Typography>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, marginBottom: 2 }}>\n          <TextField\n            label=\"震动阈值\"\n            variant=\"outlined\"\n            type=\"number\"\n            value={threshold}\n            onChange={(e) => setThreshold(e.target.value)}\n            size=\"small\"\n          />\n          <Button variant=\"contained\" onClick={handleSetThreshold}>\n            设置\n          </Button>\n        </Box>\n        <Button\n          variant=\"contained\"\n          color={isMonitoring ? 'error' : 'primary'}\n          onClick={handleToggleMonitoring}\n          fullWidth\n        >\n          {isMonitoring ? '停止监控' : '开始监控'}\n        </Button>\n      </Paper>\n\n      {/* 权限状态面板 */}\n      <Accordion >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"permission-panel-content\"\n          id=\"permission-panel-header\"\n        >\n          <Typography variant=\"h6\">权限状态检查</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <PermissionStatusPanel />\n        </AccordionDetails>\n      </Accordion>\n\n      {/* 传感器权限说明对话框 */}\n      <Dialog\n        open={isSensorInfoDialogOpen}\n        onClose={() => handleSensorDialog(false)}\n        aria-labelledby=\"sensor-dialog-title\"\n        aria-describedby=\"sensor-dialog-description\"\n      >\n        <DialogTitle id=\"sensor-dialog-title\">\n          {\"传感器使用授权\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"sensor-dialog-description\">\n            我们需要获取您的身体传感器（如加速度计）权限，以实现跌倒检测功能。这对于在紧急情况下自动触发呼叫至关重要。您是否同意？\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleSensorDialog(false)}>不同意</Button>\n          <Button onClick={() => handleSensorDialog(true)} autoFocus>\n            同意\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* 前台服务通知对话框 */}\n      <Dialog\n        open={isForegroundServiceDialogOpen}\n        onClose={() => handleForegroundServiceDialog(false)}\n        aria-labelledby=\"foreground-dialog-title\"\n        aria-describedby=\"foreground-dialog-description\"\n      >\n        <DialogTitle id=\"foreground-dialog-title\">\n          {\"启用前台服务通知\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"foreground-dialog-description\">\n            为了在应用退到后台后仍能持续监控传感器数据，我们需要启用一个前台服务。这会在您的设备通知栏显示一个持续的通知。您是否同意？\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleForegroundServiceDialog(false)}>不同意</Button>\n          <Button onClick={() => handleForegroundServiceDialog(true)} autoFocus>\n            同意\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default SensorMonitor;\n\n\n","import { AppShell, TabbarContainer } from '@app/ui';\nimport { MeetingRoom5 } from '@im/livekit';\nimport { IMOpenPageLink } from '@im/matrix';\nimport { Box, Button, Grid2 } from '@mui/material';\nimport { InviteContactDialog } from '@src/components/dialogs/InviteContactDialog';\nimport InvitationManager from '@src/components/InvitationManager/InvitationManager';\nimport { JpushIsInitialized } from '@src/components/jpush/IsInitialized';\nimport { NavBar } from '@src/components/navbar/NavBar';\nimport PendingInvitationsList from '@src/components/PendingInvitationsList/PendingInvitationsList';\nimport PreAlarmConfig2 from '@src/components/pre-alarm-config2';\nimport ShortcutConfig from '@src/components/shortcut-config/ShortcutConfig';\nimport { ListenShowPrivacyContent } from '@src/components/privacies/ListenShowPrivacyContent';\nimport { UnifiedMonitoringControl } from '@src/components/unified-monitoring-control';\nimport { TestEmergencyCall } from '@src/components/test/TestEmergencyCall';\nimport EmergencyAudioControl from '@src/components/emergency-audio-control/EmergencyAudioControl';\nimport EmergencyStopButton from '@src/components/emergency-audio-control/EmergencyStopButton';\nimport { mainModel } from '@src/libs/mc/main/MainModel';\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport MeetingList from '@src/components/meeting-list/MeetingList';\nimport { EmergencyTTSSettings } from '@src/components/emergency-tts-settings';\nimport { TTSRecorder } from '@src/components/tts-recorder';\nimport SensorMonitor from '@src/components/sensor-monitor/SensorMonitor';\nimport { SensorPermissions } from '@src/components/android-permissions/sensor-permissions/SensorPermissions';\nimport { useRouter } from 'next/router';\n\nfunction Content() {\n  const [openInviteDialog, setOpenInviteDialog] = useState(false);\n\n  const router = useRouter()\n  return (\n    <Box sx={{ my: 2, p: 2 }}>\n      {/* 紧急停止按钮 - 置顶显示 */}\n      {/* <EmergencyStopButton fullWidth size=\"large\" /> */}\n      \n      {/* <Box>\n        <Link href=\"/how-to-use\" style={{ textDecoration: 'none' }}>\n          如何使用</Link>\n      </Box> */}\n      <ListenShowPrivacyContent type=\"main\" />\n      {/* <InvitationManager /> */}\n      <MeetingList maxItemLength={3} />\n      <PendingInvitationsList />\n      \n      <Grid2 container spacing={2} sx={{ m: 2 }}>\n        <Grid2 size={6}>\n          <Button variant=\"contained\" onClick={() => router.push(\"/intro\")}>\n            产品功能介绍\n          </Button>\n        </Grid2>\n        <Grid2 size={6}>\n          <Box  sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Button fullWidth variant='contained' onClick={()=>{router.push(\"/how-to\")}}>\n              使用说明\n            </Button>\n          </Box>\n        </Grid2>\n      </Grid2>\n      <PreAlarmConfig2 />\n      <EmergencyTTSSettings />\n      {/* <PreAlarmConfigComponent /> */}\n\n      {/* <JpushIsInitialized /> */}\n\n      <Grid2 container sx={{mt: 2, mb: 2}}>\n        <Grid2 size={6}>\n          <TestEmergencyCall />\n        </Grid2>\n        <Grid2 size={6}>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <EmergencyStopButton variant=\"button\" />\n          </Box>\n        </Grid2>\n      </Grid2>\n{/* gemini做的权限管理，不好，先不启用 */}\n{/* <SensorPermissions /> */}\n\n      <SensorMonitor />\n{/* 二合一的前台服务 */}\n      {/* <UnifiedMonitoringControl /> */}\n\n      {/*  统一监控控制 - 集成传感器监控和权限监控 */}\n      \n      <Grid2 container spacing={2} sx={{ m: 2 }}>\n        <Grid2 size={6}>\n          <Button variant=\"contained\" onClick={() => setOpenInviteDialog(true)}>\n            邀请紧急联系人\n          </Button>\n        </Grid2>\n        <Grid2 size={6}>\n          <Box  sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Button fullWidth variant='contained' onClick={()=>{router.push(\"/contacts\")}}>\n              联系人管理\n            </Button>\n          </Box>\n        </Grid2>\n      </Grid2>\n      {openInviteDialog && <InviteContactDialog open={openInviteDialog} onClose={() => setOpenInviteDialog(false)} />}\n\n      {/* <MeetingRoom5\n        roomName=\"test-room\"\n        userName={`user-${Math.random().toString(36).substring(2, 8)}`}\n        livekitConfig={mainModel.appConfig.livekit}\n        // role=\"initiator\" // Add role for testing\n      />\n       */}\n\n      {/* TTS录制与分享 */}\n      {/* <TTSRecorder /> */}\n      {/* 桌面快捷方式 */}\n      {/* <ShortcutConfig /> */}\n      \n      <Box sx={{mt: 2, mb: 2}}>\n        <Button fullWidth variant='contained' onClick={()=>{router.push(\"/shortcut\")}}>桌面快捷方式\n        {/* <Link href={\"/shortcut\"}>桌面快捷方式</Link> */}\n        </Button>\n      </Box>\n      {/* <EmergencyAudioControl /> */}\n      {/* 浮动紧急停止按钮 */}\n      {/* <EmergencyStopButton variant=\"fab\" /> */}\n\n{/* <Box>\n      <Link href={\"/logs\"}>日志</Link>\n      <IMOpenPageLink />\n</Box> */}\n\n      <Box sx={{ mt: \"2rem\" }}></Box>\n      \n    </Box>\n  );\n}\n\nexport default function Home() {\n  return (\n    <AppShell>\n      <TabbarContainer titleConf={{ ns: 'emergency-call/pages/home/content', key: 'home.title' }} navBar={<NavBar />}>\n        <Content />\n      </TabbarContainer>\n    </AppShell>\n  );\n}\n","import { useEffect } from 'react';\nimport { autoJsStoreUtils, isRealInAndroid } from '@droid/android';\nimport { PrivacyDialogDisplay } from './PrivacyDialogDisplay';\nimport { useState } from 'react';\n\ninterface PrivacyDialogAutoProps {\n  type: string;\n  area: string;\n}\n\ninterface IPrivacyInfo {\n  agree: boolean;\n  disagreeTime: number;\n}\n\nlet autoOpened = false; // 用于标记是否已经自动弹出过隐私协议\n/**\n * 自动逻辑组件 - 负责处理隐私协议的自动弹出逻辑\n * 包含原有的35-49行逻辑：检查用户是否已同意、是否在冷却期等\n */\nexport function PrivacyDialogAuto({ type, area }: PrivacyDialogAutoProps) {\n  const [open, setOpen] = useState(false);\n  // const [autoOpened, setAutoOpened] = useState(false);\n\n  const handleClose = () => {\n    autoOpened = true; // 设置为已自动弹出\n    setOpen(false);\n    // setAutoOpened(true);\n  };\n\n  // 原有的自动弹出逻辑 (35-49行)\n  useEffect(() => {\n    const def: IPrivacyInfo = { agree: false, disagreeTime: 0 };\n    const res = autoJsStoreUtils.read<IPrivacyInfo>(`privacy_${type}`, def);\n    const value: IPrivacyInfo = res && 'agree' in res ? res : def;\n    if(autoOpened){\n      //自动检测已经弹出过了就不再弹了\n      return;\n    }\n    // 不在Android环境中不弹出\n    if (!isRealInAndroid) {\n      return;\n    }\n    \n    // 已经同意了，不弹出\n    if (value.agree) {\n      return;\n    }\n    \n    // 在冷却期内（拒绝后3天内），不弹出\n    if (value.disagreeTime && value.disagreeTime != 0 && value.disagreeTime + 3 * 24 * 60 * 60 * 1000 > Date.now()) {\n      return;\n    }\n    \n    // 满足条件，弹出隐私协议\n    setOpen(true);\n  }, [type]);\n\n  return (\n    <PrivacyDialogDisplay\n      open={open }\n      onClose={handleClose}\n      type={type}\n      area={area}\n    />\n  );\n}","import { useRouter } from \"next/router\";\r\nimport { useTranslation } from \"@fanfanlo\";\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport ListIcon from '@mui/icons-material/List';\r\nimport { BottomNavigation, BottomNavigationAction } from \"@mui/material\";\r\ninterface TabInfoType {\r\n  label: string;\r\n  value: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nexport function NavBar() {\r\n  const router = useRouter();\r\n  const { pathname } = router;\r\n  const { t } = useTranslation('emergency-call/components/navbar/content');\r\n  const tabInfoList: TabInfoType[] = [\r\n    { label: t('NavBar.home'), value: '/', icon: <HomeIcon /> },\r\n    // { label: t('NavBar.logs'), value: '/logs', icon: <ListIcon /> },\r\n    // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n    // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n    { label: t('NavBar.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n  ];\r\n  return (\r\n\r\n    <BottomNavigation showLabels value={pathname}>\r\n      {tabInfoList.map(e => (\r\n        <BottomNavigationAction\r\n          key={e.value}\r\n          label={e.label}\r\n          icon={e.icon}\r\n          data-id={`tabbar-${e.value}`}\r\n          className={pathname === e.value ? 'Mui-selected' : ''}\r\n          onClick={() => {\r\n            if (pathname === e.value) return;\r\n            router.push(e.value);\r\n          }}\r\n        />\r\n      ))}\r\n    </BottomNavigation>\r\n  );\r\n}","import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { IRequestHandler, request } from \"@fanfanlo\";\n\n/**\n * 获取所有邀请的请求参数\n */\nexport interface IParamsListAllInvitations {\n  // 可以添加分页等参数\n  page?: number;\n  page_size?: number;\n}\n\n/**\n * 用户信息\n */\nexport interface IInvitationUserInfo {\n  user_id: string;\n  display_name: string;\n  avatar_url?: string;\n}\n\n// 邀请状态类型\nexport type InviteStatus = 'pending' | 'accepted' | 'declined' | 'expired' | 'cancelled';\n\n// 邀请记录详情\nexport interface IInvitationDetails {\n  invitation_id: string;\n  user_info: {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n  };\n  status: InviteStatus;\n  message: string;\n  created_at: number;\n  expires_at: number;\n}\n\n/**\n * 获取所有邀请的响应结果\n */\nexport interface IResultListAllInvitations {\n  is_ok: boolean;\n  msg?: string;\n  sent_invitations: IInvitationDetails[];\n  received_invitations: IInvitationDetails[];\n}\n\n/**\n * 响应邀请的请求参数\n */\nexport interface IParamsRespondToInvite {\n  invitation_id: string;\n  action: 'accept' | 'decline' | 'cancel' | 'remove';\n}\n\n/**\n * 获取所有邀请（发送和接收的）\n */\nexport async function tmsEmergencyCallListAllInvitations(\n  opts: IRequestOptions<IParamsListAllInvitations>\n) {\n  return request<IResultListAllInvitations, IParamsListAllInvitations>(\n    tms.TEmc,\n    tms.MEmcListAllInvitations,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n/**\n * 取消或删除邀请\n * @param invitationId 邀请ID\n * @param isReceived 是否是接收的邀请\n * @returns Promise\n */\nexport async function cancelOrRemoveInvitation(\n  invitationId: string,\n  isReceived: boolean\n) {\n  const action = isReceived ? 'remove' : 'cancel';\n  return emergencyCallInvitationService.respondToInvite({\n    params: {\n      invitation_id: invitationId,\n      action\n    }\n  } as any);\n}\n\n/**\n * 响应邀请\n */\nexport async function tmsEmergencyCallRespondToInvite(\n  opts: IRequestOptions<IParamsRespondToInvite>\n) {\n  return request<{ is_ok: boolean; msg?: string }, IParamsRespondToInvite>(\n    tms.TEmc,\n    tms.MEmcRespondToInvite,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出所有接口\nexport const emergencyCallInvitationService = {\n  listAllInvitations: tmsEmergencyCallListAllInvitations,\n  respondToInvite: tmsEmergencyCallRespondToInvite,\n};\n\nexport default emergencyCallInvitationService;\n","import { Dialog, DialogContent, IconButton } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport React from 'react';\nimport { autoJsStoreUtils, autoWebViewJs } from '@droid/android';\n\ninterface PrivacyDialogDisplayProps {\n  open: boolean;\n  onClose: () => void;\n  type: string;\n  area: string;\n}\n\ninterface IPrivacyInfo {\n  agree: boolean;\n  disagreeTime: number;\n}\n\n/**\n * 纯显示组件 - 负责隐私协议弹窗的显示和交互\n * 可以被手动控制打开/关闭\n */\nexport function PrivacyDialogDisplay({ open, onClose, type, area }: PrivacyDialogDisplayProps) {\n  let suffix = (typeof window === \"undefined\") ? \"\" : window.location.href.indexOf(\"qiniu\") > -1 ? \".html\" : \"/\"\n  const [iframeSrc, setIframeSrc] = useState(`/privacies/${type}/${area}${suffix}`);\n  const iframeRef = React.useRef<HTMLIFrameElement>(null);\n\n  useEffect(() => {\n    setIframeSrc(`/privacies/${type}/${area}${suffix}`);\n  }, [type, area]);\n\n  useEffect(() => {\n    const handleMessage = (event: MessageEvent) => {\n      // 安全检查：确保消息来自iframe\n      if (event.source !== iframeRef.current?.contentWindow) {\n        return;\n      }\n\n      const { sender, agree } = event.data;\n\n      if (sender === 'privacy_page') {\n        console.log(`Received privacy decision: ${agree ? 'Agreed' : 'Disagreed'}`);\n\n        const value: IPrivacyInfo = {\n          agree,\n          disagreeTime: agree ? 0 : Date.now()\n        };\n\n        // 保存到本地存储\n        autoJsStoreUtils.write(`privacy_${type}`, value);\n        \n        // 同步到Android端\n        const script = `\n          var data = new com.fanfanlo.emergencycall.data.PrivacyData(${value.agree}, ${value.disagreeTime});\n          com.fanfanlo.emergencycall.data.PrivacyStateHolder.updateMainPrivacyByJs(data);\n        `;\n        autoWebViewJs.callScript(script);\n\n        // 关闭弹窗\n        onClose();\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, [type, onClose]);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          width: '80%',\n          height: '80%',\n          maxWidth: 'none',\n        },\n      }}\n    >\n      <IconButton\n        aria-label=\"close\"\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 8,\n          color: theme => theme.palette.grey[500],\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n      <DialogContent sx={{ padding: 0, overflow: 'hidden' }}>\n        {iframeSrc && (\n          <iframe\n            ref={iframeRef}\n            src={iframeSrc}\n            style={{ width: '100%', height: '100%', border: 'none' }}\n            title={`Privacy Policy - ${type}/${area}`}\n          />\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}","'use client';\r\nimport { BottomNavigation, BottomNavigationAction, Box, CssBaseline, Paper, Stack } from '@mui/material';\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport StorefrontIcon from '@mui/icons-material/Storefront';\r\nimport { useRouter } from 'next/router';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ITitleI18nConf } from '../page';\r\nimport AndroidPageContent from '../page/AndroidPageContent';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\n// interface TabInfoType {\r\n//   label: string;\r\n//   value: string;\r\n//   icon: React.ReactNode;\r\n// }\r\n\r\nfunction BottomBar({navBar}:{navBar?:React.ReactNode}) {\r\n  return <Paper\r\n    id=\"bottom-navigation\"\r\n    sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }}\r\n    elevation={3}>\r\n    {/* <NavBar /> */}\r\n    {navBar}\r\n  </Paper>;\r\n}\r\n// function NavBar() {\r\n//   const router = useRouter();\r\n//   const { pathname } = router;\r\n//   const { t } = useTranslation('app-ui/components/tabbar/content');\r\n//   const tabInfoList: TabInfoType[] = [\r\n//     { label: t('content.home'), value: '/', icon: <HomeIcon /> },\r\n//     // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n//     // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n//     { label: t('content.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n//   ];\r\n//   return (\r\n\r\n//     <BottomNavigation showLabels value={pathname}>\r\n//       {tabInfoList.map(e => (\r\n//         <BottomNavigationAction\r\n//           key={e.value}\r\n//           label={e.label}\r\n//           icon={e.icon}\r\n//           data-id={`tabbar-${e.value}`}\r\n//           className={pathname === e.value ? 'Mui-selected' : ''}\r\n//           onClick={() => {\r\n//             if (pathname === e.value) return;\r\n//             router.push(e.value);\r\n//           }}\r\n//         />\r\n//       ))}\r\n//     </BottomNavigation>\r\n//   );\r\n// }\r\n\r\n\r\n// testWatchUpdates()\r\nexport function TabbarContainer({ children, titleConf, navBar }: {titleConf?:ITitleI18nConf, navBar:React.ReactNode} & PropsWithChildren)  {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', height2: '100vh' }}>\r\n      <CssBaseline />\r\n      <Stack direction={\"column\"} spacing={3}\r\n      \r\n      >\r\n        <AndroidPageContent titleConf={titleConf}>\r\n          {children}\r\n        </AndroidPageContent>\r\n        <BottomBar navBar={navBar} />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\n"],"names":["request","tms","tmsEmcInviteContacts","opts","res","TEmc","MEmcInviteContacts","params","gateway","handler","tmsEmcGetContactTypes","MEmcGetContactTypes","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Box","CircularProgress","Autocomplete","useState","useCallback","useEffect","useRef","user","toast","matrixUser","authService","Log","useProxyWatch","fileLogger","isValidIdentity","text","test","is11DigitNumber","InviteContactDialog","open","onClose","onInviteSent","uiLogger","sub","contacts","setContacts","remark","setRemark","callType","setCallType","availableCallTypes","setAvailableCallTypes","console","log","message","setMessage","isLoading","setIsLoading","isTypesLoading","setIsTypesLoading","pendingParams","setPendingParams","executionLock","accessToken","userData","userInfo","loginResponse","access_token","isUserLoggedIn","data","sessionData","global_user_info","userToken","storeData","user_token","current","finalParams","matrix_access_token","type","executeApiCall","error","responseData","printLog","err","shellIsOk","dataIsOk","errorMessage","results","msg","successResults","filter","r","result_code","infoResults","errorResults","length","success","infoMessages","map","Boolean","join","errorMessages","fetchCallTypes","logger","JSON","stringify","types","formattedTypes","id","uuid","name","is_system","defaultType","warn","handleSendInvitation","contactInputs","split","c","trim","contactIdentities","input","push","identity","identityType","appLoggedIn","showLoginDialog","currentAccessToken","apiParams","maxWidth","fullWidth","component","sx","mt","autoFocus","margin","label","multiline","rows","variant","placeholder","value","onChange","e","target","disabled","freeSolo","options","option","event","newValue","inputValue","onInputChange","newInputValue","reason","disablePortal","disableClearable","forcePopupIcon","mb","width","renderInput","InputProps","endAdornment","color","size","ListboxProps","style","maxHeight","overflow","onClick","tmsEmergencyCallListPendingReceivedInvitations","MEmcListPendingReceivedInvitations","emergencyCallPendingInvitationService","listPendingReceivedInvitations","React","Typography","Card","CardContent","CardActions","Avatar","Chip","Alert","Stack","Check","CheckIcon","Close","CloseIcon","AccessTime","AccessTimeIcon","Notifications","NotificationsIcon","formatDistanceToNow","zhCN","emergencyCallInvitationService","AppModelEvent","appModel","matrixClient","PendingInvitationCard","invitation","onRespond","isProcessing","isProcessingAction","setIsProcessingAction","handleRespond","action","isExpired","Date","expires_at","opacity","display","alignItems","src","user_info","avatar_url","alt","display_name","height","mr","toUpperCase","flexGrow","created_at","addSuffix","locale","textAlign","icon","fontSize","fontWeight","justifyContent","pt","startIcon","PendingInvitationsList","setError","invitations","setInvitations","setIsProcessing","loadPendingInvitations","is_ok","handleRespondToInvite","invitationId","respondToInvite","invitation_id","Error","prev","invite","dispatcher","emit","InviteListUpdated","unsubscribe","addListener","unsub","imDispatcher","ImDispatcherEventTypes","INVITE","flexDirection","p","severity","spacing","Switch","Paper","Collapse","Divider","IconButton","FormControlLabel","Tooltip","FormControl","MenuItem","InputLabel","Select","DragIndicator","DragIndicatorIcon","ExpandLess","Settings","Delete","PlayArrow","Stop","VolumeUp","VolumeUpIcon","Vibration","VibrationIcon","DndContext","closestCenter","KeyboardSensor","PointerSensor","TouchSensor","useSensor","useSensors","arrayMove","SortableContext","sortableKeyboardCoordinates","useSortable","verticalListSortingStrategy","CSS","debounce","autoJsStoreUtils","PRE_ALARM_CONFIG_KEY","defaultSoundResources","SortableActionItem","isPlaying","onUpdate","onRemove","onPreview","onStopPreview","attributes","listeners","setNodeRef","transform","transition","isDragging","Transform","toString","zIndex","ref","elevation","gap","userSelect","cursor","touchAction","duration","parseInt","resourceId","startAdornment","title","sound","PreAlarmConfig2","config","setConfig","expanded","setExpanded","playingSoundId","setPlayingSoundId","debouncedWrite","newConfig","write","sensors","activationConstraint","distance","delay","tolerance","coordinateGetter","loadConfig","storedConfig","read","actionsWithIds","actions","Math","random","substr","enabled","maxWaitDuration","updateConfig","updates","handleToggleEnabled","checked","handleAddAction","newAction","now","handleUpdateAction","handleRemoveAction","handleDragEnd","active","over","oldIndex","findIndex","a","newIndex","handlePreviewSound","handleStopSound","window","SoundManager","previewSound","stopPreview","borderRadius","control","in","border","borderColor","gutterBottom","ml","my","direction","collisionDetection","onDragEnd","items","strategy","PrivacyDialogAuto","ListenShowPrivacyContent","setOpen","area","autoWebViewJs","TestEmergencyCall","script","callScript","fileLog","stopAllHandler","stopEmergencyMethods","methodError","Snackbar","Fab","StopIcon","VolumeOff","VolumeOffIcon","EmergencyStopButton","loading","setLoading","isAndroidWebView","handleStopAllEmergencyAudio","bl","handleCloseMessage","placement","position","bottom","right","autoHideDuration","anchorOrigin","vertical","horizontal","Slider","List","ListItem","ListItemText","ListItemSecondaryAction","LinearProgress","Tabs","Tab","Mic","Share","Refresh","Star","StarBorder","CloudUpload","InsertDriveFile","DEFAULT_SETTINGS","repeatInterval","voiceSpeed","voicePitch","useCustomAudio","lastUpdated","DEFAULT_VOICE_CONFIG","TTS_SETTINGS_KEY","VOICE_CONFIG_KEY","EmergencyTTSSettings","settings","setSettings","voiceConfig","setVoiceConfig","fileList","setFileList","testing","setTesting","showSuccess","setShowSuccess","successMessage","setSuccessMessage","activeTab","setActiveTab","isRecording","setIsRecording","playingFile","setPlayingFile","recordText","setRecordText","recordSpeed","setRecordSpeed","recordPitch","setRecordPitch","showRecordDialog","setShowRecordDialog","ttsAvailable","setTtsAvailable","isUploading","setIsUploading","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","supportedFormats","setSupportedFormats","loadData","savedSettings","savedConfig","checkTTSAvailability","loadFileList","loadSupportedFormats","javaResultString","formats","parse","maxFileSizeMB","maxDurationSeconds","recommendedDurationSeconds","listJson","files","filesWithType","file","isDefault","handleSelectAndUploadAudioFile","progressInterval","setInterval","clearInterval","result","saveSettings","newSettings","settingsToSave","saveVoiceConfig","configToSave","handleRecord","timestamp","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","fileName","replace","setTimeout","resultJson","handlePlayFile","filePath","handleShareFile","handleDeleteFile","confirm","setAsDefaultAudio","medicalDefault","updatedSettings","medicalEmergencyAudioPath","securityDefault","updatedFiles","formatFileSize","bytes","toFixed","formatTime","toLocaleString","formatDuration","milliseconds","seconds","floor","minutes","remainingSeconds","testTTS","Promise","resolve","stopTest","handleSettingChange","key","handleSave","xs","sm","flexWrap","flex","minWidth","flexShrink","padding","_","helperText","lineHeight","min","max","step","marks","valueLabelDisplay","valueLabelFormat","br","py","dense","index","Fragment","pl","primary","source","format","secondary","fileSize","createTime","mimeType","backgroundColor","strong","undefined","CheckCircle","CheckCircleIcon","ErrorIcon","Help","HelpIcon","SettingsIcon","RefreshIcon","Security","SecurityIcon","Info","InfoIcon","isRealInAndroid","PermissionStatusPanel","permissionsData","setPermissionsData","infoDialogOpen","setInfoDialogOpen","selectedPermission","setSelectedPermission","fetchPermissions","handleOpenSettings","permission","handleConfirmLockScreenPermission","handleShowPermissionInfo","handleCloseInfoDialog","getPermissionReason","reasonMap","getPermissionImpact","impactMap","getStatusIcon","iconProps","status","getStatusChip","statusConfig","granted","denied","unknown","px","getTypeLabel","typeLabels","runtime","special","vendor","minHeight","permissions","deviceBrand","apiLevel","borderLeft","borderLeftColor","bgcolor","canDetect","toLocaleTimeString","PaperProps","mx","pb","DialogContentText","Accordion","AccordionSummary","AccordionDetails","ExpandMore","ExpandMoreIcon","SensorMonitor","threshold","setThreshold","isMonitoring","setIsMonitoring","isSensorInfoDialogOpen","setSensorInfoDialogOpen","isForegroundServiceDialogOpen","setForegroundServiceDialogOpen","sensorCallbackRef","foregroundServiceCallbackRef","thresholdValue","parseFloat","readIsMonitoring","handleSetThreshold","isNaN","alert","handleToggleMonitoring","checkShowInfo","passed","checkShowSensorInfo","callback","info","checkShowForegroundServiceInfo","handleSensorDialog","handleForegroundServiceDialog","marginBottom","expandIcon","aria-controls","aria-labelledby","aria-describedby","AppShell","TabbarContainer","Grid2","NavBar","MeetingList","useRouter","Content","openInviteDialog","setOpenInviteDialog","router","maxItemLength","container","m","Home","titleConf","ns","navBar","PrivacyDialogDisplay","autoOpened","handleClose","def","agree","disagreeTime","useTranslation","HomeIcon","BottomNavigation","BottomNavigationAction","pathname","t","tabInfoList","showLabels","data-id","className","tmsEmergencyCallListAllInvitations","MEmcListAllInvitations","cancelOrRemoveInvitation","isReceived","tmsEmergencyCallRespondToInvite","MEmcRespondToInvite","listAllInvitations","suffix","location","href","indexOf","iframeSrc","setIframeSrc","iframeRef","handleMessage","contentWindow","sender","addEventListener","removeEventListener","aria-label","top","theme","palette","grey","iframe","CssBaseline","AndroidPageContent","BottomBar","left","children","height2"],"sourceRoot":"","ignoreList":[5]}