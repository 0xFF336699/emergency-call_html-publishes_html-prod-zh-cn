{"version":3,"file":"static/chunks/pages/contacts-1ddfb20124751314.js","mappings":"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","sources":["webpack://_N_E/./src/components/navbar/NavBar.tsx","webpack://_N_E/../../node_modules/.pnpm/react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3/node_modules/react-i18next/dist/es/index.js","webpack://_N_E/../../libs/fanfanlo/src/i18n/i18n-init.ts","webpack://_N_E/../../libs/fanfanlo/src/storage/store-page-context.tsx","webpack://_N_E/../../libs/app/ui/src/components/app/AppShell.tsx","webpack://_N_E/?32db","webpack://_N_E/./src/components/InvitationManager/InvitationManager.tsx","webpack://_N_E/../../libs/app/model/src/remote/emergency-call/list_established_contacts.ts","webpack://_N_E/./src/components/EstablishedContactsManager/EstablishedContactsManager.tsx","webpack://_N_E/./src/components/ContactRelationshipManager/ContactRelationshipManager.tsx","webpack://_N_E/./src/pages/contacts/index.tsx","webpack://_N_E/../../libs/app/ui/src/components/page/PageContent.tsx","webpack://_N_E/../../libs/app/ui/src/components/page/AndroidPageContent.tsx","webpack://_N_E/../../libs/app/model/src/remote/emergency-call/list_all_invitations.ts","webpack://_N_E/../../libs/app/ui/src/components/tabbar/Tabbar.tsx"],"sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { useTranslation } from \"@fanfanlo\";\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { BottomNavigation, BottomNavigationAction } from \"@mui/material\";\r\ninterface TabInfoType {\r\n  label: string;\r\n  value: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nexport function NavBar() {\r\n  const router = useRouter();\r\n  const { pathname } = router;\r\n  const { t } = useTranslation('emergency-call/components/navbar/content');\r\n  const tabInfoList: TabInfoType[] = [\r\n    { label: t('NavBar.home'), value: '/', icon: <HomeIcon /> },\r\n    // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n    // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n    { label: t('NavBar.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n  ];\r\n  return (\r\n\r\n    <BottomNavigation showLabels value={pathname}>\r\n      {tabInfoList.map(e => (\r\n        <BottomNavigationAction\r\n          key={e.value}\r\n          label={e.label}\r\n          icon={e.icon}\r\n          data-id={`tabbar-${e.value}`}\r\n          className={pathname === e.value ? 'Mui-selected' : ''}\r\n          onClick={() => {\r\n            if (pathname === e.value) return;\r\n            router.push(e.value);\r\n          }}\r\n        />\r\n      ))}\r\n    </BottomNavigation>\r\n  );\r\n}","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3\\\\node_modules\\\\react-i18next\\\\dist\\\\es\\\\index.js\"","\"use client\";\r\n// 现在用的是这个文件\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport Backend, { type HttpBackendOptions } from \"i18next-http-backend\";\r\n\r\nimport i18next from \"i18next\";\r\nimport { Log } from \"../log/Log\";\r\nimport { getBuildTime, isServer } from \"../nextjs/env/env\";\r\n;\r\nexport { useTranslation } from 'react-i18next';\r\nlet fileDateVersion:string = ''// = getConfig().publicRuntimeConfig?.version\r\nexport const i18nLogger = new Log(false, `i18n`);\r\nconst windowHref = (()=>{\r\n  if(typeof window === 'undefined')return ''\r\n  const u = new URL(window.location.href || window.parent?.location.href);\r\n  // 同域文本iframe里的页面会获取不到href，所以判断一下直接用父级的就行.\r\n  return u.origin == null || u.origin == 'null' ? '' : u.origin\r\n})()\r\nconst backendOptions = {\r\n  loadPath: function (lngs: string[], namespaces: string[]) {\r\n    const log = i18nLogger.sub(false, `i18n loadpath`);\r\n    log.pause = true;\r\n    const lng = lngs[0]\r\n    let p = ``\r\n    // p = `/options/_locales/${lngs[0].replace(\"-\", \"_\")}/messages.json`;\r\n    // p = `/locales/zh-CN/ns1/content.json`;\r\n    // p = `locales/${lng}/${namespaces[0]}.json?v=${fileDateVersion}`\r\n    const ps = namespaces[0].split('/')\r\n    ps.splice(ps.length - 1, 0, lng)\r\n    // p = `locales/${ps.join('/')}.json?v=${fileDateVersion}`\r\n    p = `locales/${ps.join('/')}.json?v=${getBuildTime()}`\r\n    log.log(`lngs=`, lngs);\r\n    log.log(`namespaces=`, namespaces);\r\n    log.log(\"p=\", p);\r\n    p = `${windowHref}/${p}`\r\n    log.log('windowHref p=', p)\r\n    return p;\r\n\r\n  },\r\n  parse: function (\r\n    data: string,\r\n    languages?: string | string[],\r\n    namespaces?: string | string[]\r\n  ) {\r\n    const log = i18nLogger.sub(false, `i18n backend parse`);\r\n    log.pause = true;\r\n    // log.log(`parrrse`, data, languages, namespaces);\r\n    const l = JSON.parse(data);\r\n    log.print(`before set i18ndata`);\r\n    // i18nData = l as II18n;\r\n    // log.log(`i18nData.rule.scripts.sys.rules`, i18nData.rule.scripts.sys.rules);\r\n    log.log(`parrrse`, languages, namespaces);\r\n    return l;\r\n  },\r\n};\r\nconst backend = new Backend();\r\nbackend.init(null, backendOptions);\r\nexport const i18n = i18next;\r\n// export const resources: Resource = {\r\n//   // 'zh-CN': {\r\n//   //   translation: _.merge({}, zhCN),\r\n//   // },\r\n//   // en: {\r\n//   //   translation: _.merge({}, en),\r\n//   // },\r\n// };\r\n\r\n\r\ni18n.on(\"languageChanged\", async function (lng) {\r\n  const log = i18nLogger.sub(false, `onlanguageChanged`);\r\n  log.pause = true;\r\n  log.log(`lllllng`, lng);\r\n  // lng = \"en\";\r\n  // const p = `/options/_locales/${lng.replace(\"-\", \"_\")}/messages.json`;\r\n});\r\n\r\n\r\n\r\n\r\nexport function i18nInit(_fileDateVersion:string=''){\r\n  fileDateVersion = _fileDateVersion\r\n  i18n\r\n  .use(LanguageDetector)\r\n  .use(backend)\r\n  .use(initReactI18next)\r\n  .init<HttpBackendOptions>({\r\n    load: \"currentOnly\",\r\n    // load: \"all\",\r\n    // supportedLngs: ['zh-CN', 'zh-TW', 'en', 'en-GB', 'ja'],\r\n    // resources,\r\n    fallbackLng: isServer ? \"en\" : \"zh-CN\",\r\n    // fallbackLng: \"zh-CN\",\r\n    // lng: \"zh-CN\",\r\n    partialBundledLanguages:true,\r\n    ns:[],\r\n    \r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    detection: {\r\n      caches: [\"localStorage\"],\r\n    },\r\n  });\r\n}\r\ni18n.on(\"missingKey\", function (lngs, namespace, key, res) {\r\n  console.error(\r\n    \"i18n mssing key, lngs=%s, namespace=%s, key=%s, res=%s\",\r\n    lngs,\r\n    namespace,\r\n    key,\r\n    res\r\n  );\r\n});\r\n\r\ni18n.on(\"loaded\", function (loaded) {\r\n  const log = i18nLogger.sub(false, `onloaded`);\r\n  log.pause = true;\r\n  log.log(`onloaded arguments`, loaded);\r\n});\r\n\r\ni18n.on(\"failedLoading\", function (lng, ns, msg) {\r\n  const log = i18nLogger.sub(false, `onfailedLoading`);\r\n  log.pause = true;\r\n  log.log(`failedLoading arguments`, lng, ns, msg);\r\n});\r\n\r\ni18n.on(\"added\", function () {\r\n  console.log('added', arguments)\r\n});   \r\n\r\nexport default i18n;","import { createContext } from \"react\";\r\nimport { storeUtils } from \"./store-utils\";\r\n// import { storeUtils } from \"./store\";\r\nconst s = storeUtils.namespace('store-page-context')\r\n\r\nexport interface IPageScrollPosition{\r\n    x:number\r\n    y:number\r\n}\r\n\r\nfunction create(){\r\n    return createContext(s)\r\n}\r\nexport const StorePageContext = createContext<any>(s)\r\n\r\nexport const StorePageDynamicContext = createContext<Record<string, any>>({})","'use client'\r\nimport { i18n, i18nInit, IPageScrollPosition, StorePageContext, StorePageDynamicContext, toProxy, watchUpdates, storeUtils } from \"@fanfanlo\";\r\nimport { useRouter } from \"next/router\";\r\nimport getConfig from \"node_modules/next/config\";\r\nimport { PropsWithChildren, useEffect } from \"react\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\n\r\ncheckReloadPage();\r\ni18nInit()\r\n\r\n\r\nfunction checkReloadPage(){\r\n  if(typeof window === 'undefined')return\r\n  if(getConfig().publicRuntimeConfig.isDevelopment){\r\n    return\r\n  }\r\n  // 帮我检测url中是否包含_htmlRefreshTime的参数\r\n  // 如果没有，则添加_htmlRefresTime的参数，值为当前时间的毫秒数\r\n  const searchParams = new URL(window.location.href).searchParams\r\n  const htmlRefreshTime = searchParams.get('_htmlRefreshTime')\r\n  if (!htmlRefreshTime) {\r\n    const newUrl = new URL(window.location.href)\r\n    newUrl.searchParams.set('_htmlRefreshTime', String(Date.now()))\r\n    window.location.href = newUrl.toString()\r\n    return\r\n  }\r\n\r\n  const refreshTime = Number(htmlRefreshTime)\r\n  if (refreshTime + 2 * 60 * 1000 < Date.now()) {\r\n    const newUrl = new URL(window.location.href)\r\n    newUrl.searchParams.set('_htmlRefreshTime', String(Date.now()))\r\n    window.location.href = newUrl.toString()\r\n  }\r\n}\r\nexport function AppShell({ children }: PropsWithChildren) {\r\n  const router = useRouter();\r\n  const scrollKey = 'scrollPositionInfo'\r\n  const href = window.location.href.split(\"#\")[0]\r\n  const dynamicKey = `dynamic-${href}`\r\n  const s = storeUtils.namespace(dynamicKey);\r\n  let o: Record<string, unknown>|undefined = s.read(dynamicKey)\r\n  if (!o) {\r\n    o = {}\r\n    s.write(dynamicKey, o)\r\n  }\r\n  o = toProxy(o)\r\n  useEffect(() => {\r\n\r\n    router.beforePopState((state) => {\r\n      s.clearAll()\r\n      return true\r\n    })\r\n  })\r\n  useEffect(() => {\r\n    s.write(dynamicKey, o)\r\n    return watchUpdates(o, () => {\r\n      s.write(dynamicKey, o)\r\n    })\r\n  }, [])\r\n  useEffect(() => {\r\n    const info = (s.read(scrollKey) || { x: 0, y: 0 }) as IPageScrollPosition\r\n    // console.log('app shell scroll info info = ', info)\r\n    if (info.x == 0 && info.y == 0) {\r\n      listenScroll()\r\n    } else {\r\n      window.requestAnimationFrame(() => {\r\n        window.scrollTo(info.x, info.y)\r\n        listenScroll()\r\n      })\r\n    }\r\n    function onScroll(e: Event) {\r\n      // console.log('app shell on scroll', { x: window.scrollX, y: window.scrollY })\r\n      s.write(scrollKey, { x: window.scrollX, y: window.scrollY })\r\n    }\r\n    function listenScroll() {\r\n      window.addEventListener('scroll', onScroll)\r\n    }\r\n\r\n    function unsub() {\r\n      window.removeEventListener('scroll', onScroll)\r\n    }\r\n    return unsub\r\n  });\r\n  return (\r\n    <StorePageContext value={s}>\r\n      <StorePageDynamicContext value={o}>\r\n\r\n        <I18nextProvider i18n={i18n}>\r\n          {children}\r\n        </I18nextProvider>\r\n      </StorePageDynamicContext>\r\n    </StorePageContext>\r\n  )\r\n}","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/contacts\",\n      function () {\n        return require(\"private-next-pages/contacts/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/contacts\"])\n      });\n    }\n  ","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  CircularProgress,\n  Divider,\n  Avatar,\n  Chip,\n  Paper,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from '@mui/material';\nimport {\n  Check as CheckIcon,\n  Close as CloseIcon,\n  AccessTime as AccessTimeIcon,\n  PersonAdd as PersonAddIcon,\n  Person as PersonIcon,\n  Refresh as RefreshIcon,\n  PersonRemove as PersonRemoveIcon,\n  HourglassEmpty as HourglassEmptyIcon,\n} from '@mui/icons-material';\nimport { formatDistanceToNow } from 'date-fns';\nimport { zhCN } from 'date-fns/locale';\nimport { emergencyCallInvitationService, cancelOrRemoveInvitation, InviteStatus } from '@app/model';\n\n// 定义请求处理器类型\ntype RequestHandler<T = any> = {\n  onSuccess: (res: T) => void;\n  onError: (err: Error) => void;\n};\n\n// 定义邀请接口\ninterface IInvitation {\n  invitation_id: string;\n  user_info: {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n  };\n  message?: string;\n  status: InviteStatus;\n  expires_at: number;\n  created_at: string;\n}\n\n// 定义 API 响应类型\ninterface IApiResponse<T = any> {\n  shellIsOk: boolean;\n  dataIsOk: boolean;\n  data?: {\n    is_ok: boolean;\n    msg?: string;\n    sent_invitations?: IInvitation[];\n    received_invitations?: IInvitation[];\n  } & T;\n}\n\n// 获取状态标签的配置\nconst getStatusConfig = (status: InviteStatus, expiresAt: number) => {\n  const isExpired = new Date(expiresAt * 1000) < new Date();\n  const statusTexts: Record<InviteStatus, string> = {\n    pending: '等待处理',\n    accepted: '已接受',\n    declined: '已拒绝',\n    expired: '已过期',\n    cancelled: '已取消',\n  };\n\n  const statusColors: Record<InviteStatus, 'default' | 'primary' | 'success' | 'error' | 'warning'> = {\n    pending: 'primary',\n    accepted: 'success',\n    declined: 'error',\n    expired: 'default',\n    cancelled: 'default',\n  };\n\n  return {\n    text: statusTexts[status] || status,\n    color: statusColors[status] || 'default',\n    isExpired,\n    showExpiry: status === 'pending' && !isExpired,\n  };\n};\n\n// 邀请状态标签组件\nfunction InvitationStatusChip({ status, expiresAt }: { status: InviteStatus; expiresAt: number }) {\n  const config = getStatusConfig(status, expiresAt);\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" gap={1}>\n      <Chip size=\"small\" label={config.text} color={config.color} variant=\"outlined\" />\n      {config.showExpiry && (\n        <Chip\n          size=\"small\"\n          icon={<AccessTimeIcon fontSize=\"small\" />}\n          label={`${formatDistanceToNow(expiresAt * 1000, {\n            addSuffix: true,\n            locale: zhCN,\n          })}`}\n          color=\"primary\"\n          variant=\"outlined\"\n        />\n      )}\n    </Box>\n  );\n}\n\n// 用户信息卡片组件\nfunction UserInfoCard({\n  userInfo,\n  message,\n  status,\n  expiresAt,\n  isReceived = false,\n  onRespond,\n  isProcessing = false,\n}: {\n  userInfo: { user_id: string; display_name: string; avatar_url?: string };\n  message?: string;\n  status: string;\n  expiresAt: number;\n  isReceived?: boolean;\n  onRespond?: (action: 'accept' | 'decline' | 'cancel' | 'remove') => Promise<void>;\n  isProcessing?: boolean;\n}) {\n  const [isProcessingAction, setIsProcessingAction] = useState(false);\n\n  const handleRespond = async (action: 'accept' | 'decline' | 'cancel' | 'remove') => {\n    if (!onRespond) return;\n\n    try {\n      setIsProcessingAction(true);\n      await onRespond(action);\n    } finally {\n      setIsProcessingAction(false);\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\" sx={{ mb: 2, opacity: isProcessing ? 0.7 : 1 }}>\n      <CardContent>\n        <Box display=\"flex\" alignItems=\"center\" mb={1}>\n          <Avatar src={userInfo.avatar_url} alt={userInfo.display_name} sx={{ width: 40, height: 40, mr: 2 }}>\n            {userInfo.display_name?.[0]?.toUpperCase() || '?'}\n          </Avatar>\n          <Box flexGrow={1}>\n            <Typography variant=\"subtitle1\">{userInfo.display_name || '未知用户'}</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              ID: {userInfo.user_id}\n            </Typography>\n          </Box>\n          <InvitationStatusChip status={status} expiresAt={expiresAt} />\n        </Box>\n\n        {message && (\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1, mb: 1 }}>\n            {message}\n          </Typography>\n        )}\n      </CardContent>\n\n      {isReceived ? (\n        // 接收的邀请\n        <CardActions sx={{ justifyContent: 'flex-end', pt: 0 }}>\n          {status === 'pending' ? (\n            // 待处理的邀请：显示接受/拒绝按钮\n            <>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                startIcon={<CloseIcon />}\n                onClick={() => handleRespond('decline')}\n                disabled={isProcessing || isProcessingAction}>\n                拒绝\n              </Button>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"contained\"\n                startIcon={<CheckIcon />}\n                onClick={() => handleRespond('accept')}\n                disabled={isProcessing || isProcessingAction}>\n                接受\n              </Button>\n            </>\n          ) : status === 'accepted' ? (\n            // 已接受的邀请：显示解除关系按钮\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"outlined\"\n              startIcon={<PersonIcon />}\n              onClick={() => handleRespond('remove')}\n              disabled={isProcessing || isProcessingAction}>\n              解除关系\n            </Button>\n          ) : null}\n        </CardActions>\n      ) : status === 'pending' || status === 'accepted' ? (\n        // 发送的邀请：显示取消或解除关系按钮\n        <CardActions sx={{ justifyContent: 'flex-end', pt: 0 }}>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"outlined\"\n            startIcon={<CloseIcon />}\n            onClick={() => handleRespond('cancel')}\n            disabled={isProcessing || isProcessingAction}>\n            {status === 'pending' ? '取消邀请' : '解除关系'}\n          </Button>\n        </CardActions>\n      ) : null}\n    </Card>\n  );\n}\n\nconst InvitationManager: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isRefreshing, setIsRefreshing] = useState<boolean>(false);\n  const [invitations, setInvitations] = useState<{\n    sent: IInvitation[];\n    received: IInvitation[];\n  }>({ sent: [], received: [] });\n  const [isProcessing, setIsProcessing] = useState<boolean>(false);\n\n  // 加载邀请列表\n  const loadInvitations = useCallback(async (showLoading = true) => {\n    if (showLoading) {\n      setIsLoading(true);\n    } else {\n      setIsRefreshing(true);\n    }\n    setError(null);\n\n    try {\n      const res = await emergencyCallInvitationService.listAllInvitations({\n        params: {},\n      } as any);\n      \n      if (res.shellIsOk && res.dataIsOk && res.data?.is_ok) {\n        setInvitations({\n          sent: (res.data.sent_invitations || []).map((invite: any) => ({\n            ...invite,\n            status: invite.status as InviteStatus,\n          })),\n          received: (res.data.received_invitations || []).map((invite: any) => ({\n            ...invite,\n            status: invite.status as InviteStatus,\n          })),\n        });\n      } else {\n        setError(res.data?.msg || '加载邀请列表失败');\n      }\n    } catch (err) {\n      console.error('加载邀请列表异常:', err);\n      setError('发生未知错误');\n    } finally {\n      setIsLoading(false);\n      setIsRefreshing(false);\n    }\n  }, []);\n\n  // 处理取消或删除邀请\n  const handleCancelOrRemove = useCallback(\n    async (invitationId: string, isReceived: boolean) => {\n      try {\n        setIsProcessing(true);\n\n        const res = await cancelOrRemoveInvitation(invitationId, isReceived);\n        if (!res.shellIsOk || !res.dataIsOk || !res.data?.is_ok) {\n          throw new Error(res.data?.msg || '操作失败');\n        }\n        // 直接更新状态\n        setInvitations(prev => ({\n          sent: prev.sent.filter(i => i.invitation_id !== invitationId),\n          received: prev.received.filter(i => i.invitation_id !== invitationId),\n        }));\n      } catch (err) {\n        console.error('处理邀请失败:', err);\n        setError(err instanceof Error ? err.message : '操作失败，请重试');\n      } finally {\n        setIsProcessing(false);\n      }\n    },\n    [],\n  );\n\n  // 响应邀请\n  const handleRespondToInvite = useCallback(\n    async (invitationId: string, action: 'accept' | 'decline' | 'cancel' | 'remove'): Promise<void> => {\n      try {\n        setIsProcessing(true);\n\n        if (action === 'accept' || action === 'decline') {\n          // 接受或拒绝邀请\n          const res = await emergencyCallInvitationService.respondToInvite({\n            params: { invitation_id: invitationId, action },\n          } as any);\n\n          if (!res.shellIsOk || !res.dataIsOk || !res.data?.is_ok) {\n            throw new Error(res.data?.msg || '操作失败');\n          }\n          \n          // 直接更新状态\n          setInvitations(prev => {\n            const updateInvitation = (invites: IInvitation[]) =>\n              invites.map(invite =>\n                invite.invitation_id === invitationId\n                  ? {\n                      ...invite,\n                      status: action === 'accept' ? 'accepted' : ('declined' as InviteStatus),\n                    }\n                  : invite,\n              );\n\n            return {\n              sent: updateInvitation(prev.sent),\n              received: updateInvitation(prev.received),\n            };\n          });\n        } else {\n          // 取消邀请或解除关系\n          const isReceived = action === 'remove';\n          await handleCancelOrRemove(invitationId, isReceived);\n        }\n      } catch (err) {\n        console.error('处理邀请失败:', err);\n        setError(err instanceof Error ? err.message : '操作失败，请重试');\n      } finally {\n        setIsProcessing(false);\n      }\n    },\n    [handleCancelOrRemove],\n  );\n\n  // 处理刷新\n  const handleRefresh = useCallback(() => {\n    loadInvitations(false);\n  }, [loadInvitations]);\n\n  // 组件加载时获取数据\n  useEffect(() => {\n    loadInvitations();\n  }, [loadInvitations]);\n\n  const renderContent = () => {\n    if (isLoading) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" p={4}>\n          <CircularProgress />\n        </Box>\n      );\n    }\n\n    if (error) {\n      return (\n        <Box p={2}>\n          <Typography color=\"error\">{error}</Typography>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => loadInvitations()} startIcon={<RefreshIcon />}>\n            重试\n          </Button>\n        </Box>\n      );\n    }\n\n    const hasSentInvitations = invitations.sent.length > 0;\n    const hasReceivedInvitations = invitations.received.length > 0;\n\n    return (\n      <Box>\n        <Typography variant=\"h6\" gutterBottom>\n          收到的邀请\n        </Typography>\n        {hasReceivedInvitations ? (\n          <Box mb={4}>\n            {invitations.received.map(invite => (\n              <UserInfoCard\n                key={`received-${invite.invitation_id}`}\n                userInfo={invite.user_info}\n                message={invite.message}\n                status={invite.status as InviteStatus}\n                expiresAt={invite.expires_at}\n                isReceived={true}\n                onRespond={async action => {\n                  if (action === 'remove') {\n                    await handleCancelOrRemove(invite.invitation_id, true);\n                  } else if (action === 'cancel') {\n                    await handleCancelOrRemove(invite.invitation_id, false);\n                  } else {\n                    await handleRespondToInvite(invite.invitation_id, action);\n                  }\n                }}\n                isProcessing={isRefreshing || isProcessing}\n              />\n            ))}\n          </Box>\n        ) : (\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            p={4}\n            textAlign=\"center\"\n            bgcolor=\"action.hover\"\n            borderRadius={1}\n            mb={4}>\n            <PersonIcon color=\"disabled\" sx={{ fontSize: 48, mb: 1 }} />\n            <Typography color=\"textSecondary\">暂无收到的邀请</Typography>\n          </Box>\n        )}\n\n        <Typography variant=\"h6\" gutterBottom>\n          已发送的邀请\n        </Typography>\n        {hasSentInvitations ? (\n          <Box>\n            {invitations.sent.map(invite => (\n              <UserInfoCard\n                key={`sent-${invite.invitation_id}`}\n                userInfo={invite.user_info}\n                message={invite.message}\n                status={invite.status as InviteStatus}\n                expiresAt={invite.expires_at}\n                isReceived={false}\n                onRespond={async action => {\n                  if (action === 'cancel') {\n                    await handleCancelOrRemove(invite.invitation_id, false);\n                  }\n                }}\n                isProcessing={isRefreshing || isProcessing}\n              />\n            ))}\n          </Box>\n        ) : (\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            p={4}\n            textAlign=\"center\"\n            bgcolor=\"action.hover\"\n            borderRadius={1}>\n            <PersonIcon color=\"disabled\" sx={{ fontSize: 48, mb: 1 }} />\n            <Typography color=\"textSecondary\">暂无已发送的邀请</Typography>\n          </Box>\n        )}\n      </Box>\n    );\n  };\n\n  return (\n    <Box p={2}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n        <Typography variant=\"h5\">紧急联系人邀请</Typography>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleRefresh}\n          disabled={isRefreshing}\n          startIcon={isRefreshing ? <CircularProgress size={20} /> : <RefreshIcon />}>\n          {isRefreshing ? '刷新中...' : '刷新'}\n        </Button>\n      </Box>\n      {renderContent()}\n    </Box>\n  );\n};\n\nexport default InvitationManager;\n","import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { request } from \"@fanfanlo\";\n\n/**\n * 获取已建立联系人关系的请求参数\n */\nexport interface IParamsListEstablishedContacts {\n  // 可以添加分页等参数\n  page?: number;\n  page_size?: number;\n}\n\n/**\n * 已建立联系人的用户信息\n */\nexport interface IEstablishedContactUserInfo {\n  user_id: string;\n  display_name: string;\n  avatar_url?: string;\n}\n\n/**\n * 已建立的联系人关系信息\n */\nexport interface IEstablishedContactInfo {\n  contact_id: string;\n  user_info: IEstablishedContactUserInfo;\n  relationship: string;\n  notes?: string;\n  created_at: number;\n  is_active: boolean;\n}\n\n/**\n * 获取已建立联系人关系的响应结果\n */\nexport interface IResultListEstablishedContacts {\n  is_ok: boolean;\n  msg?: string;\n  contacts: IEstablishedContactInfo[];\n}\n\n/**\n * 移除已建立联系人关系的请求参数\n */\nexport interface IParamsRemoveEstablishedContact {\n  contact_id: string;\n}\n\n/**\n * 移除已建立联系人关系的响应结果\n */\nexport interface IResultRemoveEstablishedContact {\n  is_ok: boolean;\n  msg?: string;\n}\n\n/**\n * 获取已建立的联系人关系\n */\nexport async function tmsEmergencyCallListEstablishedContacts(\n  opts: IRequestOptions<IParamsListEstablishedContacts>\n) {\n  return request<IResultListEstablishedContacts, IParamsListEstablishedContacts>(\n    tms.TEmc,\n    tms.MEmcListEstablishedContacts,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n/**\n * 移除已建立的联系人关系\n */\nexport async function tmsEmergencyCallRemoveEstablishedContact(\n  opts: IRequestOptions<IParamsRemoveEstablishedContact>\n) {\n  return request<IResultRemoveEstablishedContact, IParamsRemoveEstablishedContact>(\n    tms.TEmc,\n    tms.MEmcRemoveEstablishedContact,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出服务\nexport const emergencyCallContactService = {\n  listEstablishedContacts: tmsEmergencyCallListEstablishedContacts,\n  removeEstablishedContact: tmsEmergencyCallRemoveEstablishedContact,\n};\n\nexport default emergencyCallContactService;","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  CircularProgress,\n  Divider,\n  Avatar,\n  Chip,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n} from '@mui/material';\nimport {\n  Person as PersonIcon,\n  Refresh as RefreshIcon,\n  PersonRemove as PersonRemoveIcon,\n  AccessTime as AccessTimeIcon,\n  ContactPhone as ContactPhoneIcon,\n} from '@mui/icons-material';\nimport { formatDistanceToNow } from 'date-fns';\nimport { zhCN } from 'date-fns/locale';\nimport { emergencyCallContactService, IEstablishedContactInfo, user } from '@app/model';\nimport { useProxyWatch } from '@fanfanlo';\n\n// 定义请求处理器类型\ntype RequestHandler<T = any> = {\n  onData: (res: T) => void;\n  onError: (err: Error) => void;\n};\n\n// 定义 API 响应类型\ninterface IApiResponse<T = any> {\n  shellIsOk: boolean;\n  dataIsOk: boolean;\n  data?: {\n    is_ok: boolean;\n    msg?: string;\n    contacts?: IEstablishedContactInfo[];\n  } & T;\n}\n\n// 联系人卡片组件\nfunction ContactCard({\n  contact,\n  onRemove,\n  isProcessing = false,\n}: {\n  contact: IEstablishedContactInfo;\n  onRemove?: (contactId: string) => Promise<void>;\n  isProcessing?: boolean;\n}) {\n  const [isRemoving, setIsRemoving] = useState(false);\n  const [showRemoveDialog, setShowRemoveDialog] = useState(false);\n\n  const handleRemove = async () => {\n    if (!onRemove) return;\n\n    try {\n      setIsRemoving(true);\n      await onRemove(contact.contact_id);\n      setShowRemoveDialog(false);\n    } finally {\n      setIsRemoving(false);\n    }\n  };\n\n  return (\n    <>\n      <Card variant=\"outlined\" sx={{ mb: 2, opacity: isProcessing ? 0.7 : 1 }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n            <Avatar\n              src={contact.user_info.avatar_url}\n              alt={contact.user_info.display_name}\n              sx={{ width: 50, height: 50, mr: 2 }}>\n              {contact.user_info.display_name?.[0]?.toUpperCase() || '?'}\n            </Avatar>\n            <Box flexGrow={1}>\n              <Typography variant=\"h6\">{contact.user_info.display_name || '未知用户'}</Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                ID: {contact.user_info.user_id}\n              </Typography>\n              {contact.relationship && (\n                <Chip size=\"small\" label={contact.relationship} color=\"primary\" variant=\"outlined\" sx={{ mt: 0.5 }} />\n              )}\n            </Box>\n            <Box textAlign=\"right\">\n              <Chip\n                size=\"small\"\n                icon={<AccessTimeIcon fontSize=\"small\" />}\n                label={`${formatDistanceToNow(contact.created_at * 1000, {\n                  addSuffix: true,\n                  locale: zhCN,\n                })}`}\n                color=\"default\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </Box>\n\n          {contact.notes && (\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n              备注: {contact.notes}\n            </Typography>\n          )}\n        </CardContent>\n\n        <CardActions sx={{ justifyContent: 'flex-end', pt: 0 }}>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"outlined\"\n            startIcon={<PersonRemoveIcon />}\n            onClick={() => setShowRemoveDialog(true)}\n            disabled={isProcessing || isRemoving}>\n            解除关系\n          </Button>\n        </CardActions>\n      </Card>\n\n      {/* 删除确认对话框 */}\n      <Dialog\n        open={showRemoveDialog}\n        onClose={() => setShowRemoveDialog(false)}\n        aria-labelledby=\"remove-contact-dialog\">\n        <DialogTitle id=\"remove-contact-dialog\">确认解除联系人关系</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            您确定要与 <strong>{contact.user_info.display_name}</strong> 解除紧急联系人关系吗？ 此操作不可撤销。\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowRemoveDialog(false)} disabled={isRemoving}>\n            取消\n          </Button>\n          <Button\n            onClick={handleRemove}\n            color=\"error\"\n            variant=\"contained\"\n            disabled={isRemoving}\n            startIcon={isRemoving ? <CircularProgress size={16} /> : <PersonRemoveIcon />}>\n            {isRemoving ? '处理中...' : '确认解除'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nconst EstablishedContactsManager: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isRefreshing, setIsRefreshing] = useState<boolean>(false);\n  const [contacts, setContacts] = useState<IEstablishedContactInfo[]>([]);\n  const [isProcessing, setIsProcessing] = useState<boolean>(false);\n\n  // 加载已建立的联系人关系\n  const loadEstablishedContacts = useCallback(async (showLoading = true) => {\n    if (showLoading) {\n      setIsLoading(true);\n    } else {\n      setIsRefreshing(true);\n    }\n    setError(null);\n\n    try {\n      const res = await emergencyCallContactService.listEstablishedContacts({\n        params: {},\n      } as any);\n      if (res.shellIsOk && res.dataIsOk && res.data?.is_ok) {\n        setContacts(res.data.contacts || []);\n      } else {\n        setError(res.data?.msg || '加载联系人列表失败');\n      }\n    } catch (err) {\n      console.error('加载联系人列表异常:', err);\n      setError('发生未知错误');\n    } finally {\n      setIsLoading(false);\n      setIsRefreshing(false);\n    }\n  }, []);\n\n  // 移除联系人关系\n  const handleRemoveContact = useCallback(async (contactId: string): Promise<void> => {\n    try {\n      setIsProcessing(true);\n\n      const res = await emergencyCallContactService.removeEstablishedContact({\n        params: { contact_id: contactId },\n        // handler,\n      } as any);\n\n      if (!res.shellIsOk || !res.dataIsOk || !res.data?.is_ok) {\n        throw new Error(res.data?.msg || '移除联系人失败');\n      }\n      // 从本地状态中移除\n      setContacts(prev => prev.filter(contact => contact.contact_id !== contactId));\n    } catch (err) {\n      console.error('移除联系人失败:', err);\n      setError(err instanceof Error ? err.message : '移除联系人失败，请重试');\n    } finally {\n      setIsProcessing(false);\n    }\n  }, []);\n\n  // 处理刷新\n  const handleRefresh = useCallback(() => {\n    loadEstablishedContacts(false);\n  }, [loadEstablishedContacts]);\n\n  // 组件加载时获取数据\n  useEffect(() => {\n    loadEstablishedContacts();\n  }, [loadEstablishedContacts]);\n\n  const renderContent = () => {\n    if (isLoading) {\n      return (\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" p={4}>\n          <CircularProgress />\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\n            加载中...\n          </Typography>\n        </Box>\n      );\n    }\n\n    if (error) {\n      return (\n        <Box p={2}>\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => loadEstablishedContacts()}\n            startIcon={<RefreshIcon />}>\n            重试\n          </Button>\n        </Box>\n      );\n    }\n\n    if (contacts.length === 0) {\n      return (\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          p={4}\n          textAlign=\"center\"\n          bgcolor=\"action.hover\"\n          borderRadius={1}>\n          <ContactPhoneIcon color=\"disabled\" sx={{ fontSize: 64, mb: 2 }} />\n          <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n            暂无紧急联系人\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            您还没有建立任何紧急联系人关系\n          </Typography>\n        </Box>\n      );\n    }\n\n    return (\n      <Box>\n        {contacts.map(contact => (\n          <ContactCard\n            key={contact.contact_id}\n            contact={contact}\n            onRemove={handleRemoveContact}\n            isProcessing={isRefreshing || isProcessing}\n          />\n        ))}\n      </Box>\n    );\n  };\n\n  return (\n    <Box p={2}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Box>\n          <Typography variant=\"h5\" gutterBottom>\n            我的紧急联系人\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            管理您已建立的紧急联系人关系\n          </Typography>\n        </Box>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleRefresh}\n          disabled={isRefreshing}\n          startIcon={isRefreshing ? <CircularProgress size={20} /> : <RefreshIcon />}>\n          {isRefreshing ? '刷新中...' : '刷新'}\n        </Button>\n      </Box>\n\n      {contacts.length > 0 && (\n        <Alert severity=\"info\" sx={{ mb: 2 }}>\n          共有 {contacts.length} 个紧急联系人\n        </Alert>\n      )}\n\n      {renderContent()}\n    </Box>\n  );\n};\n\nexport default EstablishedContactsManager;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  Paper,\n  Divider\n} from '@mui/material';\nimport {\n  People as PeopleIcon,\n  PersonAdd as PersonAddIcon,\n  ContactPhone as ContactPhoneIcon\n} from '@mui/icons-material';\n\nimport InvitationManager from '../InvitationManager/InvitationManager';\nimport EstablishedContactsManager from '../EstablishedContactsManager/EstablishedContactsManager';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`contact-tabpanel-${index}`}\n      aria-labelledby={`contact-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `contact-tab-${index}`,\n    'aria-controls': `contact-tabpanel-${index}`,\n  };\n}\n\nconst ContactRelationshipManager: React.FC = () => {\n  const [currentTab, setCurrentTab] = useState(0);\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setCurrentTab(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%', maxWidth: 800, mx: 'auto', p: 2 }}>\n      {/* 页面标题 */}\n      <Box mb={3} textAlign=\"center\">\n        <Typography variant=\"h4\" gutterBottom>\n          联系人关系管理\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          管理您的紧急联系人邀请和已建立的关系\n        </Typography>\n      </Box>\n\n      <Paper elevation={2}>\n        {/* 标签导航 */}\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs \n            value={currentTab} \n            onChange={handleTabChange}\n            aria-label=\"联系人管理标签\"\n            variant=\"fullWidth\"\n          >\n            <Tab \n              icon={<ContactPhoneIcon />}\n              label=\"我的联系人\" \n              {...a11yProps(0)}\n            />\n            <Tab \n              icon={<PersonAddIcon />}\n              label=\"邀请管理\" \n              {...a11yProps(1)}\n            />\n          </Tabs>\n        </Box>\n\n        {/* 标签内容 */}\n        <TabPanel value={currentTab} index={0}>\n          <EstablishedContactsManager />\n        </TabPanel>\n        \n        <TabPanel value={currentTab} index={1}>\n          <InvitationManager />\n        </TabPanel>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default ContactRelationshipManager;","import { AppShell, TabbarContainer } from \"@app/ui\";\nimport { NavBar } from \"@src/components/navbar/NavBar\";\nimport ContactRelationshipManager from \"@src/components/ContactRelationshipManager/ContactRelationshipManager\";\n\nexport default function ContactsPage() {\n    return (\n        <AppShell>\n            <TabbarContainer \n                titleConf={{ ns: \"emergency-call/pages/contacts/content\", key: \"content.title\" }}\n                navBar={<NavBar/>}\n            >\n                <ContactRelationshipManager />\n            </TabbarContainer>\n        </AppShell>\n    )\n}","import { Box, Button, Container } from '@mui/material';\r\nimport { createContext, PropsWithChildren, useContext, useEffect } from 'react';\r\nimport { ITitleI18nConf, ITitleI18nNsConf, ITitleI18nTitleConf } from '.';\r\nimport { isBuild, isDev, isServer, loadI18nValue, publicRuntimeConfig } from '@fanfanlo';\r\nimport { read } from 'fs';\r\nimport { useTranslation } from '@fanfanlo';\r\n\r\n\r\nfunction Reload(){\r\n  if(!isDev)return <>  </>\r\n  const {t} = useTranslation(\"app-ui/components/page/content\")\r\n  return(\r\n    <Box>\r\n      <Button onClick={() => {window.location.reload()}}>{t(\"PageContent.refresh\")}</Button>\r\n      {new Date().toLocaleString()}\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst ScrollP = createContext({ x: 0, y: 0 });\r\nlet index = 0;\r\nexport default function PageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren) {\r\n  index++;\r\n  const scroll = useContext(ScrollP);\r\n  const clazz = `${Date.now() + Math.random() * Date.now()}`;\r\n  useEffect(()=>{\r\n    async function loadTitle(){\r\n      if(!titleConf)return\r\n      let title = titleConf.title\r\n      if(titleConf.ns){\r\n        title = await loadI18nValue(titleConf.ns, titleConf.key || \"content.title\")\r\n      }\r\n      if(!title)return\r\n      document.title = title\r\n    }\r\n    loadTitle()\r\n  }, [])\r\n  useEffect(() => {\r\n    const container = document.getElementsByClassName(clazz)[0];\r\n    if (!container) return;\r\n    container.scrollTop = scroll.y;\r\n    const onScroll = () => {\r\n      var scrollTop = container.scrollTop;\r\n      scroll.y = scrollTop;\r\n    };\r\n    container.removeEventListener('scroll', onScroll);\r\n    container.addEventListener('scroll', onScroll, { passive: true });\r\n    return () => container.removeEventListener('scroll', onScroll);\r\n  }, [clazz, scroll]);\r\n  return (\r\n\r\n    <Container className={clazz} sx={{ flexGrow: 1, overflow: 'auto', padding: \"0px\" }}>\r\n      <Box>\r\n        {(reload || (reload == undefined)) && <Reload />}\r\n        \r\n        {children}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { PropsWithChildren } from \"react\";\r\nimport PageContent from \"./PageContent\";\r\nimport { ITitleI18nConf } from \".\";\r\nexport default function AndroidPageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren)  {\r\n    return (\r\n        <PageContent titleConf={titleConf} reload={reload}>\r\n            {children}\r\n        </PageContent>\r\n    )\r\n}\r\n","import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { IRequestHandler, request } from \"@fanfanlo\";\n\n/**\n * 获取所有邀请的请求参数\n */\nexport interface IParamsListAllInvitations {\n  // 可以添加分页等参数\n  page?: number;\n  page_size?: number;\n}\n\n/**\n * 用户信息\n */\nexport interface IInvitationUserInfo {\n  user_id: string;\n  display_name: string;\n  avatar_url?: string;\n}\n\n// 邀请状态类型\nexport type InviteStatus = 'pending' | 'accepted' | 'declined' | 'expired' | 'cancelled';\n\n// 邀请记录详情\nexport interface IInvitationDetails {\n  invitation_id: string;\n  user_info: {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n  };\n  status: InviteStatus;\n  message: string;\n  created_at: number;\n  expires_at: number;\n}\n\n/**\n * 获取所有邀请的响应结果\n */\nexport interface IResultListAllInvitations {\n  is_ok: boolean;\n  msg?: string;\n  sent_invitations: IInvitationDetails[];\n  received_invitations: IInvitationDetails[];\n}\n\n/**\n * 响应邀请的请求参数\n */\nexport interface IParamsRespondToInvite {\n  invitation_id: string;\n  action: 'accept' | 'decline' | 'cancel' | 'remove';\n}\n\n/**\n * 获取所有邀请（发送和接收的）\n */\nexport async function tmsEmergencyCallListAllInvitations(\n  opts: IRequestOptions<IParamsListAllInvitations>\n) {\n  return request<IResultListAllInvitations, IParamsListAllInvitations>(\n    tms.TEmc,\n    tms.MEmcListAllInvitations,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n/**\n * 取消或删除邀请\n * @param invitationId 邀请ID\n * @param isReceived 是否是接收的邀请\n * @returns Promise\n */\nexport async function cancelOrRemoveInvitation(\n  invitationId: string,\n  isReceived: boolean\n) {\n  const action = isReceived ? 'remove' : 'cancel';\n  return emergencyCallInvitationService.respondToInvite({\n    params: {\n      invitation_id: invitationId,\n      action\n    }\n  } as any);\n}\n\n/**\n * 响应邀请\n */\nexport async function tmsEmergencyCallRespondToInvite(\n  opts: IRequestOptions<IParamsRespondToInvite>\n) {\n  return request<{ is_ok: boolean; msg?: string }, IParamsRespondToInvite>(\n    tms.TEmc,\n    tms.MEmcRespondToInvite,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出所有接口\nexport const emergencyCallInvitationService = {\n  listAllInvitations: tmsEmergencyCallListAllInvitations,\n  respondToInvite: tmsEmergencyCallRespondToInvite,\n};\n\nexport default emergencyCallInvitationService;\n","'use client';\r\nimport { BottomNavigation, BottomNavigationAction, Box, CssBaseline, Paper, Stack } from '@mui/material';\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport StorefrontIcon from '@mui/icons-material/Storefront';\r\nimport { useRouter } from 'next/router';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ITitleI18nConf } from '../page';\r\nimport AndroidPageContent from '../page/AndroidPageContent';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\n// interface TabInfoType {\r\n//   label: string;\r\n//   value: string;\r\n//   icon: React.ReactNode;\r\n// }\r\n\r\nfunction BottomBar({navBar}:{navBar?:React.ReactNode}) {\r\n  return <Paper\r\n    id=\"bottom-navigation\"\r\n    sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }}\r\n    elevation={3}>\r\n    {/* <NavBar /> */}\r\n    {navBar}\r\n  </Paper>;\r\n}\r\n// function NavBar() {\r\n//   const router = useRouter();\r\n//   const { pathname } = router;\r\n//   const { t } = useTranslation('app-ui/components/tabbar/content');\r\n//   const tabInfoList: TabInfoType[] = [\r\n//     { label: t('content.home'), value: '/', icon: <HomeIcon /> },\r\n//     // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n//     // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n//     { label: t('content.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n//   ];\r\n//   return (\r\n\r\n//     <BottomNavigation showLabels value={pathname}>\r\n//       {tabInfoList.map(e => (\r\n//         <BottomNavigationAction\r\n//           key={e.value}\r\n//           label={e.label}\r\n//           icon={e.icon}\r\n//           data-id={`tabbar-${e.value}`}\r\n//           className={pathname === e.value ? 'Mui-selected' : ''}\r\n//           onClick={() => {\r\n//             if (pathname === e.value) return;\r\n//             router.push(e.value);\r\n//           }}\r\n//         />\r\n//       ))}\r\n//     </BottomNavigation>\r\n//   );\r\n// }\r\n\r\n\r\n// testWatchUpdates()\r\nexport function TabbarContainer({ children, titleConf, navBar }: {titleConf?:ITitleI18nConf, navBar:React.ReactNode} & PropsWithChildren)  {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', height2: '100vh' }}>\r\n      <CssBaseline />\r\n      <Stack direction={\"column\"} spacing={3}\r\n      \r\n      >\r\n        <AndroidPageContent titleConf={titleConf}>\r\n          {children}\r\n        </AndroidPageContent>\r\n        <BottomBar navBar={navBar} />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\n"],"names":["useRouter","useTranslation","HomeIcon","SettingsIcon","BottomNavigation","BottomNavigationAction","NavBar","router","pathname","t","tabInfoList","label","value","icon","showLabels","map","e","data-id","className","onClick","push","initReactI18next","LanguageDetector","Backend","i18next","Log","getBuildTime","isServer","fileDateVersion","i18nLogger","windowHref","window","u","URL","location","href","parent","origin","backendOptions","loadPath","lngs","namespaces","log","sub","pause","lng","p","ps","split","splice","length","join","parse","data","languages","l","JSON","print","backend","init","i18n","on","i18nInit","_fileDateVersion","use","load","fallbackLng","partialBundledLanguages","ns","debug","interpolation","escapeValue","detection","caches","namespace","key","res","console","error","loaded","msg","arguments","createContext","storeUtils","s","create","StorePageContext","StorePageDynamicContext","toProxy","watchUpdates","getConfig","useEffect","I18nextProvider","checkReloadPage","publicRuntimeConfig","isDevelopment","searchParams","htmlRefreshTime","get","newUrl","set","String","Date","now","toString","refreshTime","Number","AppShell","children","scrollKey","dynamicKey","o","read","write","beforePopState","state","clearAll","info","x","y","listenScroll","requestAnimationFrame","scrollTo","onScroll","scrollX","scrollY","addEventListener","unsub","removeEventListener","React","useState","useCallback","Box","Typography","Button","Card","CardContent","CardActions","CircularProgress","Avatar","Chip","Check","CheckIcon","Close","CloseIcon","AccessTime","AccessTimeIcon","Person","PersonIcon","Refresh","RefreshIcon","formatDistanceToNow","zhCN","emergencyCallInvitationService","cancelOrRemoveInvitation","getStatusConfig","status","expiresAt","isExpired","statusTexts","pending","accepted","declined","expired","cancelled","statusColors","text","color","showExpiry","InvitationStatusChip","config","display","alignItems","gap","size","variant","fontSize","addSuffix","locale","UserInfoCard","userInfo","message","isReceived","onRespond","isProcessing","isProcessingAction","setIsProcessingAction","handleRespond","action","sx","mb","opacity","src","avatar_url","alt","display_name","width","height","mr","toUpperCase","flexGrow","user_id","mt","justifyContent","pt","startIcon","disabled","InvitationManager","isLoading","setIsLoading","setError","isRefreshing","setIsRefreshing","invitations","setInvitations","sent","received","setIsProcessing","loadInvitations","showLoading","listAllInvitations","params","shellIsOk","dataIsOk","is_ok","sent_invitations","invite","received_invitations","err","handleCancelOrRemove","invitationId","Error","prev","filter","i","invitation_id","handleRespondToInvite","respondToInvite","updateInvitation","invites","handleRefresh","renderContent","hasSentInvitations","hasReceivedInvitations","gutterBottom","user_info","expires_at","flexDirection","textAlign","bgcolor","borderRadius","tms","request","tmsEmergencyCallListEstablishedContacts","opts","TEmc","MEmcListEstablishedContacts","gateway","handler","tmsEmergencyCallRemoveEstablishedContact","MEmcRemoveEstablishedContact","emergencyCallContactService","listEstablishedContacts","removeEstablishedContact","Alert","Dialog","DialogTitle","DialogContent","DialogActions","DialogContentText","PersonRemove","PersonRemoveIcon","ContactPhone","ContactPhoneIcon","ContactCard","contact","onRemove","isRemoving","setIsRemoving","showRemoveDialog","setShowRemoveDialog","handleRemove","contact_id","relationship","created_at","notes","open","onClose","aria-labelledby","id","strong","EstablishedContactsManager","contacts","setContacts","loadEstablishedContacts","handleRemoveContact","contactId","severity","Tabs","Tab","Paper","PersonAdd","PersonAddIcon","TabPanel","props","index","other","div","role","hidden","a11yProps","ContactRelationshipManager","currentTab","setCurrentTab","handleTabChange","event","newValue","maxWidth","mx","elevation","borderBottom","borderColor","onChange","aria-label","TabbarContainer","ContactsPage","titleConf","navBar","Container","useContext","isDev","loadI18nValue","Reload","reload","toLocaleString","ScrollP","PageContent","scroll","clazz","Math","random","loadTitle","title","document","container","getElementsByClassName","scrollTop","passive","overflow","padding","undefined","AndroidPageContent","tmsEmergencyCallListAllInvitations","MEmcListAllInvitations","tmsEmergencyCallRespondToInvite","MEmcRespondToInvite","CssBaseline","Stack","BottomBar","position","bottom","left","right","height2","direction","spacing"],"sourceRoot":"","ignoreList":[1]}