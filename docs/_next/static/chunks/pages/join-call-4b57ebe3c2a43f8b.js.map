{"version":3,"file":"static/chunks/pages/join-call-4b57ebe3c2a43f8b.js","mappings":"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","sources":["webpack://_N_E/../../libs/im/livekit/src/livekit-meeting/MeetingRoom.tsx","webpack://_N_E/./src/pages/join-call/index.tsx","webpack://_N_E/","webpack://_N_E/../../node_modules/.pnpm/@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_react@19.1.0__@emotion+styled_7n6ip7adzgskiknwagt7k5dnla/node_modules/@mui/material/internal/svg-icons/Close.js","webpack://_N_E/../../node_modules/.pnpm/@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_react@19.1.0__@emotion+styled_7n6ip7adzgskiknwagt7k5dnla/node_modules/@mui/material/Alert/alertClasses.js","webpack://_N_E/../../node_modules/.pnpm/@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_react@19.1.0__@emotion+styled_7n6ip7adzgskiknwagt7k5dnla/node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","webpack://_N_E/../../node_modules/.pnpm/@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_react@19.1.0__@emotion+styled_7n6ip7adzgskiknwagt7k5dnla/node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","webpack://_N_E/../../node_modules/.pnpm/@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_react@19.1.0__@emotion+styled_7n6ip7adzgskiknwagt7k5dnla/node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","webpack://_N_E/../../node_modules/.pnpm/@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_react@19.1.0__@emotion+styled_7n6ip7adzgskiknwagt7k5dnla/node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","webpack://_N_E/../../node_modules/.pnpm/@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_react@19.1.0__@emotion+styled_7n6ip7adzgskiknwagt7k5dnla/node_modules/@mui/material/Alert/Alert.js"],"sourcesContent":["import React, {\r\n    useCallback,\r\n    useEffect,\r\n    useRef,\r\n    useState,\r\n    forwardRef,\r\n    ForwardedRef\r\n} from 'react';\r\nimport {\r\n    Room,\r\n    RoomEvent,\r\n    Participant,\r\n    RemoteParticipant,\r\n    RemoteTrack,\r\n    Track,\r\n    LocalTrack,\r\n    LocalVideoTrack,\r\n    LocalAudioTrack,\r\n    createLocalAudioTrack,\r\n    createLocalVideoTrack,\r\n    VideoPreset,\r\n    VideoPresets,\r\n    TrackPublication,\r\n    LocalParticipant\r\n} from 'livekit-client';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    Alert,\r\n    IconButton,\r\n    CircularProgress,\r\n    Stack,\r\n    SxProps,\r\n    Theme\r\n} from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport {\r\n    Mic as MicIcon,\r\n    MicOff as MicOffIcon,\r\n    ScreenShare as ScreenShareIcon,\r\n    StopScreenShare as StopScreenShareIcon,\r\n    Videocam as VideoIcon,\r\n    VideocamOff as VideoOffIcon,\r\n    CallEnd as CallEndIcon,\r\n    Settings as SettingsIcon,\r\n    VolumeUp as VolumeUpIcon,\r\n    VolumeOff as VolumeOffIcon,\r\n    Fullscreen as FullscreenIcon,\r\n    FullscreenExit as FullscreenExitIcon,\r\n    Refresh as RefreshIcon,\r\n    Visibility as VisibilityIcon,\r\n    VisibilityOff as VisibilityOffIcon\r\n} from '@mui/icons-material';\r\nimport { Log } from '@fanfanlo';\r\n// import { mainModel } from '@src/libs/mc/main/MainModel';\r\nimport { MeetingRoomProps, VideoPresetConfig, ExtendedParticipantState, ParticipantState } from './meeting-room.intf';\r\n\r\n// 日志记录器\r\nconst logger = new Log(false, 'livekit-meeting.MeetingRoom');\r\nconst uiLogger = logger.sub(false, 'MeetingRoom_ui');\r\n\r\n// 视频预设\r\nconst VIDEO_PRESET: VideoPresetConfig = {\r\n    width: 1280,\r\n    height: 720,\r\n    // @ts-ignore - frameRate is used by LiveKit internally\r\n    frameRate: 24,\r\n    maxBitrate: 3000 * 1000, // 3Mbps\r\n};\r\n\r\n// 类型定义已移至 meetint-room.intf.ts\r\n\r\n\r\n// function getTokenEndpoint(): string {\r\n//     if (!mainModel.appConfig?.livekit?.jwt) {\r\n//         throw new Error('LiveKit JWT endpoint is not configured');\r\n//     }\r\n//     return `${mainModel.appConfig.livekit.jwt}/token`;\r\n// }\r\n// 主组件实现\r\nfunction MeetingRoomComponent(\r\n    {\r\n        livekitConfig,\r\n        roomName,\r\n        userName,\r\n        role = 'initiator',\r\n        onDisconnect,\r\n        onError,\r\n        className = '',\r\n        style,\r\n        sx,\r\n        directly = false,\r\n        initialVideoEnabled = true,\r\n        initialAudioEnabled = true,\r\n    }: MeetingRoomProps,\r\n    ref: ForwardedRef<HTMLDivElement>\r\n) {\r\n    // 全局音视频控制状态\r\n    const [globalMediaState, setGlobalMediaState] = useState<{\r\n        isAudioEnabled: boolean;\r\n        isVideoEnabled: boolean;\r\n    }>({\r\n        isAudioEnabled: initialAudioEnabled,\r\n        isVideoEnabled: initialVideoEnabled,\r\n    });\r\n\r\n    // Refs\r\n    const roomRef = useRef<Room | null>(null);\r\n    const localTracksRef = useRef<LocalTrack[]>([]);\r\n    const videoElements = useRef<Record<string, HTMLVideoElement>>({});\r\n    const audioElements = useRef<Record<string, HTMLAudioElement>>({});\r\n    const [participantStates, setParticipantStates] = useState<Record<string, ExtendedParticipantState>>({});\r\n    const isUnmountedRef = useRef(false);\r\n\r\n    // State\r\n    const [isConnecting, setIsConnecting] = useState(false);\r\n    const [hasConnected, setHasConnected] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [isMuted, setIsMuted] = useState(!initialAudioEnabled);\r\n    const [isVideoEnabled, setIsVideoEnabled] = useState(initialVideoEnabled);\r\n    const [participants, setParticipants] = useState<RemoteParticipant[]>([]);\r\n\r\n    // 获取 token\r\n    const fetchToken = useCallback(async (roomName: string, identity: string) => {\r\n        try {\r\n            const response = await fetch(`${livekitConfig.jwt}/token`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    room_name: roomName,\r\n                    identity,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('获取 token 失败');\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data.token;\r\n        } catch (error) {\r\n            uiLogger.error('获取 token 失败:', error);\r\n            throw error;\r\n        }\r\n    }, []);\r\n\r\n    // 连接到房间\r\n    const connectToRoom = useCallback(async () => {\r\n        if (isConnecting || hasConnected) return;\r\n\r\n        setIsConnecting(true);\r\n        setError(null);\r\n\r\n        try {\r\n            // 1. 获取 token\r\n            const token = await fetchToken(roomName, userName);\r\n            uiLogger.log('token:', token);\r\n\r\n            // 2. 创建本地轨道\r\n            const { audioTrack, videoTrack } = await createLocalTracks();\r\n            localTracksRef.current = [audioTrack, videoTrack];\r\n            uiLogger.log('audioTrack:', audioTrack);\r\n            uiLogger.log('videoTrack:', videoTrack);\r\n            // 3. 创建房间连接\r\n            const room = new Room({\r\n                adaptiveStream: true,\r\n                dynacast: true,\r\n                videoCaptureDefaults: {\r\n                    resolution: VIDEO_PRESET,\r\n                },\r\n                // @ts-ignore - publishDefaults is a valid option\r\n                publishDefaults: {\r\n                    dtx: true,\r\n                    red: true,\r\n                    forceStereo: false,\r\n                    simulcast: true,\r\n                } as any, // Type assertion to bypass type checking for now\r\n            });\r\n            uiLogger.log('room:', room);\r\n            // 4. 设置事件监听\r\n            setupRoomListeners(room);\r\n\r\n            // 5. 连接到房间\r\n            await room.connect(\r\n                livekitConfig.wsUrl,\r\n                token,\r\n                {\r\n                    autoSubscribe: true,\r\n                }\r\n            );\r\n            uiLogger.log('room connected');\r\n            // 6. 发布本地轨道\r\n            try {\r\n                await Promise.all([\r\n                    room.localParticipant.publishTrack(audioTrack),\r\n                    room.localParticipant.publishTrack(videoTrack)\r\n                ]);\r\n\r\n                // 7. 根据初始参数设置轨道状态\r\n                if (!initialAudioEnabled) {\r\n                    await audioTrack.mute();\r\n                }\r\n                if (!initialVideoEnabled) {\r\n                    await videoTrack.mute();\r\n                }\r\n            } catch (publishError) {\r\n                uiLogger.error('发布轨道失败:', publishError);\r\n                // 即使发布失败也继续，因为可能已经有其他参与者发布了相同的轨道\r\n            }\r\n\r\n            // 8. 更新引用和状态\r\n            roomRef.current = room;\r\n            setHasConnected(true);\r\n\r\n            // 9. 添加现有远程参与者到状态\r\n            const remoteParticipants = Array.from(room.remoteParticipants.values());\r\n            setParticipants(remoteParticipants);\r\n\r\n            // 10. 更新本地参与者状态\r\n            updateParticipantState(room.localParticipant.identity, {\r\n                isAudioEnabled: initialAudioEnabled,\r\n                isVideoEnabled: initialVideoEnabled,\r\n                audioTrack,\r\n                videoTrack,\r\n            });\r\n\r\n            // 10. 为现有远程参与者设置轨道\r\n            remoteParticipants.forEach(participant => {\r\n                // 初始化远程参与者状态\r\n                initParticipantState(participant);\r\n                uiLogger.log('已初始化远程参与者状态:', participant.identity);\r\n                \r\n                // 使用 getTrackPublications 获取所有轨道发布\r\n                participant.getTrackPublications().forEach(publication => {\r\n                    if (publication.track && publication.track instanceof RemoteTrack) {\r\n                        handleTrackSubscribed(publication.track, publication, participant);\r\n                    }\r\n                });\r\n            });\r\n            \r\n            // 初始化本地参与者状态\r\n            if (room.localParticipant) {\r\n                initParticipantState(room.localParticipant);\r\n                uiLogger.log('已初始化本地参与者状态:', room.localParticipant.identity);\r\n            }\r\n\r\n            uiLogger.log('成功加入会议');\r\n\r\n        } catch (error) {\r\n            uiLogger.error('连接房间失败啦:', error);\r\n            setError('加入会议失败，请检查网络和权限设置');\r\n            // 发生错误时清理资源\r\n            cleanupTracks(localTracksRef.current);\r\n            localTracksRef.current = [];\r\n\r\n            if (roomRef.current) {\r\n                try {\r\n                    await roomRef.current.disconnect();\r\n                } catch (e) {\r\n                    uiLogger.error('断开连接时出错:', e);\r\n                }\r\n                roomRef.current = null;\r\n            }\r\n        } finally {\r\n            setIsConnecting(false);\r\n        }\r\n    }, [roomName, userName, isConnecting, hasConnected, fetchToken, initialAudioEnabled, initialVideoEnabled]);\r\n\r\n    // 创建本地音视频轨道\r\n    const createLocalTracks = useCallback(async () => {\r\n        try {\r\n            const [audioTrack, videoTrack] = await Promise.all([\r\n                createLocalAudioTrack({\r\n                    echoCancellation: true,\r\n                    noiseSuppression: true,\r\n                    autoGainControl: true,\r\n                }),\r\n                createLocalVideoTrack({\r\n                    resolution: {\r\n                        width: 1280,\r\n                        height: 720,\r\n                        frameRate: 24,\r\n                    },\r\n                }),\r\n            ]);\r\n            return { audioTrack, videoTrack };\r\n        } catch (error) {\r\n            uiLogger.error('创建本地轨道失败:', error);\r\n            throw error;\r\n        }\r\n    }, []);\r\n\r\n    // 清理轨道\r\n    const cleanupTracks = useCallback((tracks: LocalTrack[]) => {\r\n        tracks.forEach(track => {\r\n            track.stop();\r\n            track.detach();\r\n        });\r\n    }, []);\r\n\r\n    // 跟踪已处理的轨道元素\r\n    const trackElementsRef = useRef<Record<string, boolean>>({});\r\n    const videoElementsRef = useRef<Record<string, HTMLVideoElement>>({});\r\n    const audioElementsRef = useRef<Record<string, HTMLAudioElement>>({});\r\n\r\n    // 更新参与者状态\r\n    const updateParticipantState = useCallback((identity: string, state: Partial<ParticipantState>) => {\r\n        setParticipantStates(prev => ({\r\n            ...prev,\r\n            [identity]: {\r\n                ...(prev[identity] || {\r\n                    isAudioEnabled: true,\r\n                    isVideoEnabled: true,\r\n                    isAudioEnabledGlobal: true,\r\n                    isVideoEnabledGlobal: true,\r\n                }),\r\n                ...state,\r\n            },\r\n        }));\r\n    }, []);\r\n    // 处理轨道订阅\r\n    const handleTrackSubscribed = useCallback((\r\n        track: RemoteTrack,\r\n        publication: TrackPublication,\r\n        participant: Participant\r\n    ) => {\r\n        if (!track) return () => { };\r\n\r\n        const { identity } = participant;\r\n        const isVideoTrack = track.kind === Track.Kind.Video;\r\n\r\n        uiLogger.log(`处理 ${track.kind} 轨道订阅:`, identity, track);\r\n\r\n        // 更新轨道状态的函数\r\n        const updateTrackState = () => {\r\n            const isMuted = track.isMuted;\r\n            const stateUpdate: Partial<ParticipantState> = {};\r\n\r\n            if (track.kind === Track.Kind.Audio) {\r\n                stateUpdate.isAudioEnabled = !isMuted;\r\n            } else if (track.kind === Track.Kind.Video) {\r\n                stateUpdate.isVideoEnabled = !isMuted;\r\n            }\r\n\r\n            updateParticipantState(identity, stateUpdate);\r\n\r\n            // 强制触发重新渲染以确保 ParticipantVideo 组件更新\r\n            if (isVideoTrack) {\r\n                setParticipants(prev => [...prev]);\r\n            }\r\n        };\r\n\r\n        // 监听轨道静音/取消静音事件\r\n        track.on('muted', updateTrackState);\r\n        track.on('unmuted', updateTrackState);\r\n\r\n        // 初始状态更新\r\n        updateTrackState();\r\n\r\n        // 强制更新参与者列表以触发重新渲染\r\n        // 这确保了即使没有状态变化，组件也会检查新的轨道\r\n        setParticipants(prev => {\r\n            const participantExists = prev.some(p => p.identity === identity);\r\n            if (!participantExists) {\r\n                return [...prev, participant as RemoteParticipant];\r\n            }\r\n            return [...prev];\r\n        });\r\n\r\n\r\n        // 清理函数\r\n        return () => {\r\n            track.off('muted', updateTrackState);\r\n            track.off('unmuted', updateTrackState);\r\n        };\r\n    }, [updateParticipantState]);\r\n\r\n    // 设置房间事件监听\r\n    const setupRoomListeners = useCallback((room: Room) => {\r\n        // 保存所有事件处理函数引用，以便后续清理\r\n        type EventHandler = (...args: any[]) => void;\r\n        const eventHandlers: Record<string, EventHandler> = {\r\n            // 处理远程参与者连接\r\n            participantConnected: (participant: RemoteParticipant) => {\r\n                if (!(participant instanceof RemoteParticipant)) return;\r\n\r\n                uiLogger.log('远程参与者已连接:', participant.identity);\r\n\r\n                // 添加新参与者到状态（使用函数式更新确保不重复添加）\r\n                setParticipants(prev => {\r\n                    // 如果已经存在该参与者，则返回原数组\r\n                    if (prev.some(p => p.identity === participant.identity)) {\r\n                        return prev;\r\n                    }\r\n                    return [...prev, participant];\r\n                });\r\n\r\n                // 监听参与者的轨道发布\r\n                const handleTrackPublished = (publication: TrackPublication) => {\r\n                    uiLogger.log('远程参与者发布轨道:', publication.kind, participant.identity);\r\n                    if (publication.track) {\r\n                        handleTrackSubscribed(publication.track as RemoteTrack, publication, participant);\r\n                    } else {\r\n                        publication.once('subscribed', (track: RemoteTrack) => {\r\n                            handleTrackSubscribed(track, publication, participant);\r\n                        });\r\n                    }\r\n                };\r\n\r\n                // 添加轨道发布监听\r\n                participant.on('trackPublished', handleTrackPublished);\r\n\r\n                // 处理已经发布的轨道\r\n                participant.trackPublications.forEach(publication => {\r\n                    if (publication.track) {\r\n                        handleTrackSubscribed(publication.track as RemoteTrack, publication, participant);\r\n                    }\r\n                });\r\n\r\n                // 返回清理函数\r\n                return () => {\r\n                    participant.off('trackPublished', handleTrackPublished);\r\n                };\r\n            },\r\n\r\n            // 处理参与者断开连接\r\n            participantDisconnected: (participant: RemoteParticipant) => {\r\n                uiLogger.log('远程参与者已断开连接:', participant.identity);\r\n                setParticipants(prev => {\r\n                    const newParticipants = prev.filter(p => p.identity !== participant.identity);\r\n                    uiLogger.log('更新后的参与者列表:', newParticipants.map(p => p.identity));\r\n                    return newParticipants;\r\n                });\r\n            },\r\n\r\n            // 处理轨道订阅\r\n            trackSubscribed: (track: RemoteTrack, publication: TrackPublication, participant: Participant) => {\r\n                if (!track) return;\r\n                uiLogger.log('轨道订阅成功:', track.kind, participant.identity);\r\n                // 处理远程轨道订阅\r\n                handleTrackSubscribed(track, publication, participant as RemoteParticipant);\r\n            },\r\n\r\n            disconnected: (reason?: any) => {\r\n                const reasonStr = reason?.toString?.() || '未知原因';\r\n                uiLogger.log('已从房间断开连接，原因:', reasonStr);\r\n                // 更新状态但不调用 handleDisconnect，因为可能是我们主动断开的\r\n                setHasConnected(false);\r\n                setParticipants([]);\r\n                setError(null);\r\n            },\r\n\r\n            reconnecting: () => {\r\n                uiLogger.log('正在重新连接到房间...');\r\n                setError('正在重新连接...');\r\n            },\r\n\r\n            reconnected: () => {\r\n                uiLogger.log('已重新连接到房间');\r\n                setError(null);\r\n            }\r\n        };\r\n\r\n        // 添加事件监听\r\n        room\r\n            .on(RoomEvent.Disconnected, eventHandlers.disconnected)\r\n            .on(RoomEvent.Reconnecting, eventHandlers.reconnecting)\r\n            .on(RoomEvent.Reconnected, eventHandlers.reconnected)\r\n            .on(RoomEvent.ParticipantConnected, eventHandlers.participantConnected)\r\n            .on(RoomEvent.ParticipantDisconnected, eventHandlers.participantDisconnected)\r\n            .on(RoomEvent.TrackSubscribed, eventHandlers.trackSubscribed);\r\n\r\n        // 返回清理函数\r\n        return () => {\r\n            if (!room) return;\r\n            room\r\n                .off(RoomEvent.Disconnected, eventHandlers.disconnected)\r\n                .off(RoomEvent.Reconnecting, eventHandlers.reconnecting)\r\n                .off(RoomEvent.Reconnected, eventHandlers.reconnected)\r\n                .off(RoomEvent.ParticipantConnected, eventHandlers.participantConnected)\r\n                .off(RoomEvent.ParticipantDisconnected, eventHandlers.participantDisconnected)\r\n                .off(RoomEvent.TrackSubscribed, eventHandlers.trackSubscribed);\r\n\r\n            // 确保返回 void\r\n            return undefined;\r\n        };\r\n    }, [handleTrackSubscribed]);\r\n\r\n    // 离开会议\r\n    const leaveMeeting = useCallback(async () => {\r\n        uiLogger.log('正在离开会议...');\r\n        try {\r\n            // 停止所有本地轨道\r\n            cleanupTracks(localTracksRef.current);\r\n\r\n            // 断开房间连接\r\n            if (roomRef.current) {\r\n                await roomRef.current.disconnect();\r\n                roomRef.current = null;\r\n            }\r\n\r\n            // 更新状态\r\n            setHasConnected(false);\r\n            setParticipants([]);\r\n            setError(null);\r\n\r\n            // 清除所有媒体元素\r\n            Object.values(videoElements.current).forEach(el => el && el.remove());\r\n            Object.values(audioElements.current).forEach(el => el && el.remove());\r\n            videoElements.current = {};\r\n            audioElements.current = {};\r\n\r\n            // 调用断开连接回调\r\n            if (onDisconnect) {\r\n                onDisconnect();\r\n            }\r\n\r\n            uiLogger.log('已成功离开会议');\r\n        } catch (error) {\r\n            uiLogger.error('离开会议时出错:', error);\r\n            setError('离开会议时出错，请重试');\r\n        }\r\n    }, [onDisconnect]);\r\n\r\n    // 清理函数\r\n    const cleanup = useCallback(async (isUnmounting = false) => {\r\n        // 如果是组件卸载，设置卸载标志\r\n        if (isUnmounting) {\r\n            isUnmountedRef.current = true;\r\n        }\r\n\r\n        uiLogger.log('执行清理...');\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const audioTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Audio\r\n        ) as LocalAudioTrack | undefined;\r\n        const videoTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Video\r\n        ) as LocalVideoTrack | undefined;\r\n\r\n        try {\r\n            if (audioTrack) {\r\n                await audioTrack.stop();\r\n            }\r\n            if (videoTrack) {\r\n                await videoTrack.stop();\r\n            }\r\n        } catch (error) {\r\n            uiLogger.error('停止轨道失败:', error);\r\n        }\r\n\r\n        // 清理轨道\r\n        cleanupTracks(localTracksRef.current);\r\n        localTracksRef.current = [];\r\n\r\n        // 清理房间\r\n        if (roomRef.current) {\r\n            roomRef.current.disconnect();\r\n            roomRef.current = null;\r\n        }\r\n\r\n        // 清理状态\r\n        setHasConnected(false);\r\n        setParticipants([]);\r\n        setParticipantStates({});\r\n    }, []);\r\n\r\n    // 更新全局媒体状态\r\n    const updateGlobalMediaState = useCallback((audioEnabled: boolean, videoEnabled: boolean) => {\r\n        setGlobalMediaState(prev => ({\r\n            ...prev,\r\n            isAudioEnabled: audioEnabled,\r\n            isVideoEnabled: videoEnabled,\r\n        }));\r\n    }, []);\r\n\r\n    // 切换静音状态（全局控制）\r\n    const toggleMute = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const audioTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Audio\r\n        ) as LocalAudioTrack | undefined;\r\n\r\n        if (!audioTrack) return;\r\n\r\n        try {\r\n            // 全局按钮基于全局状态进行切换\r\n            const newGlobalAudioState = !globalMediaState.isAudioEnabled;\r\n\r\n            // 同步更新本地麦克风的物理状态\r\n            if (newGlobalAudioState) {\r\n                await audioTrack.unmute();\r\n            } else {\r\n                await audioTrack.mute();\r\n            }\r\n\r\n            // 更新本地UI状态\r\n            setIsMuted(!newGlobalAudioState);\r\n            updateParticipantState(localParticipant.identity, { isAudioEnabled: newGlobalAudioState });\r\n\r\n            // 更新全局音频状态，这将影响所有参与者的有效状态\r\n            updateGlobalMediaState(newGlobalAudioState, globalMediaState.isVideoEnabled);\r\n        } catch (error) {\r\n            uiLogger.error('切换静音状态失败:', error);\r\n            setError('切换麦克风状态失败');\r\n        }\r\n    }, [globalMediaState, updateParticipantState, updateGlobalMediaState]);\r\n\r\n    // 切换视频状态（全局控制）\r\n    const toggleVideo = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const videoTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Video\r\n        ) as LocalVideoTrack | undefined;\r\n\r\n        if (!videoTrack) return;\r\n\r\n        try {\r\n            // 全局按钮基于全局状态进行切换\r\n            const newGlobalVideoState = !globalMediaState.isVideoEnabled;\r\n\r\n            // 同步更新本地摄像头的物理状态\r\n            if (newGlobalVideoState) {\r\n                await videoTrack.unmute();\r\n            } else {\r\n                await videoTrack.mute();\r\n            }\r\n\r\n            // 更新本地UI状态\r\n            setIsVideoEnabled(newGlobalVideoState);\r\n            updateParticipantState(localParticipant.identity, { isVideoEnabled: newGlobalVideoState });\r\n\r\n            // 更新全局视频状态，这将影响所有参与者的有效状态\r\n            updateGlobalMediaState(globalMediaState.isAudioEnabled, newGlobalVideoState);\r\n        } catch (error) {\r\n            uiLogger.error('切换视频状态失败:', error);\r\n            setError('切换摄像头状态失败');\r\n        }\r\n    }, [globalMediaState, updateParticipantState, updateGlobalMediaState]);\r\n\r\n    // 切换本地静音状态（仅本地tile）\r\n    const handleLocalMuteToggle = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const audioTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Audio\r\n        ) as LocalAudioTrack | undefined;\r\n\r\n        if (!audioTrack) return;\r\n\r\n        try {\r\n            const newMutedState = !isMuted;\r\n            if (newMutedState) {\r\n                await audioTrack.mute();\r\n            } else {\r\n                await audioTrack.unmute();\r\n            }\r\n\r\n            setIsMuted(newMutedState);\r\n            updateParticipantState(localParticipant.identity, { isAudioEnabled: !newMutedState });\r\n        } catch (error) {\r\n            uiLogger.error('切换本地静音状态失败:', error);\r\n            setError('切换麦克风状态失败');\r\n        }\r\n    }, [isMuted, updateParticipantState]);\r\n\r\n    // 切换本地视频状态（仅本地tile）\r\n    const handleLocalVideoToggle = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const videoTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Video\r\n        ) as LocalVideoTrack | undefined;\r\n\r\n        if (!videoTrack) return;\r\n\r\n        try {\r\n            const newVideoState = !isVideoEnabled;\r\n            if (newVideoState) {\r\n                await videoTrack.unmute();\r\n            } else {\r\n                await videoTrack.mute();\r\n            }\r\n\r\n            setIsVideoEnabled(newVideoState);\r\n            updateParticipantState(localParticipant.identity, { isVideoEnabled: newVideoState });\r\n        } catch (error) {\r\n            uiLogger.error('切换本地视频状态失败:', error);\r\n            setError('切换摄像头状态失败');\r\n        }\r\n    }, [isVideoEnabled, updateParticipantState]);\r\n\r\n    // 组件卸载时清理资源\r\n    useEffect(() => {\r\n        return () => {\r\n            // 清理资源\r\n            cleanup(true);\r\n        };\r\n    }, []);\r\n\r\n    // 获取参与者状态\r\n    const getParticipantState = useCallback((identity: string): ParticipantState => {\r\n        return participantStates[identity] || {\r\n            isAudioEnabled: true,\r\n            isVideoEnabled: true,\r\n            isAudioEnabledGlobal: true,\r\n            isVideoEnabledGlobal: true,\r\n        };\r\n    }, [participantStates]);\r\n\r\n    // 初始化参与者状态\r\n    const initParticipantState = useCallback((participant: Participant) => {\r\n        const state = getParticipantState(participant.identity);\r\n\r\n        // 更新音频状态\r\n        const audioTrack = participant.getTrackPublications().find(\r\n            pub => pub.kind === Track.Kind.Audio\r\n        )?.track as LocalAudioTrack | undefined;\r\n\r\n        // 更新视频状态\r\n        const videoTrack = participant.getTrackPublications().find(\r\n            pub => pub.kind === Track.Kind.Video\r\n        )?.track as LocalVideoTrack | undefined;\r\n\r\n        updateParticipantState(participant.identity, {\r\n            ...state,\r\n            isAudioEnabled: audioTrack ? !audioTrack.isMuted : false,\r\n            isVideoEnabled: videoTrack ? !videoTrack.isMuted : false\r\n        });\r\n    }, [getParticipantState, updateParticipantState]);\r\n\r\n    // 切换参与者的音频状态\r\n    const handleToggleAudio = useCallback((participant: Participant) => {\r\n        const currentState = participantStates[participant.identity] || {\r\n            isAudioEnabled: true,\r\n            isVideoEnabled: true,\r\n            isAudioEnabledGlobal: true,\r\n            isVideoEnabledGlobal: true,\r\n        };\r\n\r\n        updateParticipantState(participant.identity, {\r\n            ...currentState,\r\n            isAudioEnabled: !currentState.isAudioEnabled\r\n        });\r\n    }, [participantStates, updateParticipantState]);\r\n\r\n    // 切换参与者的视频状态\r\n    const handleToggleVideo = useCallback((participant: Participant) => {\r\n        const currentState = participantStates[participant.identity] || {\r\n            isAudioEnabled: true,\r\n            isVideoEnabled: true,\r\n            isAudioEnabledGlobal: true,\r\n            isVideoEnabledGlobal: true,\r\n        };\r\n\r\n        updateParticipantState(participant.identity, {\r\n            ...currentState,\r\n            isVideoEnabled: !currentState.isVideoEnabled\r\n        });\r\n    }, [participantStates, updateParticipantState]);\r\n\r\n    // 获取参与者的实际媒体状态（考虑全局覆盖）\r\n    const getEffectiveMediaState = useCallback((participantId: string) => {\r\n        const state = participantStates[participantId];\r\n        if (!state) return { isAudioEnabled: true, isVideoEnabled: true };\r\n\r\n        return {\r\n            isAudioEnabled: globalMediaState.isAudioEnabled ? state.isAudioEnabled : false,\r\n            isVideoEnabled: globalMediaState.isVideoEnabled ? state.isVideoEnabled : false,\r\n        };\r\n    }, [globalMediaState, participantStates]);\r\n\r\n    // 参与者视频组件\r\n    const ParticipantVideo = React.memo(({\r\n        participant,\r\n        isLocal,\r\n        isVideoEnabled\r\n    }: {\r\n        participant: Participant;\r\n        isLocal: boolean;\r\n        isVideoEnabled: boolean;\r\n    }) => {\r\n        const videoRef = useRef<HTMLVideoElement>(null);\r\n        const [videoTrack, setVideoTrack] = useState<RemoteTrack | LocalVideoTrack | Track | null>(null);\r\n\r\n        // 处理视频轨道变化\r\n        useEffect(() => {\r\n            if (!participant) return;\r\n\r\n            // 查找现有的视频轨道发布\r\n            const videoPublication = Array.from(participant.trackPublications.values())\r\n                .find(pub => pub.kind === Track.Kind.Video);\r\n\r\n            // 如果轨道已存在，则直接设置\r\n            if (videoPublication && videoPublication.track) {\r\n                setVideoTrack(videoPublication.track);\r\n            }\r\n\r\n            // 当订阅轨道时处理\r\n            const handleTrackSubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Video) {\r\n                    setVideoTrack(track as RemoteTrack | LocalVideoTrack);\r\n                }\r\n            };\r\n\r\n            // 当取消订阅轨道时处理\r\n            const handleTrackUnsubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Video) {\r\n                    setVideoTrack(null);\r\n                }\r\n            };\r\n\r\n            // 添加事件监听\r\n            participant.on(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n            participant.on(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n\r\n            // 清理函数\r\n            return () => {\r\n                participant.off(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n                participant.off(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n            };\r\n        }, [participant]);\r\n\r\n        // 处理视频元素附加/分离\r\n        useEffect(() => {\r\n            const videoElement = videoRef.current;\r\n            if (!videoElement || !videoTrack) return;\r\n\r\n            // 清理现有视频源\r\n            while (videoElement.firstChild) {\r\n                videoElement.removeChild(videoElement.firstChild);\r\n            }\r\n\r\n            // 附加视频轨道\r\n            if (isVideoEnabled) {\r\n                videoTrack.attach(videoElement);\r\n            }\r\n\r\n            return () => {\r\n                if (videoTrack) {\r\n                    videoTrack.detach(videoElement);\r\n                }\r\n            };\r\n        }, [videoTrack, isVideoEnabled]);\r\n\r\n        return (\r\n            <Box\r\n                sx={{\r\n                    width: '100%',\r\n                    aspectRatio: '16/9',\r\n                    bgcolor: 'grey.800',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    position: 'relative',\r\n                }}\r\n            >\r\n                <video\r\n                    ref={videoRef}\r\n                    autoPlay\r\n                    playsInline\r\n                    muted={isLocal}\r\n                    style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        objectFit: 'cover',\r\n                        display: isVideoEnabled ? 'block' : 'none'\r\n                    }}\r\n                />\r\n                {!isVideoEnabled && (\r\n                    <Box\r\n                        sx={{\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                            bottom: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            bgcolor: 'grey.900',\r\n                        }}\r\n                    >\r\n                        <Box\r\n                            sx={{\r\n                                width: 80,\r\n                                height: 80,\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                bgcolor: 'primary.main',\r\n                                color: 'white',\r\n                                fontSize: 32,\r\n                                fontWeight: 'bold',\r\n                            }}\r\n                        >\r\n                            {participant.identity.charAt(0).toUpperCase()}\r\n                        </Box>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        );\r\n    });\r\n\r\n    // 参与者音频组件\r\n    const ParticipantAudio = React.memo(({\r\n        participant,\r\n        isMuted,\r\n    }: {\r\n        participant: Participant;\r\n        isMuted: boolean;\r\n    }) => {\r\n        const audioRef = useRef<HTMLAudioElement>(null);\r\n        const [audioTrack, setAudioTrack] = useState<RemoteTrack | LocalAudioTrack | Track | null>(null);\r\n\r\n        useEffect(() => {\r\n            if (!participant) return;\r\n\r\n            const handleTrackSubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Audio) {\r\n                    setAudioTrack(track as RemoteTrack | LocalAudioTrack);\r\n                }\r\n            };\r\n\r\n            const handleTrackUnsubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Audio) {\r\n                    setAudioTrack(null);\r\n                }\r\n            };\r\n\r\n            // 查找现有的音频轨道\r\n            const audioPublication = Array.from(participant.trackPublications.values())\r\n                .find(pub => pub.kind === Track.Kind.Audio);\r\n\r\n            if (audioPublication && audioPublication.track) {\r\n                setAudioTrack(audioPublication.track);\r\n            }\r\n\r\n            participant.on(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n            participant.on(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n\r\n            return () => {\r\n                participant.off(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n                participant.off(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n            };\r\n        }, [participant]);\r\n\r\n        useEffect(() => {\r\n            const audioElement = audioRef.current;\r\n            if (audioElement && audioTrack) {\r\n                audioTrack.attach(audioElement);\r\n                // 远程音频默认静音，除非用户手动取消\r\n                audioElement.muted = isMuted;\r\n                return () => {\r\n                    audioTrack.detach(audioElement);\r\n                };\r\n            }\r\n        }, [audioTrack, isMuted]);\r\n\r\n        return <audio ref={audioRef} autoPlay playsInline />;\r\n    });\r\n\r\n    // 渲染参与者\r\n    const renderParticipant = useCallback((participant: Participant, isLocal: boolean) => {\r\n        const effectiveState = getEffectiveMediaState(participant.identity);\r\n\r\n        return (\r\n            <Box\r\n                key={participant.identity}\r\n                sx={{\r\n                    position: 'relative',\r\n                    borderRadius: 2,\r\n                    overflow: 'hidden',\r\n                    bgcolor: 'background.paper',\r\n                    boxShadow: 1,\r\n                }}\r\n            >\r\n                {/* 视频元素 */}\r\n                <ParticipantVideo\r\n                    participant={participant}\r\n                    isLocal={isLocal}\r\n                    isVideoEnabled={effectiveState.isVideoEnabled}\r\n                />\r\n\r\n                {/* 音频元素 */}\r\n                {!isLocal && (\r\n                    <ParticipantAudio\r\n                        participant={participant}\r\n                        isMuted={!effectiveState.isAudioEnabled}\r\n                    />\r\n                )}\r\n\r\n                {/* 控制栏 */}\r\n                <Grid container\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        p: 1,\r\n                        bgcolor: 'rgba(0, 0, 0, 0.6)',\r\n                        justifyContent: 'center',\r\n                        gap: 1,\r\n                    }}\r\n                >\r\n                    <Grid item>\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            color={effectiveState.isAudioEnabled ? 'primary' : 'error'}\r\n                            onClick={() => handleToggleAudio(participant)}\r\n                        >\r\n                            {effectiveState.isAudioEnabled ? <VolumeUpIcon /> : <VolumeOffIcon />}\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            color={effectiveState.isVideoEnabled ? 'primary' : 'error'}\r\n                            onClick={() => handleToggleVideo(participant)}\r\n                        >\r\n                            {effectiveState.isVideoEnabled ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"caption\" color=\"white\">\r\n                            {participant.identity} {isLocal && '(你)'}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    {/* 本地麦克风控制 */}\r\n                    {isLocal && (\r\n                        <Grid item>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={handleLocalMuteToggle}\r\n                                color={isMuted ? 'error' : 'primary'}\r\n                                sx={{ color: 'white' }}\r\n                                title={isMuted ? '取消静音' : '静音'}\r\n                            >\r\n                                {isMuted ? <MicOffIcon /> : <MicIcon />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                    )}\r\n\r\n                    {/* 本地视频控制 */}\r\n                    {isLocal && (\r\n                        <Grid item>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={handleLocalVideoToggle}\r\n                                color={isVideoEnabled ? 'primary' : 'error'}\r\n                                sx={{ color: 'white' }}\r\n                                title={isVideoEnabled ? '关闭摄像头' : '开启摄像头'}\r\n                            >\r\n                                {isVideoEnabled ? <VideoIcon /> : <VideoOffIcon />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n        );\r\n    }, [isMuted, isVideoEnabled, getEffectiveMediaState, handleToggleAudio, handleToggleVideo, handleLocalMuteToggle, handleLocalVideoToggle]);\r\n\r\n    // 渲染主界面\r\n    function renderMainContent() {\r\n        // 如果已经连接，显示会议界面\r\n        if (hasConnected && roomRef.current) {\r\n            return (\r\n                <Box className={className} sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n                    <Box sx={{ flex: 1, overflow: 'auto', p: 2 }}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} md={participants.length === 0 ? 12 : 6}>\r\n                                {renderParticipant(roomRef.current.localParticipant, true)}\r\n                            </Grid>\r\n                            {participants.map(function (participant) {\r\n                                return (\r\n                                    <Grid item xs={12} md={6} key={participant.identity}>\r\n                                        {renderParticipant(participant, false)}\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                        </Grid>\r\n                    </Box>\r\n                    {/* 底部控制栏 */}\r\n                    <Box sx={{\r\n                        p: 2,\r\n                        borderTop: '1px solid',\r\n                        borderColor: 'divider',\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        gap: 2\r\n                    }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color={!globalMediaState.isAudioEnabled ? 'error' : 'primary'}\r\n                            onClick={toggleMute}\r\n                            startIcon={!globalMediaState.isAudioEnabled ? <MicOffIcon /> : <MicIcon />}\r\n                        >\r\n                            {!globalMediaState.isAudioEnabled ? '取消静音' : '静音'}\r\n                        </Button>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color={!globalMediaState.isVideoEnabled ? 'error' : 'primary'}\r\n                            onClick={toggleVideo}\r\n                            startIcon={globalMediaState.isVideoEnabled ? <VideoIcon /> : <VideoOffIcon />}\r\n                        >\r\n                            {globalMediaState.isVideoEnabled ? '关闭摄像头' : '开启摄像头'}\r\n                        </Button>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            onClick={leaveMeeting}\r\n                            startIcon={<CallEndIcon />}\r\n                        >\r\n                            离开会议\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            );\r\n        }\r\n\r\n        // 未连接时显示连接界面\r\n        return (\r\n            <Box className={className} sx={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                p: 3\r\n            }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    准备加入会议\r\n                </Typography>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={connectToRoom}\r\n                    disabled={isConnecting}\r\n                    startIcon={<VideoIcon />}\r\n                    sx={{ mt: 2 }}\r\n                >\r\n                    加入会议\r\n                    {isConnecting && (\r\n                        <CircularProgress\r\n                            size={16}\r\n                            sx={{\r\n                                color: 'inherit',\r\n                                ml: 1\r\n                            }}\r\n                        />\r\n                    )}\r\n                </Button>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    // 统一渲染内容，避免提前 return 导致 hooks 数量不一致\r\n    let content: React.ReactNode;\r\n    if (isConnecting) {\r\n        content = (\r\n            <Box sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                height: '100%',\r\n                p: 3\r\n            }}>\r\n                <CircularProgress />\r\n                <Typography variant=\"body1\" sx={{ mt: 2 }}>正在连接会议...</Typography>\r\n            </Box>\r\n        );\r\n    } else if (error) {\r\n        content = (\r\n            <Alert severity=\"error\" sx={{ m: 2 }}>\r\n                <Typography variant=\"body1\">{error}</Typography>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={connectToRoom}\r\n                    startIcon={<RefreshIcon />}\r\n                    sx={{ mt: 1 }}\r\n                >\r\n                    重试连接\r\n                </Button>\r\n            </Alert>\r\n        );\r\n    } else {\r\n        content = renderMainContent();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(directly){\r\n            connectToRoom();\r\n        }\r\n    }, [directly])\r\n    // 渲染组件\r\n    return (\r\n        <Box ref={ref} sx={sx} style={style}>\r\n            {content}\r\n        </Box>\r\n    );\r\n}\r\n\r\n// 使用 forwardRef 导出组件\r\nconst MeetingRoom = forwardRef(MeetingRoomComponent);\r\nMeetingRoom.displayName = 'MeetingRoom';\r\n\r\nexport { MeetingRoom };","import { MeetingRoom } from '@im/livekit';\nimport { Box } from '@mui/material';\nimport { mainModel } from '@src/libs/mc/main/MainModel';\n\nexport default function JoinCall() {\n    const urlParams = new URL(window.location.href).searchParams;\n    const name = urlParams.get(\"code\") || \"test\";\n    const role = (urlParams.get(\"role\") || \"initiator\") as 'initiator' | 'responder'; // Get role from URL\n\n  return (\n    <Box sx={{height: '100vh'}}>\n        <Box>\n            name:{name}, role:{role}\n        </Box>\n      <MeetingRoom\n        roomName={name}\n        directly={true}\n        userName={`user-${Math.random().toString(36).substring(2, 8)}`}\n        livekitConfig={mainModel.appConfig.livekit}\n        initialAudioEnabled={role == 'initiator'} // 发起者默认开启音频\n        initialVideoEnabled={role == 'initiator'} // 发起者默认开启视频\n        role={role} // Pass role to the component\n      />\n    </Box>\n  );\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/join-call\",\n      function () {\n        return require(\"private-next-pages/join-call/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/join-call\"])\n      });\n    }\n  ","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'colorSuccess', 'colorInfo', 'colorWarning', 'colorError', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport Paper from \"../Paper/index.js\";\nimport alertClasses, { getAlertUtilityClass } from \"./alertClasses.js\";\nimport IconButton from \"../IconButton/index.js\";\nimport SuccessOutlinedIcon from \"../internal/svg-icons/SuccessOutlined.js\";\nimport ReportProblemOutlinedIcon from \"../internal/svg-icons/ReportProblemOutlined.js\";\nimport ErrorOutlineIcon from \"../internal/svg-icons/ErrorOutline.js\";\nimport InfoOutlinedIcon from \"../internal/svg-icons/InfoOutlined.js\";\nimport CloseIcon from \"../internal/svg-icons/Close.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color || severity)}`, `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  return {\n    ...theme.typography.body2,\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px',\n    variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['light'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'standard'\n      },\n      style: {\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n        backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\n        [`& .${alertClasses.icon}`]: theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}IconColor`]\n        } : {\n          color: theme.palette[color].main\n        }\n      }\n    })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['light'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'outlined'\n      },\n      style: {\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n        border: `1px solid ${(theme.vars || theme).palette[color].light}`,\n        [`& .${alertClasses.icon}`]: theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}IconColor`]\n        } : {\n          color: theme.palette[color].main\n        }\n      }\n    })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['dark'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'filled'\n      },\n      style: {\n        fontWeight: theme.typography.fontWeightMedium,\n        ...(theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}FilledColor`],\n          backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\n        } : {\n          backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\n          color: theme.palette.getContrastText(theme.palette[color].main)\n        })\n      }\n    }))]\n  };\n}));\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0',\n  minWidth: 0,\n  overflow: 'auto'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n  const {\n    action,\n    children,\n    className,\n    closeText = 'Close',\n    color,\n    components = {},\n    componentsProps = {},\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = 'alert',\n    severity = 'success',\n    slotProps = {},\n    slots = {},\n    variant = 'standard',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    severity,\n    variant,\n    colorSeverity: color || severity\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots: {\n      closeButton: components.CloseButton,\n      closeIcon: components.CloseIcon,\n      ...slots\n    },\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    shouldForwardComponentProp: true,\n    className: clsx(classes.root, className),\n    elementType: AlertRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    ownerState,\n    additionalProps: {\n      role,\n      elevation: 0\n    }\n  });\n  const [IconSlot, iconSlotProps] = useSlot('icon', {\n    className: classes.icon,\n    elementType: AlertIcon,\n    externalForwardedProps,\n    ownerState\n  });\n  const [MessageSlot, messageSlotProps] = useSlot('message', {\n    className: classes.message,\n    elementType: AlertMessage,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ActionSlot, actionSlotProps] = useSlot('action', {\n    className: classes.action,\n    elementType: AlertAction,\n    externalForwardedProps,\n    ownerState\n  });\n  const [CloseButtonSlot, closeButtonProps] = useSlot('closeButton', {\n    elementType: IconButton,\n    externalForwardedProps,\n    ownerState\n  });\n  const [CloseIconSlot, closeIconProps] = useSlot('closeIcon', {\n    elementType: CloseIcon,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [icon !== false ? /*#__PURE__*/_jsx(IconSlot, {\n      ...iconSlotProps,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(MessageSlot, {\n      ...messageSlotProps,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(ActionSlot, {\n      ...actionSlotProps,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(ActionSlot, {\n      ...actionSlotProps,\n      children: /*#__PURE__*/_jsx(CloseButtonSlot, {\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose,\n        ...closeButtonProps,\n        children: /*#__PURE__*/_jsx(CloseIconSlot, {\n          fontSize: \"small\",\n          ...closeIconProps\n        })\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    CloseButton: PropTypes.elementType,\n    CloseIcon: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    closeButton: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    closeIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    icon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    message: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    action: PropTypes.elementType,\n    closeButton: PropTypes.elementType,\n    closeIcon: PropTypes.elementType,\n    icon: PropTypes.elementType,\n    message: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;"],"names":["React","useCallback","useEffect","useRef","useState","forwardRef","Room","RoomEvent","RemoteParticipant","RemoteTrack","Track","createLocalAudioTrack","createLocalVideoTrack","Box","Button","Typography","Alert","IconButton","CircularProgress","Grid","Mic","MicIcon","MicOff","MicOffIcon","Videocam","VideoIcon","VideocamOff","VideoOffIcon","CallEnd","CallEndIcon","VolumeUp","VolumeUpIcon","VolumeOff","VolumeOffIcon","Refresh","RefreshIcon","Visibility","VisibilityIcon","VisibilityOff","VisibilityOffIcon","Log","logger","uiLogger","sub","VIDEO_PRESET","width","height","frameRate","maxBitrate","MeetingRoomComponent","ref","livekitConfig","roomName","userName","role","onDisconnect","onError","className","style","sx","directly","initialVideoEnabled","initialAudioEnabled","globalMediaState","setGlobalMediaState","isAudioEnabled","isVideoEnabled","roomRef","localTracksRef","videoElements","audioElements","participantStates","setParticipantStates","isUnmountedRef","isConnecting","setIsConnecting","hasConnected","setHasConnected","error","setError","isMuted","setIsMuted","setIsVideoEnabled","participants","setParticipants","fetchToken","identity","response","fetch","jwt","method","headers","body","JSON","stringify","room_name","ok","Error","data","json","token","connectToRoom","log","audioTrack","videoTrack","createLocalTracks","current","room","adaptiveStream","dynacast","videoCaptureDefaults","resolution","publishDefaults","dtx","red","forceStereo","simulcast","setupRoomListeners","connect","wsUrl","autoSubscribe","Promise","all","localParticipant","publishTrack","mute","publishError","remoteParticipants","Array","from","values","updateParticipantState","forEach","participant","initParticipantState","getTrackPublications","publication","track","handleTrackSubscribed","cleanupTracks","disconnect","e","echoCancellation","noiseSuppression","autoGainControl","tracks","stop","detach","trackElementsRef","videoElementsRef","audioElementsRef","state","prev","isAudioEnabledGlobal","isVideoEnabledGlobal","isVideoTrack","kind","Kind","Video","updateTrackState","stateUpdate","Audio","on","participantExists","some","p","off","eventHandlers","participantConnected","handleTrackPublished","once","trackPublications","participantDisconnected","newParticipants","filter","map","trackSubscribed","disconnected","reason","reasonStr","toString","reconnecting","reconnected","Disconnected","Reconnecting","Reconnected","ParticipantConnected","ParticipantDisconnected","TrackSubscribed","undefined","leaveMeeting","Object","el","remove","cleanup","isUnmounting","find","t","updateGlobalMediaState","audioEnabled","videoEnabled","toggleMute","newGlobalAudioState","unmute","toggleVideo","newGlobalVideoState","handleLocalMuteToggle","newMutedState","handleLocalVideoToggle","newVideoState","getParticipantState","pub","handleToggleAudio","currentState","handleToggleVideo","getEffectiveMediaState","participantId","ParticipantVideo","memo","isLocal","videoRef","setVideoTrack","videoPublication","handleTrackUnsubscribed","TrackUnsubscribed","videoElement","firstChild","removeChild","attach","aspectRatio","bgcolor","display","alignItems","justifyContent","position","video","autoPlay","playsInline","muted","objectFit","top","left","right","bottom","borderRadius","color","fontSize","fontWeight","charAt","toUpperCase","ParticipantAudio","audioRef","setAudioTrack","audioPublication","audioElement","audio","renderParticipant","effectiveState","overflow","boxShadow","container","gap","item","size","onClick","variant","title","renderMainContent","flexDirection","flex","spacing","xs","md","length","borderTop","borderColor","startIcon","gutterBottom","disabled","mt","ml","content","severity","m","MeetingRoom","displayName","mainModel","JoinCall","urlParams","URL","window","location","href","searchParams","name","get","Math","random","substring","appConfig","livekit","createSvgIcon","jsx","_jsx","d","generateUtilityClasses","generateUtilityClass","getAlertUtilityClass","slot","alertClasses","PropTypes","clsx","composeClasses","darken","lighten","styled","memoTheme","useDefaultProps","useSlot","capitalize","createSimplePaletteValueFilter","Paper","SuccessOutlinedIcon","ReportProblemOutlinedIcon","ErrorOutlineIcon","InfoOutlinedIcon","CloseIcon","jsxs","_jsxs","useUtilityClasses","ownerState","classes","slots","root","icon","message","action","AlertRoot","overridesResolver","props","styles","theme","getColor","palette","mode","getBackgroundColor","typography","body2","backgroundColor","padding","variants","entries","colorSeverity","vars","light","main","border","fontWeightMedium","dark","getContrastText","AlertIcon","marginRight","opacity","AlertMessage","minWidth","AlertAction","marginLeft","defaultIconMapping","success","warning","info","inProps","children","closeText","components","componentsProps","iconMapping","onClose","slotProps","other","externalForwardedProps","closeButton","CloseButton","closeIcon","RootSlot","rootSlotProps","shouldForwardComponentProp","elementType","additionalProps","elevation","IconSlot","iconSlotProps","MessageSlot","messageSlotProps","ActionSlot","actionSlotProps","CloseButtonSlot","closeButtonProps","CloseIconSlot","closeIconProps","propTypes","node","object","string","oneOfType","oneOf","shape","func","arrayOf","bool"],"sourceRoot":"","ignoreList":[3,4,5,6,7,8,9]}