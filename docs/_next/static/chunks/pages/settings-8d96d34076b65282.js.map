{"version":3,"file":"static/chunks/pages/settings-8d96d34076b65282.js","mappings":"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","sources":["webpack://_N_E/./src/components/privacies/usePrivacyDialog.ts","webpack://_N_E/./src/components/report/MyReports.tsx","webpack://_N_E/./src/components/settings/FontSizeButton.tsx","webpack://_N_E/../../node_modules/.pnpm/react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3/node_modules/react-i18next/dist/es/index.js","webpack://_N_E/../../libs/fanfanlo/src/mui/dialog/ButtonConfirm.tsx","webpack://_N_E/./src/components/pages/sign-up-in/components/sign-up-in-button/SignUpIn.tsx","webpack://_N_E/./src/components/pages/settings/content/buildtime/AppBuildTime.tsx","webpack://_N_E/../../libs/app/model/src/remote/user/deleteAccount.ts","webpack://_N_E/./src/components/pages/settings/content/DeleteAccountButton.tsx","webpack://_N_E/./src/components/pages/settings/content/Settings.tsx","webpack://_N_E/./src/pages/settings/index.tsx","webpack://_N_E/?7200"],"sourcesContent":["import { useState } from 'react';\n\n/**\n * 用于手动控制隐私协议弹窗的Hook\n */\nexport function usePrivacyDialog() {\n  const [open, setOpen] = useState(false);\n\n  const openDialog = () => setOpen(true);\n  const closeDialog = () => setOpen(false);\n\n  return {\n    open,\n    openDialog,\n    closeDialog,\n  };\n}","import { Box, Button } from \"@mui/material\";\r\nimport { ReportButton } from \"./ReportButton\";\r\nimport { useRouter } from \"next/router\";\r\n\r\n\r\nexport function MyReports(){\r\n  const router = useRouter()\r\n    return(\r\n        \r\n      <Box sx={{mt:2, mb:2}}>\r\n      <ReportButton />\r\n      <Button onClick={()=>router.push('/my-reports')}>\r\n        我的举报\r\n      </Button>\r\n      </Box>\r\n    )\r\n}","import { Button } from \"@mui/material\";\nimport { useFontSize } from \"@src/contexts/FontSizeContext\";\n\nexport const FontSizeButton = () => {\n  const { openDialog } = useFontSize();\n  \n  const handleOpenFontSizeDialog = () => {\n    openDialog(false); // false 表示不是从首页打开的\n  };\n  \n  return (\n    <Button \n      fullWidth \n      variant=\"outlined\" \n      onClick={handleOpenFontSizeDialog}\n      startIcon={\n        <span style={{ fontSize: '1.2em' }}>🔍</span>\n      }\n      sx={{\n        mt:2,\n        mb: 2,\n        py: 1.5,\n        justifyContent: 'flex-start',\n        textTransform: 'none',\n        fontSize: '1rem',\n        '& .MuiButton-startIcon': {\n          marginRight: 1.5,\n        }\n      }}\n    >\n      调整字体大小\n    </Button>\n  );\n};\n","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3\\\\node_modules\\\\react-i18next\\\\dist\\\\es\\\\index.js\"","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from \"@mui/material\"\r\nimport React, { PropsWithChildren, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nexport interface ButtonConfirmProps {\r\n    title?: string | React.ReactNode\r\n    content?: string | React.ReactNode\r\n    confirmText?: string | React.ReactNode\r\n    cancelText?: string | React.ReactNode\r\n    onConfirm?: () => void\r\n    onCancel?: () => void\r\n    onClose?: (confirmed:boolean) => void\r\n    cancelId?: string\r\n    confirmId?: string\r\n}\r\n\r\nexport function ButtonConfirm({ title, content, confirmText, cancelText, onConfirm, onCancel, onClose , cancelId, confirmId, children }: ButtonConfirmProps & PropsWithChildren) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const {t} = useTranslation('fanfanlo/mui/dialog/content')\r\n    return (\r\n        <>\r\n            <span onClick={() => setIsOpen(true)}>\r\n                {children}  \r\n            </span>\r\n            <Dialog open={isOpen} onClose={() => setIsOpen(false)}>\r\n                <DialogTitle>{title || t('ButtonConfirm.title')}</DialogTitle>\r\n                <DialogContent>{content || t('ButtonConfirm.content')}</DialogContent>\r\n                <DialogActions>\r\n                    <Button id={cancelId || 'btn-dialog-button-confirm-cancel'}\r\n                    data-id={cancelId || 'btn-dialog-button-confirm-cancel'}\r\n                    onClick={()=>{setIsOpen(false); onCancel?.();onClose?.(false)}}>{cancelText || t('ButtonConfirm.cancel')}</Button>\r\n                    <Button id={confirmId || 'btn-dialog-button-confirm-confirm'}\r\n                    data-id={confirmId || 'btn-dialog-button-confirm-confirm'}\r\n                    onClick={()=>{setIsOpen(false); onConfirm?.();onClose?.(true)}}>{confirmText || t('ButtonConfirm.confirm')}</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n","import { useTranslation } from \"@fanfanlo\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useProxyWatch } from \"@fanfanlo\";\r\nimport { user } from \"@app/model\";\r\nimport toast from \"react-hot-toast\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport Link from \"next/link\";\r\nimport { ButtonConfirm } from \"@fanfanlo\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface SignUpInButtonProps{\r\n    back?:string;\r\n}\r\n\r\nexport function SignUpInButton({back}:SignUpInButtonProps){\r\n    // apps\\homepage\\src\\components\\page\\sign-up-in\\components\\sign-up-in-button\\SignUpIn.i18n.json\r\n    const { t } = useTranslation('homepage/components/page/sign-up-in/components/sign-up-in-button/content');\r\n    const router = useRouter();\r\n    const [token] = useProxyWatch(user, 'data.storeData.user_token', user.data.storeData.user_token);\r\n    const [userInitialized] = useProxyWatch(user, 'data.userInitialized', user.data.userInitialized);\r\n    const [userName, setUserName] = useState(user.userName || '');\r\n    useEffect(()=>{\r\n        setUserName(user.userName || '');\r\n    }, [token, user.userName])\r\n    function onSignoutClick(){\r\n        user.signout();\r\n        toast(t('SignUpIn.signoutOk'), { duration: 5000 })\r\n    }\r\n    if(!userInitialized){\r\n        return (\r\n            <>\r\n            {t('SignUpIn.loadingData')}\r\n            </>\r\n        )\r\n    }\r\n    if(token){\r\n        return(\r\n            <Box>\r\n                <Box>\r\n                    <span>\r\n                        {userName}\r\n                    </span>\r\n                </Box>\r\n                <Box>\r\n                <span>\r\n                    <ButtonConfirm title={t('SignUpIn.confirmTitle')} content={t('SignUpIn.confirmContent')} onConfirm={onSignoutClick}><Button>{t('SignUpIn.signOut')}</Button></ButtonConfirm>\r\n                </span>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <span>\r\n                <Link href={`/sign-up-in?back=${back}`}>{t('SignUpIn.signUpIn')}</Link>\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n","import { Box } from \"@mui/material\";\r\nimport getConfig from \"next/config\";\r\n\r\nexport function AppBuildTime(){\r\n    return(\r\n        <Box sx={{mt:2, mb:2}}>\r\n            <span>构建时间：</span>\r\n            <span>{(new Date(getConfig().publicRuntimeConfig.buildTime)).toLocaleString()}</span>\r\n        </Box>\r\n    )\r\n}","import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\n\n// This request does not require any specific parameters beyond the default ones.\nexport interface IDeleteAccountParams extends IRequestParams {}\n\n// The expected result from the backend.\nexport interface IDeleteAccountResult extends IResultContent {\n    isOk: boolean;\n    msg: string;\n}\n\n/**\n * Calls the endpoint to delete a user account.\n * @param opts Request options, can be empty as no specific params are needed.\n * @returns The result from the server.\n */\nexport async function tmsUserDeleteAccount(opts: IRequestOptions<IDeleteAccountParams>) {\n    const res = await request<IDeleteAccountResult>(tms.TUser, tms.MUserDeleteAccount, opts.params, opts.gateway, opts.handler);\n    if (!res.dataIsOk) {\n        console.error('tmsUserDeleteAccount error:', res.err, res);\n    }\n    return res;\n}\n\n","import { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Snackbar, Alert, Box } from '@mui/material';\nimport { useProxyWatch, useTranslation } from '@fanfanlo';\nimport { tmsUserDeleteAccount, user, trackingPrint } from '@app/model';\n\nexport const DeleteAccountButton = () => {\n    const { t } = useTranslation(\"emergency-call/pages/settings/content\");\n\n\n        const [token] = useProxyWatch(user, 'data.storeData.user_token', user.data.storeData.user_token);\n\n    const [openDialog, setOpenDialog] = useState(false);\n    const [snackbar, setSnackbar] = useState<{ open: boolean; message: string; severity: 'success' | 'error' }>({\n        open: false,\n        message: '',\n        severity: 'success',\n    });\n\n    const handleOpenDialog = () => {\n        // 删除账户对话框打开埋点\n        trackingPrint({params:{\n            type:\"模态框操作\",\n            title:\"删除账户\",\n            subtitle:\"确认对话框-打开\",\n            extra:{\n                timestamp: Date.now(),\n                hasToken: !!token\n            }\n        }});\n        setOpenDialog(true);\n    };\n\n    const handleCloseDialog = () => {\n        // 删除账户对话框关闭埋点\n        trackingPrint({params:{\n            type:\"模态框操作\", \n            title:\"删除账户\",\n            subtitle:\"确认对话框-取消关闭\",\n            extra:{\n                timestamp: Date.now()\n            }\n        }});\n        setOpenDialog(false);\n    };\n\n\n// ... (inside the component)\n\n    const handleConfirmDelete = async () => {\n        // 确认删除账户埋点\n        trackingPrint({params:{\n            type:\"用户操作\",\n            title:\"删除账户\",\n            subtitle:\"确认删除-点击\",\n            extra:{\n                timestamp: Date.now(),\n                userId: token\n            }\n        }});\n        \n        handleCloseDialog();\n        try {\n            const response = await tmsUserDeleteAccount({ params: {} });\n            if(response.shellIsOk && response.dataIsOk){\n                // 删除成功埋点\n                trackingPrint({params:{\n                    type:\"用户操作\",\n                    title:\"删除账户\",\n                    subtitle:\"删除成功\",\n                    extra:{\n                        timestamp: Date.now(),\n                        redirectDelay: 2000\n                    }\n                }});\n                \n                user.signout()\n                setSnackbar({ open: true, message: t('content.deleteAccount.success'), severity: 'success' });\n                // After a short delay, redirect\n                setTimeout(() => {\n                    window.location.href = '/';\n                }, 2000);\n            } else {\n                const errorMessage = response.data?.msg || response.err?.message || 'Unknown error';\n                \n                // 删除失败埋点\n                trackingPrint({params:{\n                    type:\"系统异常\",\n                    title:\"删除账户\",\n                    subtitle:\"删除失败\",\n                    extra:{\n                        timestamp: Date.now(),\n                        error: errorMessage,\n                        shellIsOk: response.shellIsOk,\n                        dataIsOk: response.dataIsOk\n                    }\n                }});\n                \n                setSnackbar({ open: true, message: t('content.deleteAccount.failure', { error: errorMessage }), severity: 'error' });\n            }\n        } catch (error) {\n            const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred';\n            \n            // 删除异常埋点\n            trackingPrint({params:{\n                type:\"系统异常\",\n                title:\"删除账户\",\n                subtitle:\"删除异常\",\n                extra:{\n                    timestamp: Date.now(),\n                    error: errorMessage,\n                    stack: error instanceof Error ? error.stack : undefined\n                }\n            }});\n            \n            setSnackbar({ open: true, message: t('content.deleteAccount.failure', { error: errorMessage }), severity: 'error' });\n        }\n    };\n\n    const handleCloseSnackbar = () => {\n        setSnackbar({ ...snackbar, open: false });\n    };\n\n        if(!token){\n            return <></>\n        }\n    return (\n        <Box sx={{ mt: 2 }}>\n            <Button variant=\"contained\" color=\"error\" onClick={handleOpenDialog}>\n                {t('content.deleteAccount.button')}\n            </Button>\n\n            <Dialog\n                open={openDialog}\n                onClose={handleCloseDialog}\n            >\n                <DialogTitle>{t('content.deleteAccount.button')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('content.deleteAccount.confirm')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDialog}>取消</Button>\n                    <Button onClick={handleConfirmDelete} color=\"error\" autoFocus>\n                        确认注销\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Snackbar open={snackbar.open} autoHideDuration={6000} onClose={handleCloseSnackbar}>\n                <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>\n                    {snackbar.message}\n                </Alert>\n            </Snackbar>\n        </Box>\n    );\n};\n","import { trackingPrint } from \"@app/model\";\nimport { Box, Button } from \"@mui/material\";\nimport { PrivacyDialogDisplay } from \"@src/components/privacies/PrivacyDialogDisplay\";\nimport { usePrivacyDialog } from \"@src/components/privacies/usePrivacyDialog\";\nimport { MyReports } from \"@src/components/report/MyReports\";\nimport { FontSizeButton } from \"@src/components/settings/FontSizeButton\";\nimport { SignUpInButton } from \"../../sign-up-in/components/sign-up-in-button/SignUpIn\";\nimport { AppBuildTime } from \"./buildtime/AppBuildTime\";\nimport { DeleteAccountButton } from \"./DeleteAccountButton\";\n\n// import {LanguageSelect} from '../../../language-selector/LanguageSelect'\n\nfunction Privacy() {\n  const { open, openDialog, closeDialog } = usePrivacyDialog();\n\n  const handleOpenDialog = () => {\n    // 隐私协议按钮点击埋点\n    trackingPrint({params:{\n      type:\"用户操作\",\n      title:\"隐私协议\",\n      subtitle:\"协议按钮-点击\",\n      extra:{\n        timestamp: Date.now(),\n        page: \"settings\"\n      }\n    }});\n    openDialog();\n  };\n\n  const handleCloseDialog = () => {\n    // 隐私协议对话框关闭埋点\n    trackingPrint({params:{\n      type:\"模态框操作\",\n      title:\"隐私协议\",\n      subtitle:\"协议对话框-关闭\",\n      extra:{\n        timestamp: Date.now()\n      }\n    }});\n    closeDialog();\n  };\n\n  return (\n    <Box sx={{ mt: 2 }}>\n      <Button onClick={handleOpenDialog}>隐私协议</Button>\n      <PrivacyDialogDisplay\n        open={open}\n        onClose={handleCloseDialog}\n        type=\"main\"\n        area=\"zh-cn\"\n      />\n    </Box>\n  );\n}\n\nexport const SettingsContent = () => {\n  return (\n    <Box sx={{ p: 2 }}>\n      {/* <LanguageSelect /> */}\n      \n      <SignUpInButton back=\"/settings\" />\n      <DeleteAccountButton />\n      <FontSizeButton />\n      <AppBuildTime />\n      \n      {/* 语音呼救设置 */}\n      {/* <VoiceEmergencySettings /> */}\n      <MyReports/>\n      <Privacy />\n      \n      {/* 保留自动弹出逻辑 */}\n      {/* <PrivacyDialogAuto type=\"main\" area=\"zh-cn\" /> */}\n      {/* <AppVersion /> */}\n    </Box>\n  );\n};","import { AppShell, TabbarContainer } from \"@app/ui\";\nimport { NavBar } from \"@src/components/navbar/NavBar\";\nimport { SettingsContent } from \"@src/components/pages/settings/content/Settings\";\nimport { SettingsPageDataContextLoader } from \"@src/components/pages/settings/data/settings.context\";\nimport { loadSettingsPageData } from \"@src/components/pages/settings/data/settings.data.intf\";\n\n\nexport default function SettingsPage() {\n    return (\n        <AppShell>\n            <TabbarContainer titleConf={{ ns: \"homepage/pages/settings/content\", key: \"content.title\" }}\n                        navBar={<NavBar/>}>\n                    <SettingsContent />\n            </TabbarContainer>\n        </AppShell>\n    )\n}   ","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/settings\",\n      function () {\n        return require(\"private-next-pages/settings/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/settings\"])\n      });\n    }\n  "],"names":["useState","usePrivacyDialog","open","setOpen","openDialog","closeDialog","Box","Button","ReportButton","useRouter","MyReports","router","sx","mt","mb","onClick","push","useFontSize","FontSizeButton","handleOpenFontSizeDialog","fullWidth","variant","startIcon","span","style","fontSize","py","justifyContent","textTransform","marginRight","Dialog","DialogActions","DialogContent","DialogTitle","React","useTranslation","ButtonConfirm","title","content","confirmText","cancelText","onConfirm","onCancel","onClose","cancelId","confirmId","children","isOpen","setIsOpen","t","id","data-id","useProxyWatch","user","toast","Link","useEffect","SignUpInButton","back","token","data","storeData","user_token","userInitialized","userName","setUserName","onSignoutClick","signout","duration","href","getConfig","AppBuildTime","Date","publicRuntimeConfig","buildTime","toLocaleString","request","tms","tmsUserDeleteAccount","opts","res","TUser","MUserDeleteAccount","params","gateway","handler","dataIsOk","console","error","err","DialogContentText","Snackbar","Alert","trackingPrint","DeleteAccountButton","setOpenDialog","snackbar","setSnackbar","message","severity","handleOpenDialog","type","subtitle","extra","timestamp","now","hasToken","handleCloseDialog","handleConfirmDelete","userId","response","shellIsOk","redirectDelay","setTimeout","window","location","errorMessage","msg","Error","stack","undefined","handleCloseSnackbar","color","autoFocus","autoHideDuration","width","PrivacyDialogDisplay","Privacy","page","area","SettingsContent","p","AppShell","TabbarContainer","NavBar","SettingsPage","titleConf","ns","key","navBar"],"sourceRoot":"","ignoreList":[3]}