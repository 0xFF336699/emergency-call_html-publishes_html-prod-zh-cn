{"version":3,"file":"static/chunks/pages/contacts-d4fae04ea1e18557.js","mappings":"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","sources":["webpack://_N_E/../../libs/app/model/src/remote/emergency-call/remove_established_contact.ts","webpack://_N_E/./src/components/InvitationManager/InvitationManager.tsx","webpack://_N_E/../../libs/app/model/src/remote/emergency-call/list_established_contacts.ts","webpack://_N_E/./src/components/EstablishedContactsManager/EstablishedContactsManager.tsx","webpack://_N_E/./src/components/ContactRelationshipManager/ContactRelationshipManager.tsx","webpack://_N_E/./src/pages/contacts/index.tsx","webpack://_N_E/./src/components/navbar/NavBar.tsx","webpack://_N_E/?32db","webpack://_N_E/../../libs/app/model/src/remote/emergency-call/list_all_invitations.ts","webpack://_N_E/../../libs/app/ui/src/components/tabbar/Tabbar.tsx"],"sourcesContent":["import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { request } from \"@fanfanlo\";\n\n/**\n * 移除已建立联系人关系的请求参数\n */\nexport interface IParamsRemoveEstablishedContact {\n  contact_id: string;\n}\n\n/**\n * 移除已建立联系人关系的响应结果\n */\nexport interface IResultRemoveEstablishedContact {\n  is_ok: boolean;\n  msg?: string;\n}\n\n/**\n * 移除已建立的联系人关系\n */\nexport async function tmsEmergencyCallRemoveEstablishedContact(\n  opts: IRequestOptions<IParamsRemoveEstablishedContact>\n) {\n  return request<IResultRemoveEstablishedContact, IParamsRemoveEstablishedContact>(\n    tms.TEmc,\n    tms.MEmcRemoveEstablishedContact,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出服务\nexport const emergencyCallRemoveContactService = {\n  removeEstablishedContact: tmsEmergencyCallRemoveEstablishedContact,\n};\n\nexport default emergencyCallRemoveContactService;","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  CircularProgress,\n  Divider,\n  Avatar,\n  Chip,\n  Paper,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from '@mui/material';\nimport {\n  Check as CheckIcon,\n  Close as CloseIcon,\n  AccessTime as AccessTimeIcon,\n  PersonAdd as PersonAddIcon,\n  Person as PersonIcon,\n  Refresh as RefreshIcon,\n  PersonRemove as PersonRemoveIcon,\n  HourglassEmpty as HourglassEmptyIcon,\n} from '@mui/icons-material';\nimport { formatDistanceToNow } from 'date-fns';\nimport { zhCN } from 'date-fns/locale';\nimport { emergencyCallInvitationService, emergencyCallContactService, emergencyCallRemoveContactService, cancelOrRemoveInvitation, InviteStatus } from '@app/model';\n\n// 定义请求处理器类型\ntype RequestHandler<T = any> = {\n  onSuccess: (res: T) => void;\n  onError: (err: Error) => void;\n};\n\n// 定义邀请接口\ninterface IInvitation {\n  invitation_id: string;\n  user_info: {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n  };\n  message?: string;\n  status: InviteStatus;\n  expires_at: number;\n  created_at: string;\n  contact_id?: string; // 已接受邀请的联系人ID\n}\n\n// 定义 API 响应类型\ninterface IApiResponse<T = any> {\n  shellIsOk: boolean;\n  dataIsOk: boolean;\n  data?: {\n    is_ok: boolean;\n    msg?: string;\n    sent_invitations?: IInvitation[];\n    received_invitations?: IInvitation[];\n  } & T;\n}\n\n// 获取状态标签的配置\nconst getStatusConfig = (status: InviteStatus, expiresAt: number) => {\n  const isExpired = new Date(expiresAt * 1000) < new Date();\n  const statusTexts: Record<InviteStatus, string> = {\n    pending: '等待处理',\n    accepted: '已接受',\n    declined: '已拒绝',\n    expired: '已过期',\n    cancelled: '已取消',\n  };\n\n  const statusColors: Record<InviteStatus, 'default' | 'primary' | 'success' | 'error' | 'warning'> = {\n    pending: 'primary',\n    accepted: 'success',\n    declined: 'error',\n    expired: 'default',\n    cancelled: 'default',\n  };\n\n  return {\n    text: statusTexts[status] || status,\n    color: statusColors[status] || 'default',\n    isExpired,\n    showExpiry: status === 'pending' && !isExpired,\n  };\n};\n\n// 邀请状态标签组件\nfunction InvitationStatusChip({ status, expiresAt }: { status: InviteStatus; expiresAt: number }) {\n  const config = getStatusConfig(status, expiresAt);\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" gap={1}>\n      <Chip size=\"small\" label={config.text} color={config.color} variant=\"outlined\" />\n      {config.showExpiry && (\n        <Chip\n          size=\"small\"\n          icon={<AccessTimeIcon fontSize=\"small\" />}\n          label={`${formatDistanceToNow(expiresAt * 1000, {\n            addSuffix: true,\n            locale: zhCN,\n          })}`}\n          color=\"primary\"\n          variant=\"outlined\"\n        />\n      )}\n    </Box>\n  );\n}\n\n// 用户信息卡片组件\nfunction UserInfoCard({\n  invitation_id,\n  userInfo,\n  message,\n  status,\n  expiresAt,\n  isReceived = false,\n  onRespond,\n  onRemoveEstablishedContact,\n  isProcessing = false,\n  contactId, // 新增 contactId 参数\n}: {\n  invitation_id: string;\n  userInfo: { user_id: string; display_name: string; avatar_url?: string };\n  message?: string;\n  status: string;\n  expiresAt: number;\n  isReceived?: boolean;\n  onRespond?: (action: 'accept' | 'decline' | 'cancel' | 'remove') => Promise<void>;\n  onRemoveEstablishedContact?: (invitationId: string, contactId: string) => Promise<void>;\n  isProcessing?: boolean;\n  contactId?: string; // 新增 contactId 参数\n}) {\n  const [isProcessingAction, setIsProcessingAction] = useState(false);\n\n  const handleRespond = async (action: 'accept' | 'decline' | 'cancel' | 'remove') => {\n    if (!onRespond) return;\n\n    try {\n      setIsProcessingAction(true);\n      await onRespond(action);\n    } finally {\n      setIsProcessingAction(false);\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\" sx={{ mb: 2, opacity: isProcessing ? 0.7 : 1 }}>\n      <CardContent>\n        <Box display=\"flex\" alignItems=\"center\" mb={1}>\n          <Avatar src={userInfo.avatar_url} alt={userInfo.display_name} sx={{ width: 40, height: 40, mr: 2 }}>\n            {userInfo.display_name?.[0]?.toUpperCase() || '?'}\n          </Avatar>\n          <Box flexGrow={1}>\n            <Typography variant=\"subtitle1\">{userInfo.display_name || '未知用户'}</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              ID: {userInfo.user_id}\n            </Typography>\n          </Box>\n          <InvitationStatusChip status={status} expiresAt={expiresAt} />\n        </Box>\n\n        {message && (\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1, mb: 1 }}>\n            {message}\n          </Typography>\n        )}\n      </CardContent>\n\n      {isReceived ? (\n        // 接收的邀请\n        <CardActions sx={{ justifyContent: 'flex-end', pt: 0 }}>\n          {status === 'pending' ? (\n            // 待处理的邀请：显示接受/拒绝按钮\n            <>\n              <Button\n                size=\"small\"\n                color=\"error\"\n                startIcon={<CloseIcon />}\n                onClick={() => handleRespond('decline')}\n                disabled={isProcessing || isProcessingAction}>\n                拒绝\n              </Button>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"contained\"\n                startIcon={<CheckIcon />}\n                onClick={() => handleRespond('accept')}\n                disabled={isProcessing || isProcessingAction}>\n                接受\n              </Button>\n            </>\n          ) : status === 'accepted' ? (\n            // 已接受的邀请：显示解除关系按钮\n            <Button\n              size=\"small\"\n              color=\"error\"\n              variant=\"outlined\"\n              startIcon={<PersonRemoveIcon />}\n              onClick={async () => {\n                console.log('InvitationManager_Contact_Remove - 点击解除关系按钮', {\n                  invitation_id,\n                  contactId,\n                  userInfo,\n                  status,\n                  hasOnRemoveEstablishedContact: !!onRemoveEstablishedContact,\n                  isContactIdValid: !!contactId,\n                  isProcessing,\n                  isProcessingAction\n                });\n\n                if (!onRemoveEstablishedContact) {\n                  console.log('InvitationManager_Contact_Remove - onRemoveEstablishedContact回调函数不存在');\n                  return;\n                }\n\n                if (!contactId) {\n                  console.log('InvitationManager_Contact_Remove - contactId为空，无法删除');\n                  alert('contactId为空，无法删除联系人关系');\n                  return;\n                }\n\n                console.log('InvitationManager_Contact_Remove - 开始调用删除函数');\n                try {\n                  await onRemoveEstablishedContact(invitation_id, contactId);\n                  console.log('InvitationManager_Contact_Remove - 删除函数调用完成');\n                } catch (error) {\n                  console.error('InvitationManager_Contact_Remove - 删除函数调用出错:', error);\n                }\n              }}\n              disabled={isProcessing || isProcessingAction}>\n              解除关系\n            </Button>\n          ) : null}\n        </CardActions>\n      ) : status === 'pending' ? (\n        // 发送的待处理邀请：显示取消邀请按钮\n        <CardActions sx={{ justifyContent: 'flex-end', pt: 0 }}>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"outlined\"\n            startIcon={<CloseIcon />}\n            onClick={() => handleRespond('cancel')}\n            disabled={isProcessing || isProcessingAction}>\n            取消邀请\n          </Button>\n        </CardActions>\n      ) : status === 'accepted' ? (\n        // 发送的已接受邀请：显示解除关系按钮\n        <CardActions sx={{ justifyContent: 'flex-end', pt: 0 }}>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"outlined\"\n            startIcon={<PersonRemoveIcon />}\n            onClick={async () => {\n              console.log('InvitationManager_Sent_Remove - 点击解除关系按钮(发送邀请)', {\n                invitation_id,\n                contactId,\n                userInfo,\n                status,\n                hasOnRemoveEstablishedContact: !!onRemoveEstablishedContact,\n                isContactIdValid: !!contactId,\n                isProcessing,\n                isProcessingAction\n              });\n\n              if (!onRemoveEstablishedContact) {\n                console.log('InvitationManager_Sent_Remove - onRemoveEstablishedContact回调函数不存在');\n                return;\n              }\n\n              if (!contactId) {\n                console.log('InvitationManager_Sent_Remove - contactId为空，无法删除');\n                alert('contactId为空，无法删除联系人关系');\n                return;\n              }\n\n              console.log('InvitationManager_Sent_Remove - 开始调用删除函数');\n              try {\n                await onRemoveEstablishedContact(invitation_id, contactId);\n                console.log('InvitationManager_Sent_Remove - 删除函数调用完成');\n              } catch (error) {\n                console.error('InvitationManager_Sent_Remove - 删除函数调用出错:', error);\n              }\n            }}\n            disabled={isProcessing || isProcessingAction}>\n            解除关系\n          </Button>\n        </CardActions>\n      ) : null}\n    </Card>\n  );\n}\n\nconst InvitationManager: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isRefreshing, setIsRefreshing] = useState<boolean>(false);\n  const [invitations, setInvitations] = useState<{\n    sent: IInvitation[];\n    received: IInvitation[];\n  }>({ sent: [], received: [] });\n  const [isProcessing, setIsProcessing] = useState<boolean>(false);\n\n  // 加载邀请列表\n  const loadInvitations = useCallback(async (showLoading = true) => {\n    if (showLoading) {\n      setIsLoading(true);\n    } else {\n      setIsRefreshing(true);\n    }\n    setError(null);\n\n    try {\n      const res = await emergencyCallInvitationService.listAllInvitations({\n        params: {},\n      } as any);\n      \n      if (res.shellIsOk && res.dataIsOk && res.data?.is_ok) {\n        console.log('InvitationManager_LoadData - 接口返回成功，开始处理数据', {\n          sentInvitationsCount: (res.data.sent_invitations || []).length,\n          receivedInvitationsCount: (res.data.received_invitations || []).length,\n          rawSentInvitations: res.data.sent_invitations,\n          rawReceivedInvitations: res.data.received_invitations\n        });\n\n        const processedSentInvitations = (res.data.sent_invitations || []).map((invite: any, index: number) => {\n          console.log(`InvitationManager_LoadData - 处理发送邀请[${index}]`, {\n            invitation_id: invite.invitation_id,\n            status: invite.status,\n            contact_id: invite.contact_id,\n            hasContactId: !!invite.contact_id,\n            userInfo: invite.user_info\n          });\n\n          return {\n            ...invite,\n            status: invite.status as InviteStatus,\n          };\n        });\n\n        const processedReceivedInvitations = (res.data.received_invitations || []).map((invite: any, index: number) => {\n          console.log(`InvitationManager_LoadData - 处理接收邀请[${index}]`, {\n            invitation_id: invite.invitation_id,\n            status: invite.status,\n            contact_id: invite.contact_id,\n            hasContactId: !!invite.contact_id,\n            userInfo: invite.user_info\n          });\n\n          return {\n            ...invite,\n            status: invite.status as InviteStatus,\n          };\n        });\n\n        setInvitations({\n          sent: processedSentInvitations,\n          received: processedReceivedInvitations,\n        });\n\n        console.log('InvitationManager_LoadData - 数据处理完成，设置到state', {\n          finalSentCount: processedSentInvitations.length,\n          finalReceivedCount: processedReceivedInvitations.length\n        });\n      } else {\n        setError(res.data?.msg || '加载邀请列表失败');\n      }\n    } catch (err) {\n      console.error('加载邀请列表异常:', err);\n      setError('发生未知错误');\n    } finally {\n      setIsLoading(false);\n      setIsRefreshing(false);\n    }\n  }, []);\n\n  // 处理取消或删除邀请\n  const handleCancelOrRemove = useCallback(\n    async (invitationId: string, isReceived: boolean, inviteStatus: InviteStatus) => {\n      try {\n        setIsProcessing(true);\n\n        const res = await cancelOrRemoveInvitation(invitationId, isReceived, inviteStatus);\n        if (!res.shellIsOk || !res.dataIsOk || !res.data?.is_ok) {\n          throw new Error(res.data?.msg || '操作失败');\n        }\n        // 直接更新状态\n        setInvitations(prev => ({\n          sent: prev.sent.filter(i => i.invitation_id !== invitationId),\n          received: prev.received.filter(i => i.invitation_id !== invitationId),\n        }));\n      } catch (err) {\n        console.error('处理邀请失败:', err);\n        setError(err instanceof Error ? err.message : '操作失败，请重试');\n      } finally {\n        setIsProcessing(false);\n      }\n    },\n    [],\n  );\n\n  // 处理解除已建立的联系人关系\n  const handleRemoveEstablishedContact = useCallback(\n    async (invitationId: string, contactId: string) => {\n      console.log('InvitationManager_HandleRemove - 开始处理解除联系人关系', { invitationId, contactId });\n\n      try {\n        console.log('InvitationManager_HandleRemove - 设置处理状态为true');\n        setIsProcessing(true);\n\n        console.log('InvitationManager_HandleRemove - 调用删除接口前的参数检查', {\n          invitationId,\n          contactId,\n          isContactIdValid: !!contactId,\n          contactIdLength: contactId?.length || 0\n        });\n\n        if (!contactId) {\n          console.error('InvitationManager_HandleRemove - contactId为空，无法继续删除');\n          throw new Error('联系人ID为空，无法删除');\n        }\n\n        // 直接调用删除接口，使用 contactId 作为参数\n        console.log('InvitationManager_HandleRemove - 调用删除接口', {\n          serviceName: 'emergencyCallRemoveContactService.removeEstablishedContact',\n          params: { contact_id: contactId }\n        });\n\n        const removeRes = await emergencyCallRemoveContactService.removeEstablishedContact({\n          params: { contact_id: contactId },\n        } as any);\n\n        console.log('InvitationManager_HandleRemove - 删除接口响应', {\n          response: removeRes,\n          shellIsOk: removeRes?.shellIsOk,\n          dataIsOk: removeRes?.dataIsOk,\n          dataIsOkValue: removeRes?.data?.is_ok,\n          msg: removeRes?.data?.msg\n        });\n\n        if (!removeRes.shellIsOk || !removeRes.dataIsOk || !removeRes.data?.is_ok) {\n          console.error('InvitationManager_HandleRemove - 删除联系人失败', {\n            shellIsOk: removeRes.shellIsOk,\n            dataIsOk: removeRes.dataIsOk,\n            dataIsOkValue: removeRes.data?.is_ok,\n            errorMsg: removeRes.data?.msg\n          });\n          throw new Error('删除联系人关系失败: ' + (removeRes.data?.msg || '未知错误'));\n        }\n\n        // 更新UI状态\n        console.log('InvitationManager_HandleRemove - 开始更新UI状态');\n        console.log('InvitationManager_HandleRemove - 更新前的invitations状态', {\n          sentCount: invitations.sent.length,\n          receivedCount: invitations.received.length,\n          targetInvitationId: invitationId\n        });\n\n        setInvitations(prev => {\n          const newState = {\n            sent: prev.sent.filter(i => {\n              const shouldKeep = i.invitation_id !== invitationId;\n              console.log('InvitationManager_HandleRemove - sent过滤', {\n                invitationId: i.invitation_id,\n                targetId: invitationId,\n                shouldKeep\n              });\n              return shouldKeep;\n            }),\n            received: prev.received.filter(i => {\n              const shouldKeep = i.invitation_id !== invitationId;\n              console.log('InvitationManager_HandleRemove - received过滤', {\n                invitationId: i.invitation_id,\n                targetId: invitationId,\n                shouldKeep\n              });\n              return shouldKeep;\n            }),\n          };\n\n          console.log('InvitationManager_HandleRemove - 更新后的invitations状态', {\n            sentCount: newState.sent.length,\n            receivedCount: newState.received.length\n          });\n\n          return newState;\n        });\n\n        console.log('InvitationManager_HandleRemove - 操作完成成功');\n      } catch (err) {\n        console.error('InvitationManager_HandleRemove - 删除联系人关系失败', {\n          error: err,\n          errorMessage: err instanceof Error ? err.message : '未知错误',\n          invitationId,\n          contactId\n        });\n        setError(err instanceof Error ? err.message : '删除联系人关系失败，请重试');\n      } finally {\n        console.log('InvitationManager_HandleRemove - 设置处理状态为false');\n        setIsProcessing(false);\n      }\n    },\n    [invitations.sent, invitations.received],\n  );\n\n  // 响应邀请\n  const handleRespondToInvite = useCallback(\n    async (invitationId: string, action: 'accept' | 'decline' | 'cancel' | 'remove'): Promise<void> => {\n      try {\n        setIsProcessing(true);\n\n        if (action === 'accept' || action === 'decline') {\n          // 接受或拒绝邀请\n          const res = await emergencyCallInvitationService.respondToInvite({\n            params: { invitation_id: invitationId, action },\n          } as any);\n\n          if (!res.shellIsOk || !res.dataIsOk || !res.data?.is_ok) {\n            throw new Error(res.data?.msg || '操作失败');\n          }\n          \n          // 直接更新状态\n          setInvitations(prev => {\n            const updateInvitation = (invites: IInvitation[]) =>\n              invites.map(invite =>\n                invite.invitation_id === invitationId\n                  ? {\n                      ...invite,\n                      status: action === 'accept' ? 'accepted' : ('declined' as InviteStatus),\n                    }\n                  : invite,\n              );\n\n            return {\n              sent: updateInvitation(prev.sent),\n              received: updateInvitation(prev.received),\n            };\n          });\n        } else {\n          // 取消邀请或解除关系 - 需要获取邀请状态\n          // 从当前状态中查找对应的邀请来获取状态和类型\n          const sentInvitation = invitations.sent.find(inv => inv.invitation_id === invitationId);\n          const receivedInvitation = invitations.received.find(inv => inv.invitation_id === invitationId);\n          const invitation = sentInvitation || receivedInvitation;\n          const isReceived = !!receivedInvitation; // 如果在received数组中找到，则为收到的邀请\n          const inviteStatus = invitation?.status as InviteStatus || 'pending';\n          await handleCancelOrRemove(invitationId, isReceived, inviteStatus);\n        }\n      } catch (err) {\n        console.error('处理邀请失败:', err);\n        setError(err instanceof Error ? err.message : '操作失败，请重试');\n      } finally {\n        setIsProcessing(false);\n      }\n    },\n    [handleCancelOrRemove],\n  );\n\n  // 处理刷新\n  const handleRefresh = useCallback(() => {\n    loadInvitations(false);\n  }, [loadInvitations]);\n\n  // 组件加载时获取数据\n  useEffect(() => {\n    loadInvitations();\n  }, [loadInvitations]);\n\n  const renderContent = () => {\n    if (isLoading) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" p={4}>\n          <CircularProgress />\n        </Box>\n      );\n    }\n\n    if (error) {\n      return (\n        <Box p={2}>\n          <Typography color=\"error\">{error}</Typography>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => loadInvitations()} startIcon={<RefreshIcon />}>\n            重试\n          </Button>\n        </Box>\n      );\n    }\n\n    const hasSentInvitations = invitations.sent.length > 0;\n    const hasReceivedInvitations = invitations.received.length > 0;\n\n    return (\n      <Box>\n        <Typography variant=\"h6\" gutterBottom>\n          收到的邀请\n        </Typography>\n        {hasReceivedInvitations ? (\n          <Box mb={4}>\n            {invitations.received.map(invite => (\n              <UserInfoCard\n                key={`received-${invite.invitation_id}`}\n                invitation_id={invite.invitation_id}\n                userInfo={invite.user_info}\n                message={invite.message}\n                status={invite.status as InviteStatus}\n                expiresAt={invite.expires_at}\n                isReceived={true}\n                contactId={invite.contact_id} // 传递 contactId\n                onRespond={async action => {\n                  if (action === 'remove') {\n                    await handleCancelOrRemove(invite.invitation_id, true, invite.status as InviteStatus);\n                  } else if (action === 'cancel') {\n                    await handleCancelOrRemove(invite.invitation_id, false, invite.status as InviteStatus);\n                  } else {\n                    await handleRespondToInvite(invite.invitation_id, action);\n                  }\n                }}\n                onRemoveEstablishedContact={handleRemoveEstablishedContact}\n                isProcessing={isRefreshing || isProcessing}\n              />\n            ))}\n          </Box>\n        ) : (\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            p={4}\n            textAlign=\"center\"\n            bgcolor=\"action.hover\"\n            borderRadius={1}\n            mb={4}>\n            <PersonIcon color=\"disabled\" sx={{ fontSize: 48, mb: 1 }} />\n            <Typography color=\"textSecondary\">暂无收到的邀请</Typography>\n          </Box>\n        )}\n\n        <Typography variant=\"h6\" gutterBottom>\n          已发送的邀请\n        </Typography>\n        {hasSentInvitations ? (\n          <Box>\n            {invitations.sent.map(invite => (\n              <UserInfoCard\n                key={`sent-${invite.invitation_id}`}\n                invitation_id={invite.invitation_id}\n                userInfo={invite.user_info}\n                message={invite.message}\n                status={invite.status as InviteStatus}\n                expiresAt={invite.expires_at}\n                isReceived={false}\n                contactId={invite.contact_id} // 传递 contactId\n                onRespond={async action => {\n                  if (action === 'cancel') {\n                    await handleCancelOrRemove(invite.invitation_id, false, invite.status as InviteStatus);\n                  }\n                }}\n                onRemoveEstablishedContact={handleRemoveEstablishedContact}\n                isProcessing={isRefreshing || isProcessing}\n              />\n            ))}\n          </Box>\n        ) : (\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            p={4}\n            textAlign=\"center\"\n            bgcolor=\"action.hover\"\n            borderRadius={1}>\n            <PersonIcon color=\"disabled\" sx={{ fontSize: 48, mb: 1 }} />\n            <Typography color=\"textSecondary\">暂无已发送的邀请</Typography>\n          </Box>\n        )}\n      </Box>\n    );\n  };\n\n  return (\n    <Box p={2}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n        <Typography variant=\"h5\">紧急联系人邀请</Typography>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleRefresh}\n          disabled={isRefreshing}\n          startIcon={isRefreshing ? <CircularProgress size={20} /> : <RefreshIcon />}>\n          {isRefreshing ? '刷新中...' : '刷新'}\n        </Button>\n      </Box>\n      {renderContent()}\n    </Box>\n  );\n};\n\nexport default InvitationManager;\n","import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { request } from \"@fanfanlo\";\n\n/**\n * 获取已建立联系人关系的请求参数\n */\nexport interface IParamsListEstablishedContacts {\n  // 可以添加分页等参数\n  page?: number;\n  page_size?: number;\n}\n\n/**\n * 已建立联系人的用户信息\n */\nexport interface IEstablishedContactUserInfo {\n  user_id: string;\n  display_name: string;\n  avatar_url?: string;\n}\n\n/**\n * 已建立的联系人关系信息\n */\nexport interface IEstablishedContactInfo {\n  contact_id: string;\n  user_info: IEstablishedContactUserInfo;\n  relationship: string;\n  notes?: string;\n  created_at: number;\n  is_active: boolean;\n}\n\n/**\n * 获取已建立联系人关系的响应结果\n */\nexport interface IResultListEstablishedContacts {\n  is_ok: boolean;\n  msg?: string;\n  contacts: IEstablishedContactInfo[];\n}\n\n/**\n * 移除已建立联系人关系的请求参数\n */\nexport interface IParamsRemoveEstablishedContact {\n  contact_id: string;\n}\n\n/**\n * 移除已建立联系人关系的响应结果\n */\nexport interface IResultRemoveEstablishedContact {\n  is_ok: boolean;\n  msg?: string;\n}\n\n/**\n * 获取已建立的联系人关系\n */\nexport async function tmsEmergencyCallListEstablishedContacts(\n  opts: IRequestOptions<IParamsListEstablishedContacts>\n) {\n  return request<IResultListEstablishedContacts, IParamsListEstablishedContacts>(\n    tms.TEmc,\n    tms.MEmcListEstablishedContacts,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n/**\n * 移除已建立的联系人关系\n */\nexport async function tmsEmergencyCallRemoveEstablishedContact(\n  opts: IRequestOptions<IParamsRemoveEstablishedContact>\n) {\n  return request<IResultRemoveEstablishedContact, IParamsRemoveEstablishedContact>(\n    tms.TEmc,\n    tms.MEmcRemoveEstablishedContact,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出服务\nexport const emergencyCallContactService = {\n  listEstablishedContacts: tmsEmergencyCallListEstablishedContacts,\n  removeEstablishedContact: tmsEmergencyCallRemoveEstablishedContact,\n};\n\nexport default emergencyCallContactService;","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  CircularProgress,\n  Divider,\n  Avatar,\n  Chip,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n} from '@mui/material';\nimport {\n  Person as PersonIcon,\n  Refresh as RefreshIcon,\n  PersonRemove as PersonRemoveIcon,\n  AccessTime as AccessTimeIcon,\n  ContactPhone as ContactPhoneIcon,\n} from '@mui/icons-material';\nimport { formatDistanceToNow } from 'date-fns';\nimport { zhCN } from 'date-fns/locale';\nimport { emergencyCallContactService, emergencyCallRemoveContactService, IEstablishedContactInfo, user } from '@app/model';\nimport { useProxyWatch } from '@fanfanlo';\n\n// 定义请求处理器类型\ntype RequestHandler<T = any> = {\n  onData: (res: T) => void;\n  onError: (err: Error) => void;\n};\n\n// 定义 API 响应类型\ninterface IApiResponse<T = any> {\n  shellIsOk: boolean;\n  dataIsOk: boolean;\n  data?: {\n    is_ok: boolean;\n    msg?: string;\n    contacts?: IEstablishedContactInfo[];\n  } & T;\n}\n\n// 联系人卡片组件\nfunction ContactCard({\n  contact,\n  onRemove,\n  isProcessing = false,\n}: {\n  contact: IEstablishedContactInfo;\n  onRemove?: (contactId: string) => Promise<void>;\n  isProcessing?: boolean;\n}) {\n  const [isRemoving, setIsRemoving] = useState(false);\n  const [showRemoveDialog, setShowRemoveDialog] = useState(false);\n\n  const handleRemove = async () => {\n    if (!onRemove) return;\n\n    try {\n      setIsRemoving(true);\n      await onRemove(contact.contact_id);\n      setShowRemoveDialog(false);\n    } finally {\n      setIsRemoving(false);\n    }\n  };\n\n  return (\n    <>\n      <Card variant=\"outlined\" sx={{ mb: 2, opacity: isProcessing ? 0.7 : 1 }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" mb={1}>\n            <Avatar\n              src={contact.user_info.avatar_url}\n              alt={contact.user_info.display_name}\n              sx={{ width: 50, height: 50, mr: 2 }}>\n              {contact.user_info.display_name?.[0]?.toUpperCase() || '?'}\n            </Avatar>\n            <Box flexGrow={1}>\n              <Typography variant=\"h6\">{contact.user_info.display_name || '未知用户'}</Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                ID: {contact.user_info.user_id}\n              </Typography>\n              {contact.relationship && (\n                <Chip size=\"small\" label={contact.relationship} color=\"primary\" variant=\"outlined\" sx={{ mt: 0.5 }} />\n              )}\n            </Box>\n            <Box textAlign=\"right\">\n              <Chip\n                size=\"small\"\n                icon={<AccessTimeIcon fontSize=\"small\" />}\n                label={`${formatDistanceToNow(contact.created_at * 1000, {\n                  addSuffix: true,\n                  locale: zhCN,\n                })}`}\n                color=\"default\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </Box>\n\n          {contact.notes && (\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n              备注: {contact.notes}\n            </Typography>\n          )}\n        </CardContent>\n\n        <CardActions sx={{ justifyContent: 'flex-end', pt: 0 }}>\n          <Button\n            size=\"small\"\n            color=\"error\"\n            variant=\"outlined\"\n            startIcon={<PersonRemoveIcon />}\n            onClick={() => setShowRemoveDialog(true)}\n            disabled={isProcessing || isRemoving}>\n            解除关系\n          </Button>\n        </CardActions>\n      </Card>\n\n      {/* 删除确认对话框 */}\n      <Dialog\n        open={showRemoveDialog}\n        onClose={() => setShowRemoveDialog(false)}\n        aria-labelledby=\"remove-contact-dialog\">\n        <DialogTitle id=\"remove-contact-dialog\">确认解除联系人关系</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            您确定要与 <strong>{contact.user_info.display_name}</strong> 解除紧急联系人关系吗？ 此操作不可撤销。\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowRemoveDialog(false)} disabled={isRemoving}>\n            取消\n          </Button>\n          <Button\n            onClick={handleRemove}\n            color=\"error\"\n            variant=\"contained\"\n            disabled={isRemoving}\n            startIcon={isRemoving ? <CircularProgress size={16} /> : <PersonRemoveIcon />}>\n            {isRemoving ? '处理中...' : '确认解除'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nconst EstablishedContactsManager: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isRefreshing, setIsRefreshing] = useState<boolean>(false);\n  const [contacts, setContacts] = useState<IEstablishedContactInfo[]>([]);\n  const [isProcessing, setIsProcessing] = useState<boolean>(false);\n\n  // 加载已建立的联系人关系\n  const loadEstablishedContacts = useCallback(async (showLoading = true) => {\n    if (showLoading) {\n      setIsLoading(true);\n    } else {\n      setIsRefreshing(true);\n    }\n    setError(null);\n\n    try {\n      const res = await emergencyCallContactService.listEstablishedContacts({\n        params: {},\n      } as any);\n      if (res.shellIsOk && res.dataIsOk && res.data?.is_ok) {\n        setContacts(res.data.contacts || []);\n      } else {\n        setError(res.data?.msg || '加载联系人列表失败');\n      }\n    } catch (err) {\n      console.error('加载联系人列表异常:', err);\n      setError('发生未知错误');\n    } finally {\n      setIsLoading(false);\n      setIsRefreshing(false);\n    }\n  }, []);\n\n  // 移除联系人关系\n  const handleRemoveContact = useCallback(async (contactId: string): Promise<void> => {\n    try {\n      setIsProcessing(true);\n\n      const res = await emergencyCallRemoveContactService.removeEstablishedContact({\n        params: { contact_id: contactId },\n        // handler,\n      } as any);\n\n      if (!res.shellIsOk || !res.dataIsOk || !res.data?.is_ok) {\n        throw new Error(res.data?.msg || '移除联系人失败');\n      }\n      // 从本地状态中移除\n      setContacts(prev => prev.filter(contact => contact.contact_id !== contactId));\n    } catch (err) {\n      console.error('移除联系人失败:', err);\n      setError(err instanceof Error ? err.message : '移除联系人失败，请重试');\n    } finally {\n      setIsProcessing(false);\n    }\n  }, []);\n\n  // 处理刷新\n  const handleRefresh = useCallback(() => {\n    loadEstablishedContacts(false);\n  }, [loadEstablishedContacts]);\n\n  // 组件加载时获取数据\n  useEffect(() => {\n    loadEstablishedContacts();\n  }, [loadEstablishedContacts]);\n\n  const renderContent = () => {\n    if (isLoading) {\n      return (\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" p={4}>\n          <CircularProgress />\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\n            加载中...\n          </Typography>\n        </Box>\n      );\n    }\n\n    if (error) {\n      return (\n        <Box p={2}>\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => loadEstablishedContacts()}\n            startIcon={<RefreshIcon />}>\n            重试\n          </Button>\n        </Box>\n      );\n    }\n\n    if (contacts.length === 0) {\n      return (\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          p={4}\n          textAlign=\"center\"\n          bgcolor=\"action.hover\"\n          borderRadius={1}>\n          <ContactPhoneIcon color=\"disabled\" sx={{ fontSize: 64, mb: 2 }} />\n          <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n            暂无紧急联系人\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            您还没有建立任何紧急联系人关系\n          </Typography>\n        </Box>\n      );\n    }\n\n    return (\n      <Box>\n        {contacts.map(contact => (\n          <ContactCard\n            key={contact.contact_id}\n            contact={contact}\n            onRemove={handleRemoveContact}\n            isProcessing={isRefreshing || isProcessing}\n          />\n        ))}\n      </Box>\n    );\n  };\n\n  return (\n    <Box p={2}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Box>\n          <Typography variant=\"h5\" gutterBottom>\n            我的紧急联系人\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            管理您已建立的紧急联系人关系\n          </Typography>\n        </Box>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleRefresh}\n          disabled={isRefreshing}\n          startIcon={isRefreshing ? <CircularProgress size={20} /> : <RefreshIcon />}>\n          {isRefreshing ? '刷新中...' : '刷新'}\n        </Button>\n      </Box>\n\n      {contacts.length > 0 && (\n        <Alert severity=\"info\" sx={{ mb: 2 }}>\n          共有 {contacts.length} 个紧急联系人\n        </Alert>\n      )}\n\n      {renderContent()}\n    </Box>\n  );\n};\n\nexport default EstablishedContactsManager;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  Paper,\n  Divider\n} from '@mui/material';\nimport {\n  People as PeopleIcon,\n  PersonAdd as PersonAddIcon,\n  ContactPhone as ContactPhoneIcon\n} from '@mui/icons-material';\n\nimport InvitationManager from '../InvitationManager/InvitationManager';\nimport EstablishedContactsManager from '../EstablishedContactsManager/EstablishedContactsManager';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`contact-tabpanel-${index}`}\n      aria-labelledby={`contact-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `contact-tab-${index}`,\n    'aria-controls': `contact-tabpanel-${index}`,\n  };\n}\n\nconst ContactRelationshipManager: React.FC = () => {\n  const [currentTab, setCurrentTab] = useState(0);\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setCurrentTab(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%', maxWidth: 800, mx: 'auto', p: 2 }}>\n      {/* 页面标题 */}\n      <Box mb={3} textAlign=\"center\">\n        <Typography variant=\"h4\" gutterBottom>\n          联系人关系管理\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          管理您的紧急联系人邀请和已建立的关系\n        </Typography>\n      </Box>\n\n      <Paper elevation={2}>\n        {/* 标签导航 */}\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs \n            value={currentTab} \n            onChange={handleTabChange}\n            aria-label=\"联系人管理标签\"\n            variant=\"fullWidth\"\n          >\n            <Tab \n              icon={<ContactPhoneIcon />}\n              label=\"我的联系人\" \n              {...a11yProps(0)}\n            />\n            <Tab \n              icon={<PersonAddIcon />}\n              label=\"邀请管理\" \n              {...a11yProps(1)}\n            />\n          </Tabs>\n        </Box>\n\n        {/* 标签内容 */}\n        <TabPanel value={currentTab} index={0}>\n          <EstablishedContactsManager />\n        </TabPanel>\n        \n        <TabPanel value={currentTab} index={1}>\n          <InvitationManager />\n        </TabPanel>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default ContactRelationshipManager;","import { AppbarContainer, AppShell, TabbarContainer } from \"@app/ui\";\nimport { NavBar } from \"@src/components/navbar/NavBar\";\nimport ContactRelationshipManager from \"@src/components/ContactRelationshipManager/ContactRelationshipManager\";\n\nexport default function ContactsPage() {\n\n    return (\n\n                    <AppShell>\n                        <AppbarContainer appbarProps={{title:\"联系人\", back:true}}>\n                <ContactRelationshipManager />\n                        </AppbarContainer>\n                    </AppShell>\n    )\n    return (\n        <AppShell>\n            <TabbarContainer \n                titleConf={{ ns: \"emergency-call/pages/contacts/content\", key: \"content.title\" }}\n                navBar={<NavBar/>}\n            >\n                <ContactRelationshipManager />\n            </TabbarContainer>\n        </AppShell>\n    )\n}","import { useRouter } from 'next/router';\nimport { nextPreload, useTranslation } from '@fanfanlo';\nimport { styled } from '@mui/material/styles';\nimport HomeIcon from '@mui/icons-material/Home';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport ListIcon from '@mui/icons-material/List';\nimport { BottomNavigation, BottomNavigationAction, Box } from '@mui/material';\nimport React from 'react';\n\nconst StyledBottomNavigation = styled(BottomNavigation)(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  boxShadow: '0 -2px 12px rgba(0, 0, 0, 0.08)',\n  height: 72,\n  borderTopLeftRadius: 16,\n  borderTopRightRadius: 16,\n  '& .Mui-selected': {\n    color: theme.palette.primary.main,\n    '& .MuiBottomNavigationAction-label': {\n      fontSize: '0.75rem',\n      fontWeight: 600,\n      marginTop: '4px',\n    },\n  },\n  '& .MuiBottomNavigationAction-root': {\n    minWidth: 'auto',\n    padding: '8px 12px',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.02)',\n    },\n    '& .MuiBottomNavigationAction-label': {\n      fontSize: '0.7rem',\n      opacity: 0.9,\n      transition: 'all 0.2s ease',\n    },\n  },\n}));\n\ninterface TabInfoType {\n  label: string;\n  value: string;\n  icon: React.ReactNode;\n}\n\nexport function NavBar() {\n  const router = useRouter();\n  const { pathname } = router;\n  const { t } = useTranslation('emergency-call/components/navbar/content');\n  const tabInfoList: TabInfoType[] = [\n    { label: t('NavBar.home'), value: '/', icon: <HomeIcon /> },\n    { label: t('NavBar.settings'), value: '/settings', icon: <SettingsIcon /> },\n  ];\n\n  React.useEffect(() => {\n    nextPreload(router, '/settings')\n    nextPreload(router, '/')\n  }, [])\n\n  return (\n    <Box sx={{ position: 'fixed', bottom: 0, left: 0, right: 0, zIndex: 1000 }}>\n      <StyledBottomNavigation \n        showLabels \n        value={pathname}\n        onChange={(_, newValue) => {\n          if (pathname !== newValue) {\n            router.push(newValue);\n          }\n        }}\n      >\n        {tabInfoList.map((e) => {\n          const isSelected = pathname === e.value;\n          return (\n            <BottomNavigationAction\n              key={e.value}\n              value={e.value}\n              label={e.label}\n              icon={\n                <Box\n                  sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    padding: '6px 0',\n                  }}\n                >\n                  {e.icon}\n                </Box>\n              }\n              data-id={`tabbar-${e.value}`}\n              sx={{\n                minWidth: 'auto',\n                '&.Mui-selected': {\n                  color: (theme) => theme.palette.primary.main,\n                  '& .MuiSvgIcon-root': {\n                    transform: 'scale(1.1)',\n                  },\n                },\n                '& .MuiSvgIcon-root': {\n                  fontSize: '1.6rem',\n                  marginBottom: '2px',\n                  transition: 'transform 0.2s ease',\n                },\n              }}\n            />\n          );\n        })}\n      </StyledBottomNavigation>\n    </Box>\n  );\n}","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/contacts\",\n      function () {\n        return require(\"private-next-pages/contacts/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/contacts\"])\n      });\n    }\n  ","import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { IRequestHandler, request } from \"@fanfanlo\";\nimport { emergencyCallContactService } from \"./list_established_contacts\";\n\n/**\n * 获取所有邀请的请求参数\n */\nexport interface IParamsListAllInvitations {\n  // 可以添加分页等参数\n  page?: number;\n  page_size?: number;\n}\n\n/**\n * 用户信息\n */\nexport interface IInvitationUserInfo {\n  user_id: string;\n  display_name: string;\n  avatar_url?: string;\n}\n\n// 邀请状态类型\nexport type InviteStatus = 'pending' | 'accepted' | 'declined' | 'expired' | 'cancelled';\n\n// 邀请记录详情\nexport interface IInvitationDetails {\n  invitation_id: string;\n  user_info: {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n  };\n  status: InviteStatus;\n  message: string;\n  created_at: number;\n  expires_at: number;\n}\n\n/**\n * 获取所有邀请的响应结果\n */\nexport interface IResultListAllInvitations {\n  is_ok: boolean;\n  msg?: string;\n  sent_invitations: IInvitationDetails[];\n  received_invitations: IInvitationDetails[];\n}\n\n/**\n * 响应邀请的请求参数\n */\nexport interface IParamsRespondToInvite {\n  invitation_id: string;\n  action: 'accept' | 'decline' | 'cancel' | 'remove';\n}\n\n/**\n * 获取所有邀请（发送和接收的）\n */\nexport async function tmsEmergencyCallListAllInvitations(\n  opts: IRequestOptions<IParamsListAllInvitations>\n) {\n  return request<IResultListAllInvitations, IParamsListAllInvitations>(\n    tms.TEmc,\n    tms.MEmcListAllInvitations,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n/**\n * 取消邀请或删除已建立的联系人关系\n * @param invitationId 邀请ID\n * @param isReceived 是否是接收的邀请\n * @param inviteStatus 邀请状态 - 用于判断是取消邀请还是删除关系\n * @returns Promise\n */\nexport async function cancelOrRemoveInvitation(\n  invitationId: string,\n  isReceived: boolean,\n  inviteStatus?: InviteStatus\n) {\n  // 如果是已接受的邀请，使用remove操作删除联系人关系\n  if (inviteStatus === 'accepted') {\n    return emergencyCallInvitationService.respondToInvite({\n      params: {\n        invitation_id: invitationId,\n        action: 'remove'\n      }\n    } as any);\n  }\n\n  // 对于pending状态的邀请，使用cancel操作\n  const action = 'cancel';\n  return emergencyCallInvitationService.respondToInvite({\n    params: {\n      invitation_id: invitationId,\n      action\n    }\n  } as any);\n}\n\n/**\n * 响应邀请\n */\nexport async function tmsEmergencyCallRespondToInvite(\n  opts: IRequestOptions<IParamsRespondToInvite>\n) {\n  return request<{ is_ok: boolean; msg?: string }, IParamsRespondToInvite>(\n    tms.TEmc,\n    tms.MEmcRespondToInvite,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出所有接口\nexport const emergencyCallInvitationService = {\n  listAllInvitations: tmsEmergencyCallListAllInvitations,\n  respondToInvite: tmsEmergencyCallRespondToInvite,\n};\n\nexport default emergencyCallInvitationService;\n","'use client';\r\nimport { Box, CssBaseline, Paper, Stack } from '@mui/material';\r\n\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { ITitleI18nConf } from '../page';\r\nimport AndroidPageContent from '../page/AndroidPageContent';\r\n\r\nfunction BottomBar({navBar}:{navBar?:React.ReactNode}) {\r\n  return <Paper\r\n    id=\"bottom-navigation\"\r\n    sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }}\r\n    elevation={3}>\r\n    {navBar}\r\n  </Paper>;\r\n}\r\nexport function TabbarContainer({ children, titleConf, navBar }: {titleConf?:ITitleI18nConf, navBar:React.ReactNode} & PropsWithChildren)  {\r\n  return (\r\n    <Box sx={{ \r\n      minHeight: '100vh',\r\n      paddingBottom: '72px' // 为固定在底部的tabbar留出空间\r\n    }}>\r\n      <CssBaseline />\r\n      <AndroidPageContent titleConf={titleConf}>\r\n        {children}\r\n      </AndroidPageContent>\r\n      <BottomBar navBar={navBar} />\r\n    </Box>\r\n  );\r\n}\r\n\r\n"],"names":["tms","request","tmsEmergencyCallRemoveEstablishedContact","opts","TEmc","MEmcRemoveEstablishedContact","params","gateway","handler","emergencyCallRemoveContactService","removeEstablishedContact","React","useState","useEffect","useCallback","Box","Typography","Button","Card","CardContent","CardActions","CircularProgress","Avatar","Chip","Check","CheckIcon","Close","CloseIcon","AccessTime","AccessTimeIcon","Person","PersonIcon","Refresh","RefreshIcon","PersonRemove","PersonRemoveIcon","formatDistanceToNow","zhCN","emergencyCallInvitationService","cancelOrRemoveInvitation","getStatusConfig","status","expiresAt","isExpired","Date","statusTexts","pending","accepted","declined","expired","cancelled","statusColors","text","color","showExpiry","InvitationStatusChip","config","display","alignItems","gap","size","label","variant","icon","fontSize","addSuffix","locale","UserInfoCard","invitation_id","userInfo","message","isReceived","onRespond","onRemoveEstablishedContact","isProcessing","contactId","isProcessingAction","setIsProcessingAction","handleRespond","action","sx","mb","opacity","src","avatar_url","alt","display_name","width","height","mr","toUpperCase","flexGrow","user_id","mt","justifyContent","pt","startIcon","onClick","disabled","console","log","hasOnRemoveEstablishedContact","isContactIdValid","alert","error","InvitationManager","isLoading","setIsLoading","setError","isRefreshing","setIsRefreshing","invitations","setInvitations","sent","received","setIsProcessing","loadInvitations","showLoading","res","listAllInvitations","shellIsOk","dataIsOk","data","is_ok","sentInvitationsCount","sent_invitations","length","receivedInvitationsCount","received_invitations","rawSentInvitations","rawReceivedInvitations","processedSentInvitations","map","invite","index","contact_id","hasContactId","user_info","processedReceivedInvitations","finalSentCount","finalReceivedCount","msg","err","handleCancelOrRemove","invitationId","inviteStatus","Error","prev","filter","i","handleRemoveEstablishedContact","removeRes","contactIdLength","serviceName","response","dataIsOkValue","errorMsg","sentCount","receivedCount","targetInvitationId","newState","shouldKeep","targetId","errorMessage","handleRespondToInvite","respondToInvite","updateInvitation","invites","sentInvitation","find","inv","receivedInvitation","invitation","handleRefresh","renderContent","p","hasSentInvitations","hasReceivedInvitations","gutterBottom","expires_at","flexDirection","textAlign","bgcolor","borderRadius","tmsEmergencyCallListEstablishedContacts","MEmcListEstablishedContacts","emergencyCallContactService","listEstablishedContacts","Alert","Dialog","DialogTitle","DialogContent","DialogActions","DialogContentText","ContactPhone","ContactPhoneIcon","ContactCard","contact","onRemove","isRemoving","setIsRemoving","showRemoveDialog","setShowRemoveDialog","handleRemove","relationship","created_at","notes","open","onClose","aria-labelledby","id","strong","EstablishedContactsManager","contacts","setContacts","loadEstablishedContacts","handleRemoveContact","severity","Tabs","Tab","Paper","PersonAdd","PersonAddIcon","TabPanel","props","children","value","other","div","role","hidden","a11yProps","ContactRelationshipManager","currentTab","setCurrentTab","handleTabChange","event","newValue","maxWidth","mx","elevation","borderBottom","borderColor","onChange","aria-label","AppbarContainer","AppShell","TabbarContainer","NavBar","ContactsPage","appbarProps","title","back","titleConf","ns","key","navBar","useRouter","nextPreload","useTranslation","styled","HomeIcon","SettingsIcon","BottomNavigation","BottomNavigationAction","StyledBottomNavigation","theme","backgroundColor","palette","background","paper","boxShadow","borderTopLeftRadius","borderTopRightRadius","primary","main","fontWeight","marginTop","minWidth","padding","transition","router","pathname","t","tabInfoList","position","bottom","left","right","zIndex","showLabels","_","push","e","isSelected","data-id","transform","marginBottom","tmsEmergencyCallListAllInvitations","MEmcListAllInvitations","tmsEmergencyCallRespondToInvite","MEmcRespondToInvite","CssBaseline","AndroidPageContent","BottomBar","minHeight","paddingBottom"],"sourceRoot":"","ignoreList":[]}