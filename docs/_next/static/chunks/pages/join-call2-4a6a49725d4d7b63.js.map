{"version":3,"file":"static/chunks/pages/join-call2-4a6a49725d4d7b63.js","mappings":";;;;;;AACA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,KAAyC;AAChE;AACA;AACA,OAAO,KAAU,EAAE,EAId;AACL;;;;;;;;;;;;;;;;;;;ACZoD;AACV;AACN;AACoB;AAEzC,SAASK;IACpB,MAAMC,YAAY,IAAIC,IAAIC,OAAOC,QAAQ,CAACC,IAAI,EAAEC,YAAY;IAC5D,MAAMC,OAAON,UAAUO,GAAG,CAAC,WAAW;IACtC,MAAMC,OAAQR,UAAUO,GAAG,CAAC,WAAW,aAA2C,oBAAoB;IACtG,MAAME,YAAaT,UAAUO,GAAG,CAAC,gBAAgB,YAAuC,0BAA0B;IAElH,qBAAqB;IACrB,MAAMG,0BAA0B;QAC9B,IAAG,IAAI,EAAC;YACN,OAAO;gBACLC,OAAM;gBACNC,OAAM;gBACNC,iBAAgB;YAClB;QACF;QACE,IAAIJ,cAAc,WAAW;YACzB,+BAA+B;YAC/B,OAAO;gBACHE,OAAOH,SAAS;gBAChBI,OAAOJ,SAAS;gBAChBK,iBAAiB,KAAK,YAAY;YACtC;QACJ,OAAO;YACH,2BAA2B;YAC3B,OAAO;gBACHF,OAAOH,SAAS;gBAChBI,OAAOJ,SAAS;gBAChBK,iBAAiBL,SAAS,YAAY,YAAY;YACtD;QACJ;IACJ;IACA,MAAMM,gBAAgBJ;IACvB,qBAEiB,uDAACf,sDAAQA;kBACL,qEAACD,6DAAeA;YAACqB,aAAa;gBAACC,OAAM;gBAASC,MAAK;YAAI;sBACrD,sEAACpB,wFAAGA;;kCAEtB,wDAACA,wFAAGA;;4BAAC;4BACKS;4BAAK;4BAAQE;4BAAK;4BAAaC;;;kCAE3C,uDAACb,6DAAWA;wBACVsB,UAAUZ;wBACVa,UAAU;wBACVC,UAAU,QAAmD,OAA3CC,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,SAAS,CAAC,GAAG;wBAC1DC,eAAe3B,2EAASA,CAAC4B,SAAS,CAACC,OAAO;wBAC1CC,qBAAqBd,cAAcH,KAAK;wBACxCkB,qBAAqBf,cAAcF,KAAK;wBACxCJ,MAAMA;wBACNC,WAAWA;wBACXI,iBAAiBC,cAAcD,eAAe;;;;;;IAMpD,qBACE,wDAAChB,wFAAGA;QAACiC,IAAI;YAACC,QAAQ;QAAO;;0BACrB,wDAAClC,wFAAGA;;oBAAC;oBACKS;oBAAK;oBAAQE;oBAAK;oBAAaC;;;0BAE3C,uDAACb,6DAAWA;gBACVsB,UAAUZ;gBACVa,UAAU;gBACVC,UAAU,QAAmD,OAA3CC,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,SAAS,CAAC,GAAG;gBAC1DC,eAAe3B,2EAASA,CAAC4B,SAAS,CAACC,OAAO;gBAC1CC,qBAAqBd,cAAcH,KAAK;gBACxCkB,qBAAqBf,cAAcF,KAAK;gBACxCJ,MAAMA;gBACNC,WAAWA;gBACXI,iBAAiBC,cAAcD,eAAe;;;;AAItD","sources":["webpack://_N_E/?cbe7","webpack://_N_E/./src/pages/join-call2/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/join-call2\",\n      function () {\n        return require(\"private-next-pages/join-call2/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/join-call2\"])\n      });\n    }\n  ","import { AppbarContainer, AppShell } from '@app/ui';\nimport { MeetingRoom } from '@im/livekit';\nimport { Box } from '@mui/material';\nimport { mainModel } from '@src/libs/mc/main/MainModel';\n\nexport default function JoinCall() {\n    const urlParams = new URL(window.location.href).searchParams;\n    const name = urlParams.get(\"code\") || \"test\";\n    const role = (urlParams.get(\"role\") || \"initiator\") as 'initiator' | 'responder'; // Get role from URL\n    const eventType = (urlParams.get(\"eventType\") || \"security\") as 'medical' | 'security'; // Get event type from URL\n\n    // 根据事件类型和角色确定音视频初始状态\n    const getInitialMediaSettings = () => {\n      if(1==1){\n        return {\n          audio:true,\n          video:true,\n          canControlMedia:true\n        }\n      }\n        if (eventType === 'medical') {\n            // 医疗呼救：发送方发送音视频，接收方初始只接收，可手动控制\n            return {\n                audio: role === 'initiator', // 发起者开启音频\n                video: role === 'initiator', // 发起者开启视频\n                canControlMedia: true // 接收方可以手动控制\n            };\n        } else {\n            // 安全呼救：发送方发送音视频但不接收，接收方只接收\n            return {\n                audio: role === 'initiator', // 发起者开启音频\n                video: role === 'initiator', // 发起者开启视频\n                canControlMedia: role === 'responder' // 只有接收方可以控制\n            };\n        }\n    };\n    const mediaSettings = getInitialMediaSettings();\n   return (\n\n                    <AppShell>\n                        <AppbarContainer appbarProps={{title:\"音视频会议\", back:true}}>\n                          <Box>\n                           \n        <Box>\n            name:{name}, role:{role}, eventType:{eventType}\n        </Box> \n      <MeetingRoom\n        roomName={name}\n        directly={true}\n        userName={`user-${Math.random().toString(36).substring(2, 8)}`}\n        livekitConfig={mainModel.appConfig.livekit}\n        initialAudioEnabled={mediaSettings.audio}\n        initialVideoEnabled={mediaSettings.video}\n        role={role}\n        eventType={eventType}\n        canControlMedia={mediaSettings.canControlMedia}\n      />\n                          </Box>\n                        </AppbarContainer>\n                    </AppShell>\n    )\n  return (\n    <Box sx={{height: '100vh'}}>\n        <Box>\n            name:{name}, role:{role}, eventType:{eventType}\n        </Box>\n      <MeetingRoom\n        roomName={name}\n        directly={true}\n        userName={`user-${Math.random().toString(36).substring(2, 8)}`}\n        livekitConfig={mainModel.appConfig.livekit}\n        initialAudioEnabled={mediaSettings.audio}\n        initialVideoEnabled={mediaSettings.video}\n        role={role}\n        eventType={eventType}\n        canControlMedia={mediaSettings.canControlMedia}\n      />\n    </Box>\n  );\n}\n"],"names":["AppbarContainer","AppShell","MeetingRoom","Box","mainModel","JoinCall","urlParams","URL","window","location","href","searchParams","name","get","role","eventType","getInitialMediaSettings","audio","video","canControlMedia","mediaSettings","appbarProps","title","back","roomName","directly","userName","Math","random","toString","substring","livekitConfig","appConfig","livekit","initialAudioEnabled","initialVideoEnabled","sx","height"],"sourceRoot":"","ignoreList":[]}