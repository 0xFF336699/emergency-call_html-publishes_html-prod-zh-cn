{"version":3,"file":"static/chunks/pages/my-reports-cd3a52b84d9fb546.js","mappings":"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","sources":["webpack://_N_E/../../libs/app/model/src/remote/report/submit.ts","webpack://_N_E/./src/components/report/ReportSubmitModal/index.tsx","webpack://_N_E/../../libs/app/model/src/remote/report/getMyList.ts","webpack://_N_E/./src/components/report/MyReportsList/index.tsx","webpack://_N_E/./src/pages/my-reports/index.tsx","webpack://_N_E/?06be"],"sourcesContent":["\nimport { request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\n\n// --- 类型定义 ---\n\n/**\n * @description 提交举报的请求参数\n */\nexport interface ISubmitReportParams {\n    reported_mobile: string; // 改为手机号\n    report_type: string;\n    target_ref?: string;\n    reason: string;\n    content_snapshot?: any;\n}\n\n/**\n * @description 提交举报的响应结果\n */\nexport interface ISubmitReportResult {\n    is_ok: boolean;\n    msg: string;\n    report_id?: string;\n}\n\n/**\n * @description 提交一个新的举报\n * @param {ISubmitReportParams} params - 举报的详细信息\n * @returns {Promise<ISubmitReportResult>}\n */\nexport async function submitReport(params: ISubmitReportParams)  {\n    return await request<ISubmitReportResult>(\n        tms.TReport,\n        tms.MReportSubmit,\n        params\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n    CircularProgress,\n    Box\n} from '@mui/material';\nimport { submitReport } from '@app/model';\n\ninterface ReportSubmitModalProps {\n    open: boolean;\n    onClose: () => void;\n    onSuccess?: () => void; // Optional: callback on successful submission\n}\n\nexport const ReportSubmitModal: React.FC<ReportSubmitModalProps> = ({ open, onClose, onSuccess }) => {\n    const [mobile, setMobile] = useState('');\n    const [reason, setReason] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const handleClose = () => {\n        // Reset state on close\n        setMobile('');\n        setReason('');\n        setError('');\n        setLoading(false);\n        onClose();\n    };\n\n    const handleSubmit = async () => {\n        if (!mobile || !reason) {\n            setError('手机号和举报原因均不能为空。');\n            return;\n        }\n        setError('');\n        setLoading(true);\n\n        try {\n            const result = await submitReport({\n                reported_mobile: mobile,\n                reason: reason,\n                report_type: 'user_report_from_app', // or make this dynamic if needed\n            });\n\n            if (result.shellIsOk) {\n                // alert('举报成功，感谢您的反馈！'); // Or use a Snackbar for better UX\n                if (onSuccess) {\n                    onSuccess();\n                }\n                handleClose();\n            } else {\n                setError(result.err?.message || '提交失败，请稍后再试。');\n            }\n        } catch (e) {\n            setError('网络错误，请检查您的连接。');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <DialogTitle>提交举报</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    请输入您要举报的用户的手机号码和具体原因。我们会尽快处理您的举报。\n                </DialogContentText>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"mobile\"\n                    label=\"被举报人手机号、账号或ID\"\n                    type=\"tel\"\n                    fullWidth\n                    variant=\"standard\"\n                    value={mobile}\n                    onChange={(e) => setMobile(e.target.value)}\n                    disabled={loading}\n                />\n                <TextField\n                    margin=\"dense\"\n                    id=\"reason\"\n                    label=\"举报原因\"\n                    type=\"text\"\n                    fullWidth\n                    multiline\n                    rows={4}\n                    variant=\"standard\"\n                    value={reason}\n                    onChange={(e) => setReason(e.target.value)}\n                    disabled={loading}\n                />\n                {error && (\n                    <Box sx={{ color: 'error.main', mt: 2 }}>\n                        {error}\n                    </Box>\n                )}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} disabled={loading}>取消</Button>\n                <Button onClick={handleSubmit} disabled={loading}>\n                    {loading ? <CircularProgress size={24} /> : '提交'}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\n","import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IUserReport } from \"./types\"; // 引用通用的类型\n\n// --- 获取我的举报列表 ---\n\n/**\n * @description 获取我的举报列表的请求参数\n */\nexport interface IGetMyReportsParams {\n    page?: number;\n    limit?: number;\n}\n\n/**\n * @description 获取我的举报列表的响应结果\n */\nexport interface IGetMyReportsResult {\n    is_ok: boolean;\n    msg: string;\n    reports: IUserReport[];\n    total: number;\n    page: number;\n    limit: number;\n}\n\n/**\n * @description 获取当前用户提交的举报列表\n * @param {IGetMyReportsParams} params - 分页参数\n * @returns {Promise<IGetMyReportsResult>}\n */\nexport async function getMyReports(params: IGetMyReportsParams) {\n    const res = await request<IGetMyReportsResult>(\n        tms.TReport,\n        tms.MReportGetMyList,\n        params\n    );\n    return res\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    Box,\n    List,\n    ListItem,\n    ListItemText,\n    Typography,\n    CircularProgress,\n    Alert,\n    Chip,\n    Divider,\n    Pagination,\n    Button,\n} from '@mui/material';\nimport AddCommentIcon from '@mui/icons-material/AddComment';\nimport { getMyReports } from '@app/model';\nimport { IUserReport } from '@app/model';\nimport { ReportSubmitModal } from '../ReportSubmitModal';\n\n// Helper function to render status with appropriate color\nconst getStatusChip = (status: IUserReport['status']) => {\n    switch (status) {\n        case 'resolved':\n            return <Chip label=\"已处理\" color=\"success\" size=\"small\" />;\n        case 'dismissed':\n            return <Chip label=\"已驳回\" color=\"warning\" size=\"small\" />;\n        case 'pending':\n        default:\n            return <Chip label=\"待处理\" color=\"info\" size=\"small\" />;\n    }\n};\n\nexport const MyReportsList: React.FC = () => {\n    const [reports, setReports] = useState<IUserReport[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [modalOpen, setModalOpen] = useState(false); // State for the modal\n    const limit = 10;\n\n    useEffect(() => {\n        const fetchReports = async () => {\n            setLoading(true);\n            setError('');\n            try {\n                const result = await getMyReports({ page, limit });\n                if (result.shellIsOk && result.data) {\n                    setReports(result.data?.reports ||[]);\n                    setTotalPages(Math.ceil(result.data.total / limit));\n                } else {\n                    setError(result.err?.message || '您未登录，无法加载举报列表。');\n                }\n            } catch (e) {\n                setError('网络错误，请稍后重试。');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchReports();\n    }, [page]);\n\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\n        setPage(value);\n    };\n\n    if (loading) {\n        return (\n            <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n                <CircularProgress />\n            </Box>\n        );\n    }\n\n    if (error) {\n        return <Alert severity=\"error\">{error}</Alert>;\n    }\n\n    return (\n        <Box>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                <Typography variant=\"h6\">\n                    我的举报记录\n                </Typography>\n                <Button\n                    variant=\"contained\"\n                    startIcon={<AddCommentIcon />}\n                    onClick={() => setModalOpen(true)}\n                >\n                    发起举报\n                </Button>\n            </Box>\n\n            {reports.length === 0 ? (\n                <Typography>您还没有任何举报记录。</Typography>\n            ) : (\n                <>\n                    <List>\n                        {reports.map((report, index) => (\n                            <React.Fragment key={report.uuid}>\n                                <ListItem alignItems=\"flex-start\">\n                                    <ListItemText\n                                        primary={\n                                            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                                <Typography variant=\"subtitle1\">\n                                                    举报对象: {report.reported_uuid}\n                                                </Typography>\n                                                {getStatusChip(report.status)}\n                                            </Box>\n                                        }\n                                        secondary={\n                                            <>\n                                                <Typography\n                                                    sx={{ display: 'block' }}\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    color=\"text.primary\"\n                                                >\n                                                    原因: {report.reason}\n                                                </Typography>\n                                                <Typography variant=\"caption\" color=\"text.secondary\">\n                                                    {new Date(report.created_at).toLocaleString()}\n                                                </Typography>\n                                            </>\n                                        }\n                                    />\n                                </ListItem>\n                                {index < reports.length - 1 && <Divider variant=\"inset\" component=\"li\" />}\n                            </React.Fragment>\n                        ))}\n                    </List>\n                    {totalPages > 1 && (\n                        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                            <Pagination\n                                count={totalPages}\n                                page={page}\n                                onChange={handlePageChange}\n                                color=\"primary\"\n                            />\n                        </Box>\n                    )}\n                </>\n            )}\n\n            <ReportSubmitModal\n                open={modalOpen}\n                onClose={() => setModalOpen(false)}\n                onSuccess={() => {\n                    // Per user instruction, no refresh needed.\n                    // A snackbar could be triggered here in a real app.\n                    console.log('New report submitted successfully.');\n                }}\n            />\n        </Box>\n    );\n};\n","import { AppbarContainer, AppShell } from \"@app/ui\";\r\nimport { HowToUseContent } from \"@src/components/pages/how-to-use/content/HowToUseContent\";\r\nimport { MyReportsList } from \"@src/components/report/MyReportsList\";\r\n\r\n\r\nexport default function HowToUsePage() {\r\n    return (\r\n\r\n            <AppShell>\r\n                <AppbarContainer appbarProps={{title:\"举报列表\", back:true}}>\r\n                  <MyReportsList />\r\n                </AppbarContainer>\r\n            </AppShell>\r\n    )\r\n}","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/my-reports\",\n      function () {\n        return require(\"private-next-pages/my-reports/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/my-reports\"])\n      });\n    }\n  "],"names":["request","tms","submitReport","params","TReport","MReportSubmit","React","useState","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","CircularProgress","Box","ReportSubmitModal","open","onClose","onSuccess","mobile","setMobile","reason","setReason","error","setError","loading","setLoading","handleClose","handleSubmit","result","reported_mobile","report_type","shellIsOk","err","message","e","autoFocus","margin","id","label","type","fullWidth","variant","value","onChange","target","disabled","multiline","rows","sx","color","mt","onClick","size","getMyReports","res","MReportGetMyList","useEffect","List","ListItem","ListItemText","Typography","Alert","Chip","Divider","Pagination","AddCommentIcon","getStatusChip","status","MyReportsList","reports","setReports","page","setPage","totalPages","setTotalPages","modalOpen","setModalOpen","limit","fetchReports","data","Math","ceil","total","handlePageChange","event","display","justifyContent","my","severity","alignItems","mb","startIcon","length","map","report","index","Fragment","primary","reported_uuid","secondary","component","Date","created_at","toLocaleString","uuid","count","console","log","AppbarContainer","AppShell","HowToUsePage","appbarProps","title","back"],"sourceRoot":"","ignoreList":[]}