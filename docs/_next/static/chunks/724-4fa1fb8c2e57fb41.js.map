{"version":3,"file":"static/chunks/724-4fa1fb8c2e57fb41.js","mappings":"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","sources":["webpack://_N_E/../../libs/app/model/src/remote/emc/inviteContacts.ts","webpack://_N_E/../../libs/app/model/src/remote/emc/tmsEmcGetContactTypes.ts","webpack://_N_E/./src/components/dialogs/InviteContactDialog.tsx","webpack://_N_E/../../libs/app/model/src/remote/emergency-call/list_pending_received_invitations.ts","webpack://_N_E/./src/components/PendingInvitationsList/PendingInvitationsList.tsx","webpack://_N_E/../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/lodash.js","webpack://_N_E/./src/components/pre-alarm-config2/index.tsx","webpack://_N_E/./src/components/shortcut-config/ShortcutConfig.tsx","webpack://_N_E/./src/components/privacies/PrivacyDialog.tsx","webpack://_N_E/./src/components/privacies/ListenShowPrivacyContent.tsx","webpack://_N_E/./src/components/sensor-monitor/SensorMonitor.tsx","webpack://_N_E/./src/components/test/TestEmergencyCall.tsx","webpack://_N_E/./src/components/emergency-audio-control/stopAllHandler.ts","webpack://_N_E/./src/components/emergency-audio-control/EmergencyAudioControl.tsx","webpack://_N_E/./src/components/emergency-audio-control/EmergencyStopButton.tsx","webpack://_N_E/./src/pages/home/index.tsx","webpack://_N_E/./src/components/navbar/NavBar.tsx","webpack://_N_E/../../node_modules/.pnpm/react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3/node_modules/react-i18next/dist/es/index.js","webpack://_N_E/../../libs/fanfanlo/src/i18n/i18n-init.ts","webpack://_N_E/../../libs/fanfanlo/src/storage/store-page-context.tsx","webpack://_N_E/../../libs/app/ui/src/components/app/AppShell.tsx","webpack://_N_E/../../libs/app/ui/src/components/page/PageContent.tsx","webpack://_N_E/../../libs/app/ui/src/components/page/AndroidPageContent.tsx","webpack://_N_E/../../libs/app/model/src/remote/emergency-call/list_all_invitations.ts","webpack://_N_E/../../libs/app/ui/src/components/tabbar/Tabbar.tsx"],"sourcesContent":["import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 单个联系人的信息，由前端提供\n */\nexport interface IEmcContactIdentity {\n    identity: string;\n    identityType: 'email' | 'mobile';\n}\n\n/**\n * @description 邀请联系人的请求参数\n */\nexport interface IEmcInviteContactsParams extends IRequestParams {\n    contacts: IEmcContactIdentity[];\n    remark?: string;\n    type: string;\n    message?: string;\n    matrix_access_token: string; // 新增：用于创建 Matrix 房间的授权 Token\n}\n\n/**\n * @description 单个邀请的处理结果，由后端返回\n */\nexport interface IEmcInviteResultItem {\n    identity: string;\n    result_code: string; // 使用 ResultCode 的字符串形式\n    msg: string;\n}\n\n/**\n * @description 邀请联系人的完整响应体\n */\n// export interface IEmcInviteContactsResult extends IResultContent {\n//     data: {\n//         data: {\n//             results: IEmcInviteResultItem[];\n//             msg?: string;\n//         };\n//         msg?: string;\n//     };\n//     results?: IEmcInviteResultItem[]; // 保持向后兼容\n// }\n\nexport interface IEmcInviteContactsResult extends IResultContent {\n    data: {\n        is_ok:boolean;\n        results: IEmcInviteResultItem[];\n        msg?: string;\n    };\n}\n\n/**\n * @description 调用邀请联系人接口的函数\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEmcInviteContacts(opts: IRequestOptions<IEmcInviteContactsParams>) {\n    const res = await request<IEmcInviteContactsResult>(tms.TEmc, tms.MEmcInviteContacts, opts.params, opts.gateway, opts.handler);\n    return res;\n}","import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 获取联系人类型的请求参数\n */\nexport interface IEmcGetContactTypesParams extends IRequestParams {\n    // 可能不需要额外参数，但保留结构以备将来扩展\n}\n\n/**\n * @description 单个联系人类型\n */\nexport interface IEmcContactTypeItem {\n    id: string;\n    name: string;\n    // 根据实际需要可以添加更多字段，例如 icon, description 等\n}\n\n/**\n * @description 获取联系人类型的完整响应体\n */\nexport interface IEmcGetContactTypesResult extends IResultContent {\n    data: {\n        types: Array<{\n            uuid: string;\n            name: string;\n            is_system: boolean;\n        }>;\n    };\n}\n\n/**\n * @description 调用获取联系人类型接口的函数\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEmcGetContactTypes(opts: IRequestOptions<IEmcGetContactTypesParams>) {\n    const res = await request<IEmcGetContactTypesResult>(tms.TEmc, tms.MEmcGetContactTypes, opts.params, opts.gateway, opts.handler);\n    return res;\n}\n","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n    Box,\n    CircularProgress,\n    Autocomplete,\n} from '@mui/material';\nimport { useState, useCallback, useEffect, useRef, SyntheticEvent } from 'react';\nimport { \n    IEmcInviteContactsParams, \n    tmsEmcInviteContacts, \n    IEmcContactIdentity, \n    user, \n    tmsEmcGetContactTypes,\n    IEmcGetContactTypesResult,\n    IEmcContactTypeItem,\n    IEmcInviteResultItem,\n} from '@app/model';\nimport toast from 'react-hot-toast';\nimport { matrixUser } from '@im/matrix';\nimport { authService } from '@src/services/authService';\nimport { Log, useProxyWatch,\n    IRequestResult } from '@fanfanlo';\nconst fileLogger = new Log(false, 'InviteContactDialog.tsx');\n\nconst isValidIdentity = (text: string) => /(^\\d{11}$)|(^[a-zA-Z0-9]{32}$)/.test(text);\nconst is11DigitNumber = (text: string) => /^\\d{11}$/.test(text);\n\ninterface InviteContactDialogProps {\n    open: boolean;\n    onClose: () => void;\n    onInviteSent?: () => void;\n}\n\nexport function InviteContactDialog({ open, onClose, onInviteSent }: InviteContactDialogProps) {\n    const uiLogger = fileLogger.sub(false, 'InviteContactDialog_ui');\n\n    const [contacts, setContacts] = useState('');\n    const [remark, setRemark] = useState('');\n    const [callType, setCallType] = useState<string | null>(null);\n    const [availableCallTypes, setAvailableCallTypes] = useState<readonly IEmcContactTypeItem[]>([]);\n    \n    // Debug effect to log availableCallTypes changes\n    useEffect(() => {\n        console.log('availableCallTypes updated:', availableCallTypes);\n    }, [availableCallTypes]);\n    \n    // Debug effect to log callType changes\n    useEffect(() => {\n        console.log('callType updated:', callType);\n    }, [callType]);\n    const [message, setMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isTypesLoading, setIsTypesLoading] = useState(false);\n\n    const [pendingParams, setPendingParams] = useState<Omit<IEmcInviteContactsParams, 'matrix_access_token'> | null>(null);\n    const executionLock = useRef(false);\n    const [accessToken] = useProxyWatch(matrixUser.userData.userInfo, 'loginResponse.access_token', matrixUser.userData.userInfo.loginResponse?.access_token);\n    const [isUserLoggedIn] = useProxyWatch(user.data.sessionData, 'global_user_info', !!user.data.sessionData.global_user_info);\n    const [userToken] = useProxyWatch(user, 'data.storeData.user_token', user.data.storeData.user_token);\n    useEffect(() => {\n        if (accessToken && pendingParams && !executionLock.current) {\n            executionLock.current = true;\n            const finalParams: IEmcInviteContactsParams = {\n                ...pendingParams,\n                matrix_access_token: accessToken,\n                contacts: pendingParams?.contacts || [],\n                type: pendingParams?.type || ''\n            };\n            executeApiCall(finalParams);\n        }\n    }, [accessToken, pendingParams]);\n\n    const executeApiCall = useCallback(async (params: IEmcInviteContactsParams) => {\n        if (!params.contacts || !params.type) {\n            toast.error('请填写联系人和呼叫类型');\n            return;\n        }\n\n        setIsLoading(true);\n        \n        try {\n            const res = await tmsEmcInviteContacts({\n                params,\n                handler: { printLog: true }\n            });\n\n            console.log('Invite response:', res);\n\n            // 处理响应结果\n            if (res.err || !res.shellIsOk || !res.dataIsOk) {\n                const errorMessage = res.err?.message || '邀请失败，请稍后重试';\n                toast.error(errorMessage);\n                return;\n            }\n\n            // 处理嵌套的响应结构\n            const responseData = res.data;\n            if (!responseData?.data?.results) {\n                const errorMessage = responseData?.data?.msg || res.data?.msg || '未返回有效的结果';\n                toast.error(errorMessage);\n                return;\n            }\n            \n            const results: IEmcInviteResultItem[] = responseData.data.results;\n\n            // 统计成功和失败的数量\n            const successResults = results.filter(r => r.result_code === 'SUCCESS');\n            const infoResults = results.filter(r => r.result_code === 'INVITE_ALREADY_SENT' || r.result_code === 'ALREADY_A_CONTACT');\n            const errorResults = results.filter(r => r.result_code !== 'SUCCESS' && r.result_code !== 'INVITE_ALREADY_SENT' && r.result_code !== 'ALREADY_A_CONTACT');\n\n            if (successResults.length > 0) {\n                toast.success(`成功邀请 ${successResults.length} 个联系人`);\n                onInviteSent?.();\n            }\n            \n            if (infoResults.length > 0) {\n                const infoMessages = infoResults.map(r => r.msg).filter(Boolean).join('\\n');\n                if (infoMessages) {\n                    // 使用默认的 toast 替代 toast.info\n                    toast(infoMessages);\n                }\n            }\n            \n            if (errorResults.length > 0) {\n                const errorMessages = errorResults.map(r => r.msg).filter(Boolean).join('\\n');\n                if (errorMessages) {\n                    toast.error(`部分邀请失败：\\n${errorMessages}`);\n                }\n            }\n        } catch (error) {\n            console.error('Error in executeApiCall:', error);\n            toast.error('处理请求时发生错误，请稍后重试');\n        } finally {\n            setIsLoading(false);\n        }\n    }, [onInviteSent]);\n\n    const fetchCallTypes = useCallback(async () => {\n        const logger = uiLogger.sub(false, 'fetchCallTypes_fn');\n        logger.log('Fetching call types...');\n        setIsTypesLoading(true);\n        const res: IRequestResult<IEmcGetContactTypesResult, any> = await tmsEmcGetContactTypes({ params: {}, handler: { printLog: true } });\n        logger.log('Call types response:', JSON.stringify(res));\n        setIsTypesLoading(false);\n\n        if (res.err || !res.shellIsOk || !res.dataIsOk) {\n            const errorMessage = res.err?.message || '加载呼叫类型失败。';\n            toast.error(errorMessage);\n            setAvailableCallTypes([]);\n            logger.error('Failed to load call types:', errorMessage);\n        } else {\n            // 从 res.data.data.types 获取数据\n            const types = res.data?.data?.types || [];\n            logger.log('Setting availableCallTypes:', JSON.stringify(types));\n            \n            // 转换为 IEmcContactTypeItem[] 格式\n            const formattedTypes = types.map(type => ({\n                id: type.uuid,\n                name: type.name,\n                is_system: type.is_system\n            }));\n            \n            setAvailableCallTypes(formattedTypes);\n            \n            // 只在 callType 为空时设置默认值\n            if (formattedTypes.length > 0 && !callType) {\n                const defaultType = formattedTypes[0].name;\n                logger.log('Setting default call type:', defaultType);\n                setCallType(defaultType);\n            } else if (formattedTypes.length === 0) {\n                logger.warn('No call types available');\n            }\n        }\n    }, []); // 移除了 callType 依赖\n\n    useEffect(() => {\n        if (open) {\n            fetchCallTypes();\n        } else {\n            setContacts('');\n            setRemark('');\n            setCallType(null);\n            setAvailableCallTypes([]);\n            setMessage('');\n            setIsLoading(false);\n            setPendingParams(null);\n            executionLock.current = false;\n        }\n    }, [open, fetchCallTypes]);\n\n    const handleSendInvitation = useCallback(async () => {\n        const contactInputs = contacts.split('\\n').map(c => c.trim()).filter(c => c);\n        if (contactInputs.length === 0) {\n            toast.error('请输入至少一个联系人。');\n            return;\n        }\n\n        const contactIdentities: IEmcContactIdentity[] = [];\n        for (const input of contactInputs) {\n            if (isValidIdentity(input)) {\n                const type = is11DigitNumber(input) ? 'mobile' : 'email';\n                contactIdentities.push({ identity: input, identityType: type });\n            } else {\n                toast.error(`联系人格式无效: ${input}。必须是11位手机号或32位字符串。`);\n                return;\n            }\n        }\n\n        if (!callType || callType.trim() === '') {\n            toast.error('请选择或输入一个呼叫类型。');\n            return;\n        }\n\n        setIsLoading(true);\n\n        if (!userToken) {\n            const appLoggedIn = await authService.showLoginDialog();\n            if (!appLoggedIn) {\n                setIsLoading(false);\n                return; \n            }\n        }\n\n        const currentAccessToken = matrixUser.userData.userInfo.loginResponse?.access_token;\n        const params: Omit<IEmcInviteContactsParams, 'matrix_access_token'> = {\n            contacts: contactIdentities,\n            type: callType.trim(),\n            remark: remark.trim(),\n            message: message.trim(),\n        };\n\n        if (currentAccessToken) {\n            executionLock.current = true;\n            const apiParams: IEmcInviteContactsParams = {\n                ...params,\n                matrix_access_token: currentAccessToken,\n                contacts: params.contacts || [],\n                type: params.type || ''\n            };\n            executeApiCall(apiParams);\n        } else {\n            toast('等待登录...');\n            setPendingParams(params);\n        }\n\n    }, [contacts, remark, callType, message, executeApiCall, isUserLoggedIn]);\n\n    return (\n        <Dialog open={open} onClose={() => onClose()} maxWidth=\"sm\" fullWidth>\n            <DialogTitle>邀请紧急联系人</DialogTitle>\n            <DialogContent>\n                <Box component=\"form\" sx={{ mt: 2 }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"contacts\"\n                        label=\"联系人 (11位手机号或32位ID)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                        placeholder=\"13800138000&#10;550e8400e29b41d4a716446655440000\"\n                        value={contacts}\n                        onChange={(e) => setContacts(e.target.value)}\n                        disabled={isLoading}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"remark\"\n                        label=\"备注名 (可选)\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"outlined\"\n                        value={remark}\n                        onChange={(e) => setRemark(e.target.value)}\n                        disabled={isLoading}\n                    />\n                    <Autocomplete\n                        freeSolo\n                        id=\"call-type-autocomplete\"\n                        options={availableCallTypes.map((option) => option.name)}\n                        value={callType || ''}\n                        onChange={(event: SyntheticEvent, newValue: string | null) => {\n                            console.log('Call type changed to:', newValue);\n                            setCallType(newValue);\n                        }}\n                        inputValue={callType || ''}\n                        onInputChange={(event, newInputValue, reason) => {\n                            // Only update when the user is typing, not when an option is selected\n                            if (reason === 'input') {\n                                console.log('Input value changed to:', newInputValue);\n                                setCallType(newInputValue);\n                            }\n                        }}\n                        disablePortal\n                        disableClearable\n                        forcePopupIcon={!isTypesLoading}\n                        sx={{ mt: 1, mb: 1, width: '100%' }}\n                        renderInput={(params) => (\n                            <TextField\n                                {...params}\n                                label=\"呼叫类型\"\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{\n                                    ...params.InputProps,\n                                    endAdornment: (\n                                        <>\n                                            {isTypesLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                            {params.InputProps.endAdornment}\n                                        </>\n                                    ),\n                                }}\n                            />\n                        )}\n                        ListboxProps={{\n                            style: {\n                                maxHeight: '200px',\n                                overflow: 'auto',\n                            },\n                        }}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"message\"\n                        label=\"邀请信息 (可选)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        rows={3}\n                        variant=\"outlined\"\n                        placeholder=\"我已将您添加为我的紧急联系人，请接受邀请。\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        disabled={isLoading}\n                    />\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => onClose()} disabled={isLoading}>关闭</Button>\n                <Button onClick={handleSendInvitation} variant=\"contained\" disabled={isLoading}>\n                    {isLoading ? <CircularProgress size={24} /> : '发送邀请'}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { request } from \"@fanfanlo\";\n\n/**\n * 获取未处理被邀请信息的请求参数\n */\nexport interface IParamsListPendingReceivedInvitations {\n  // 可以添加分页等参数\n  page?: number;\n  page_size?: number;\n}\n\n/**\n * 未处理的被邀请信息\n */\nexport interface IPendingInvitationInfo {\n  invitation_id: string;\n  user_info: {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n  };\n  status: 'pending';\n  message: string;\n  created_at: number;\n  expires_at: number;\n}\n\n/**\n * 获取未处理被邀请信息的响应结果\n */\nexport interface IResultListPendingReceivedInvitations {\n  is_ok: boolean;\n  msg?: string;\n  invitations: IPendingInvitationInfo[];\n}\n\n/**\n * 获取未处理的被邀请信息\n */\nexport async function tmsEmergencyCallListPendingReceivedInvitations(\n  opts: IRequestOptions<IParamsListPendingReceivedInvitations>\n) {\n  return request<IResultListPendingReceivedInvitations, IParamsListPendingReceivedInvitations>(\n    tms.TEmc,\n    tms.MEmcListPendingReceivedInvitations,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出服务\nexport const emergencyCallPendingInvitationService = {\n  listPendingReceivedInvitations: tmsEmergencyCallListPendingReceivedInvitations,\n};\n\nexport default emergencyCallPendingInvitationService;","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  CircularProgress,\n  Avatar,\n  Chip,\n  Alert,\n  Stack,\n} from '@mui/material';\nimport {\n  Check as CheckIcon,\n  Close as CloseIcon,\n  AccessTime as AccessTimeIcon,\n  Person as PersonIcon,\n  Notifications as NotificationsIcon,\n} from '@mui/icons-material';\nimport { formatDistanceToNow } from 'date-fns';\nimport { zhCN } from 'date-fns/locale';\nimport { \n  emergencyCallPendingInvitationService,\n  emergencyCallInvitationService,\n  IPendingInvitationInfo,\n  user,\n  AppModelEvent,\n  appModel\n} from '@app/model';\nimport { useProxyWatch } from '@fanfanlo';\n\n// 邀请卡片组件\nfunction PendingInvitationCard({ \n  invitation,\n  onRespond,\n  isProcessing = false,\n}: { \n  invitation: IPendingInvitationInfo;\n  onRespond?: (action: 'accept' | 'decline') => Promise<void>;\n  isProcessing?: boolean;\n}) {\n  const [isProcessingAction, setIsProcessingAction] = useState(false);\n\n  const handleRespond = async (action: 'accept' | 'decline') => {\n    if (!onRespond) return;\n    \n    try {\n      setIsProcessingAction(true);\n      await onRespond(action);\n    } finally {\n      setIsProcessingAction(false);\n    }\n  };\n\n  const isExpired = new Date(invitation.expires_at * 1000) < new Date();\n\n  return (\n    <Card variant=\"outlined\" sx={{ mb: 2, opacity: isProcessing ? 0.7 : 1 }}>\n      <CardContent>\n        <Box display=\"flex\" alignItems=\"center\" mb={2}>\n          <Avatar \n            src={invitation.user_info.avatar_url} \n            alt={invitation.user_info.display_name}\n            sx={{ width: 50, height: 50, mr: 2 }}\n          >\n            {invitation.user_info.display_name?.[0]?.toUpperCase() || '?'}\n          </Avatar>\n          <Box flexGrow={1}>\n            <Typography variant=\"h6\">\n              {invitation.user_info.display_name || '未知用户'}\n            </Typography>\n            {/* <Typography variant=\"body2\" color=\"text.secondary\">\n              ID: {invitation.user_info.user_id}\n            </Typography> */}\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 0.5 }}>\n              {formatDistanceToNow(invitation.created_at * 1000, { \n                addSuffix: true, \n                locale: zhCN \n              })}\n            </Typography>\n          </Box>\n          <Box textAlign=\"right\">\n            <Chip \n              size=\"small\"\n              icon={<AccessTimeIcon fontSize=\"small\" />}\n              label={isExpired ? '已过期' : `${formatDistanceToNow(invitation.expires_at * 1000, { \n                addSuffix: true, \n                locale: zhCN \n              })}`}\n              color={isExpired ? 'error' : 'primary'}\n              variant=\"outlined\"\n            />\n          </Box>\n        </Box>\n        \n        {invitation.message && (\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1, mb: 1 }}>\n            邀请信息: {invitation.message}\n          </Typography>\n        )}\n\n        <Typography variant=\"body2\" color=\"primary\" sx={{ fontWeight: 'medium' }}>\n          邀请您成为紧急联系人\n        </Typography>\n      </CardContent>\n      \n      {!isExpired && (\n        <CardActions sx={{ justifyContent: 'flex-end', pt: 0 }}>\n          <Button \n            size=\"small\" \n            color=\"error\"\n            startIcon={<CloseIcon />}\n            onClick={() => handleRespond('decline')}\n            disabled={isProcessing || isProcessingAction}\n          >\n            拒绝\n          </Button>\n          <Button \n            size=\"small\" \n            color=\"primary\"\n            variant=\"contained\"\n            startIcon={<CheckIcon />}\n            onClick={() => handleRespond('accept')}\n            disabled={isProcessing || isProcessingAction}\n          >\n            接受\n          </Button>\n        </CardActions>\n      )}\n    </Card>\n  );\n}\n\nconst PendingInvitationsList: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [invitations, setInvitations] = useState<IPendingInvitationInfo[]>([]);\n  const [isProcessing, setIsProcessing] = useState<boolean>(false);\n\n  // 监听用户登录状态\n  const [userToken] = useProxyWatch(user, 'data.storeData.user_token', user.data.storeData.user_token);\n\n  // 加载未处理的被邀请信息\n  const loadPendingInvitations = useCallback(async () => {\n    if (!userToken) {\n      setInvitations([]);\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const res = await emergencyCallPendingInvitationService.listPendingReceivedInvitations({\n        params: {},\n      } as any);\n      \n      if (res.shellIsOk && res.dataIsOk && res.data?.is_ok) {\n        setInvitations(res.data.invitations || []);\n      } else {\n        setError(res.data?.msg || '加载邀请列表失败');\n      }\n    } catch (err) {\n      console.error('加载未处理邀请列表异常:', err);\n      setError('发生未知错误');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [userToken]); // 现在可以安全地依赖userToken了\n\n  // 响应邀请\n  const handleRespondToInvite = useCallback(async (invitationId: string, action: 'accept' | 'decline'): Promise<void> => {\n    try {\n      setIsProcessing(true);\n\n      const res = await emergencyCallInvitationService.respondToInvite({\n        params: { invitation_id: invitationId, action },\n      } as any);\n\n      if (!res.shellIsOk || !res.dataIsOk || !res.data?.is_ok) {\n        throw new Error(res.data?.msg || '操作失败');\n      }\n      \n      // 从列表中移除已处理的邀请\n      setInvitations(prev => prev.filter(invite => invite.invitation_id !== invitationId));\n      \n      // 发送邀请列表更新事件\n      appModel.dispatcher.emit(AppModelEvent.InviteListUpdated);\n      \n    } catch (err) {\n      console.error('处理邀请失败:', err);\n      setError(err instanceof Error ? err.message : '操作失败，请重试');\n    } finally {\n      setIsProcessing(false);\n    }\n  }, []);\n\n  // 监听用户登录状态变化\n  useEffect(() => {\n    console.log('PendingInvitationsList - userToken changed:', userToken);\n    if (userToken) {\n      // 有登录用户了，刷新邀请列表\n      loadPendingInvitations();\n    } else {\n      // 清空邀请信息列表\n      setInvitations([]);\n    }\n  }, [userToken]); // 只依赖userToken\n\n  // 监听邀请列表更新事件\n  useEffect(() => {\n    const unsubscribe = appModel.dispatcher.addListener(AppModelEvent.InviteListUpdated, () => {\n      console.log('AppModelEvent.InviteListUpdated - 刷新未处理邀请列表');\n      loadPendingInvitations();\n    });\n\n    return unsubscribe;\n  }, [loadPendingInvitations]); // 依赖loadPendingInvitations函数\n\n  // 如果没有登录用户，不显示任何内容\n  if (!userToken) {\n    return null;\n  }\n\n  if (isLoading) {\n    return (\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" p={2}>\n        {/* <CircularProgress size={24} />\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n          加载中...\n        </Typography> */}\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box p={2}>\n        <Alert severity=\"error\">\n          {error}\n        </Alert>\n      </Box>\n    );\n  }\n\n  if (invitations.length === 0) {\n    return (\n      <Box \n        display=\"flex\" \n        flexDirection=\"column\" \n        alignItems=\"center\" \n        p={2}\n        textAlign=\"center\"\n      >\n        {/* <NotificationsIcon color=\"disabled\" sx={{ fontSize: 48, mb: 1 }} />\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          暂无未处理的邀请\n        </Typography> */}\n      </Box>\n    );\n  }\n\n  return (\n    <Box p={2}>\n      <Box display=\"flex\" alignItems=\"center\" mb={2}>\n        <NotificationsIcon color=\"primary\" sx={{ mr: 1 }} />\n        <Typography variant=\"h6\" color=\"primary\">\n          未处理的邀请 ({invitations.length})\n        </Typography>\n      </Box>\n\n      <Stack spacing={2}>\n        {invitations.map((invitation) => (\n          <PendingInvitationCard\n            key={invitation.invitation_id}\n            invitation={invitation}\n            onRespond={(action) => handleRespondToInvite(invitation.invitation_id, action)}\n            isProcessing={isProcessing}\n          />\n        ))}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default PendingInvitationsList;","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\lodash@4.17.21\\\\node_modules\\\\lodash\\\\lodash.js\"","import React, { useState, useCallback } from 'react';\nimport {\n    Box,\n    Switch,\n    Button,\n    Typography,\n    Paper,\n    Collapse,\n    Divider,\n    IconButton,\n    TextField,\n    FormControlLabel,\n    Tooltip,\n    Stack,\n    FormControl,\n    MenuItem,\n    InputLabel,\n    Select,\n} from '@mui/material';\nimport {\n    DragIndicator as DragIndicatorIcon,\n    ExpandLess,\n    Settings,\n    Delete,\n    PlayArrow,\n    Stop,\n    VolumeUp as VolumeUpIcon,\n    Vibration as VibrationIcon\n} from '@mui/icons-material';\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, TouchSensor, useSensor, useSensors, DragEndEvent } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, sortableKeyboardCoordinates, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { debounce } from 'lodash';\nimport { autoJsStoreUtils } from '@droid/android';\n\nconst PRE_ALARM_CONFIG_KEY = 'PRE_ALARM_ACTIONS_CONFIG';\n\ninterface PreAlarmAction {\n    id: string;\n    type: 'sound' | 'vibration';\n    duration: number;\n    resourceId?: string;\n}\n\ninterface PreAlarmConfig {\n    enabled: boolean;\n    actions: PreAlarmAction[];\n    maxWaitDuration: number;\n}\n\nconst defaultSoundResources = [\n    { id: 'beep_short', name: '短提示音' },\n    { id: 'siren_gentle', name: '缓和警报' },\n    { id: 'alarm_clock', name: '闹钟' },\n];\n\nconst SortableActionItem: React.FC<{\n    action: PreAlarmAction;\n    isPlaying: boolean;\n    onUpdate: (id: string, updates: Partial<Omit<PreAlarmAction, 'id'>>) => void;\n    onRemove: (id: string) => void;\n    onPreview: (resourceId?: string) => void;\n    onStopPreview: () => void;\n}> = ({ action, isPlaying, onUpdate, onRemove, onPreview, onStopPreview }) => {\n    const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id: action.id });\n\n    const style = {\n        transform: CSS.Transform.toString(transform),\n        transition,\n        opacity: isDragging ? 0.8 : 1,\n        zIndex: isDragging ? 1 : 'auto',\n    };\n\n    return (\n        <Paper\n            ref={setNodeRef}\n            style={style}\n            elevation={isDragging ? 3 : 1}\n            sx={{\n                p: 2,\n                mb: 1,\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2,\n                userSelect: 'none',\n            }}\n        >\n            <Box {...attributes} {...listeners} sx={{ display: 'flex', alignItems: 'center', cursor: 'grab', touchAction: 'none' }}>\n                <DragIndicatorIcon />\n            </Box>\n            \n            <Box sx={{ flexGrow: 1 }}>\n                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', gap: 1.5 }}>\n                    <Typography variant=\"subtitle2\">\n                        {action.type === 'sound' ? '声音' : '震动'}\n                    </Typography>\n                    <TextField\n                        size=\"small\"\n                        type=\"number\"\n                        label=\"持续时间 (ms)\"\n                        value={action.duration}\n                        onChange={(e) => onUpdate(action.id, { duration: parseInt(e.target.value, 10) || 0 })}\n                        sx={{ width: '100%' }}\n                    />\n                    \n                    {action.type === 'sound' && (\n                        <FormControl size=\"small\" sx={{ width: '100%' }}>\n                            <InputLabel>声音类型</InputLabel>\n                            <Select\n                                value={action.resourceId || ''}\n                                label=\"声音类��\"\n                                onChange={(e) => onUpdate(action.id, { resourceId: e.target.value })}\n                                startAdornment={\n                                    <Tooltip title={isPlaying ? \"停止\" : \"试听\"}>\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() => isPlaying ? onStopPreview() : onPreview(action.resourceId)}\n                                            sx={{ mr: 1 }}\n                                        >\n                                            {isPlaying ? <Stop fontSize=\"small\" /> : <PlayArrow fontSize=\"small\" />}\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                            >\n                                {defaultSoundResources.map((sound) => (\n                                    <MenuItem key={sound.id} value={sound.id}>\n                                        {sound.name}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    )}\n                </Box>\n            </Box>\n            \n            <IconButton onClick={() => onRemove(action.id)} size=\"small\" color=\"error\">\n                <Delete />\n            </IconButton>\n        </Paper>\n    );\n};\n\nconst PreAlarmConfig2: React.FC = () => {\n    const [config, setConfig] = useState<PreAlarmConfig | null>(null);\n    const [expanded, setExpanded] = useState(false);\n    const [playingSoundId, setPlayingSoundId] = useState<string | null>(null);\n\n    const debouncedWrite = useCallback(\n        debounce((newConfig: PreAlarmConfig) => {\n            autoJsStoreUtils.write(PRE_ALARM_CONFIG_KEY, newConfig);\n        }, 500),\n        []\n    );\n\n    const sensors = useSensors(\n        useSensor(PointerSensor, {\n            activationConstraint: {\n                distance: 8,\n            },\n        }),\n        useSensor(TouchSensor, {\n            activationConstraint: {\n                delay: 250,\n                tolerance: 5,\n            },\n        }),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: sortableKeyboardCoordinates,\n        })\n    );\n\n    React.useEffect(() => {\n        const loadConfig = async () => {\n            const storedConfig = await autoJsStoreUtils.read<PreAlarmConfig>(PRE_ALARM_CONFIG_KEY);\n            if (storedConfig) {\n                const actionsWithIds = storedConfig.actions.map((action) => ({\n                    ...action,\n                    id: action.id || `action-${Math.random().toString(36).substr(2, 9)}`,\n                }));\n                setConfig({\n                    ...storedConfig,\n                    actions: actionsWithIds,\n                });\n            } else {\n                setConfig({\n                    enabled: true,\n                    actions: [],\n                    maxWaitDuration: 30000,\n                });\n            }\n        };\n        loadConfig();\n    }, []);\n\n    const updateConfig = useCallback(\n        (updates: Partial<PreAlarmConfig>) => {\n            setConfig((prev) => {\n                if (!prev) return null;\n                const newConfig = { ...prev, ...updates };\n                debouncedWrite(newConfig);\n                return newConfig;\n            });\n        },\n        [debouncedWrite]\n    );\n\n    const handleToggleEnabled = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateConfig({ enabled: event.target.checked });\n    };\n\n    const handleAddAction = (type: 'sound' | 'vibration') => {\n        const newAction: PreAlarmAction = {\n            id: `action-${Date.now()}`,\n            type,\n            duration: 3000,\n            ...(type === 'sound' && { resourceId: defaultSoundResources[0].id }),\n        };\n        updateConfig({\n            actions: [...(config?.actions || []), newAction],\n        });\n    };\n\n    const handleUpdateAction = (id: string, updates: Partial<Omit<PreAlarmAction, 'id'>>) => {\n        if (!config) return;\n        updateConfig({\n            actions: config.actions.map((action) =>\n                action.id === id ? { ...action, ...updates } : action\n            ),\n        });\n    };\n\n    const handleRemoveAction = (id: string) => {\n        if (!config) return;\n        updateConfig({\n            actions: config.actions.filter((action) => action.id !== id),\n        });\n    };\n\n    const handleDragEnd = (event: DragEndEvent) => {\n        const { active, over } = event;\n        if (!config || !over || active.id === over.id) return;\n\n        const oldIndex = config.actions.findIndex((a) => a.id === active.id);\n        const newIndex = config.actions.findIndex((a) => a.id === over.id);\n\n        if (oldIndex !== -1 && newIndex !== -1) {\n            updateConfig({\n                actions: arrayMove(config.actions, oldIndex, newIndex),\n            });\n        }\n    };\n\n    const handlePreviewSound = (resourceId?: string) => {\n        if (!resourceId) return;\n        handleStopSound(); \n        if ((window as any).SoundManager) {\n            (window as any).SoundManager.previewSound(resourceId);\n            setPlayingSoundId(resourceId);\n        } else {\n            console.warn('SoundManager JavascriptInterface is not available.');\n        }\n    };\n\n    const handleStopSound = () => {\n        if ((window as any).SoundManager) {\n            (window as any).SoundManager.stopPreview();\n        }\n        setPlayingSoundId(null);\n    };\n\n    if (!config) {\n        return <Box sx={{ p: 2, textAlign: 'center' }}>加载中...</Box>;\n    }\n\n    return (\n        <Box sx={{ mb: 3 }}>\n            <Paper \n                elevation={1} \n                sx={{ \n                    p: 2, \n                    display: 'flex', \n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    borderRadius: 1,\n                }}\n            >\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <Typography variant=\"subtitle1\">防误触报警设置</Typography>\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={config.enabled}\n                                onChange={handleToggleEnabled}\n                                color=\"primary\"\n                            />\n                        }\n                        label={config.enabled ? '已启用' : '已禁用'}\n                    />\n                </Box>\n                \n                <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    startIcon={expanded ? <ExpandLess /> : <Settings />}\n                    onClick={() => setExpanded(!expanded)}\n                >\n                    {expanded ? '收起设置' : '设置'}\n                </Button>\n            </Paper>\n\n            <Collapse in={expanded}>\n                <Paper \n                    elevation={0} \n                    sx={{ \n                        mt: 1, \n                        p: 2, \n                        border: '1px solid', \n                        borderColor: 'divider',\n                        borderRadius: 1,\n                    }}\n                >\n                    <Box sx={{ mb: 3 }}>\n                        <Typography variant=\"subtitle2\" gutterBottom>\n                            最大等待时间 (毫秒)\n                        </Typography>\n                        <TextField\n                            fullWidth\n                            type=\"number\"\n                            value={config.maxWaitDuration}\n                            onChange={(e) =>\n                                updateConfig({ maxWaitDuration: parseInt(e.target.value, 10) || 0 })\n                            }\n                            size=\"small\"\n                            InputProps={{\n                                endAdornment: (\n                                    <Typography variant=\"body2\" sx={{ ml: 1 }}>\n                                        毫秒\n                                    </Typography>\n                                ),\n                            }}\n                        />\n                    </Box>\n\n                    <Divider sx={{ my: 2 }} />\n\n                    <Box sx={{ mb: 2 }}>\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                            <Typography variant=\"subtitle2\">\n                                报警动作 ({config.actions.length})\n                            </Typography>\n                            <Stack direction=\"row\" spacing={1}>\n                                <Button\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    startIcon={<VolumeUpIcon />}\n                                    onClick={() => handleAddAction('sound')}\n                                >\n                                    添加声音\n                                </Button>\n                                <Button\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    startIcon={<VibrationIcon />}\n                                    onClick={() => handleAddAction('vibration')}\n                                >\n                                    添加震动\n                                </Button>\n                            </Stack>\n                        </Box>\n\n                        {config.actions.length === 0 ? (\n                            <Paper\n                                variant=\"outlined\"\n                                sx={{\n                                    p: 3,\n                                    textAlign: 'center',\n                                    color: 'text.secondary',\n                                }}\n                            >\n                                <Typography>暂无报警动作，请点击上方按钮添加</Typography>\n                            </Paper>\n                        ) : (\n                            <DndContext\n                                sensors={sensors}\n                                collisionDetection={closestCenter}\n                                onDragEnd={handleDragEnd}\n                            >\n                                <SortableContext\n                                    items={config.actions.map((a) => a.id)}\n                                    strategy={verticalListSortingStrategy}\n                                >\n                                    {config.actions.map((action) => (\n                                        <SortableActionItem\n                                            key={action.id}\n                                            action={action}\n                                            isPlaying={playingSoundId === action.resourceId}\n                                            onUpdate={handleUpdateAction}\n                                            onRemove={handleRemoveAction}\n                                            onPreview={handlePreviewSound}\n                                            onStopPreview={handleStopSound}\n                                        />\n                                    ))}\n                                </SortableContext>\n                            </DndContext>\n                        )}\n                    </Box>\n                </Paper>\n            </Collapse>\n        </Box>\n    );\n};\n\nexport default PreAlarmConfig2;","import React, { useState } from 'react';\nimport { \n    Box, \n    Paper, \n    Typography, \n    Button, \n    TextField, \n    Alert,\n    Divider,\n    Grid\n} from '@mui/material';\nimport { \n    MedicalServices as MedicalIcon,\n    Security as SecurityIcon,\n    Shortcut as ShortcutIcon\n} from '@mui/icons-material';\nimport { autoWebViewJs } from '@droid/android';\n\n/**\n * 桌面快捷方式配置组件\n * 用于创建医疗呼救和安全呼救的桌面快捷方式\n */\nconst ShortcutConfig: React.FC = () => {\n    const [medicalName, setMedicalName] = useState('意外呼救');\n    const [securityName, setSecurityName] = useState('安全呼救');\n    const [isCreating, setIsCreating] = useState(false);\n    const [message, setMessage] = useState<{type: 'success' | 'error' | 'info', text: string} | null>(null);\n\n    // 创建医疗呼救快捷方式\n    const handleCreateMedicalShortcut = async () => {\n        if (!medicalName.trim()) {\n            setMessage({type: 'error', text: '请输入快捷方式名称'});\n            return;\n        }\n\n        setIsCreating(true);\n        setMessage(null);\n\n        try {\n            // 检查是否支持快捷方式\n            const supportScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.isShortcutSupported();`;\n            const {javaResultString: supportResult} = autoWebViewJs.callScript(supportScript);\n            \n            if (supportResult !== 'true') {\n                setMessage({type: 'error', text: '当前设备不支持创建桌面快捷方式'});\n                return;\n            }\n\n            // 创建医疗呼救快捷方式\n            const script = `com.fanfanlo.emergencycall.manager.ShortcutManager.createMedicalShortcut(\"${medicalName}\");`;\n            const {javaResultString} = autoWebViewJs.callScript(script);\n            \n            if (javaResultString === 'true') {\n                setMessage({type: 'success', text: '医疗呼救快捷方式创建成功！请检查您的桌面。'});\n            } else {\n                setMessage({type: 'error', text: '快捷方式创建失败，请检查权限设置'});\n            }\n        } catch (error) {\n            console.error('Error creating medical shortcut:', error);\n            setMessage({type: 'error', text: '创建快捷方式时发生错误'});\n        } finally {\n            setIsCreating(false);\n        }\n    };\n\n    // 创建安全呼救快捷方式\n    const handleCreateSecurityShortcut = async () => {\n        if (!securityName.trim()) {\n            setMessage({type: 'error', text: '请输入快捷方式名称'});\n            return;\n        }\n\n        setIsCreating(true);\n        setMessage(null);\n\n        try {\n            // 检查是否支持快捷方式\n            const supportScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.isShortcutSupported();`;\n            const {javaResultString: supportResult} = autoWebViewJs.callScript(supportScript);\n            \n            if (supportResult !== 'true') {\n                setMessage({type: 'error', text: '当前设备不支持创建桌面快捷方式'});\n                return;\n            }\n\n            // 创建安全呼救快捷方式\n            const script = `com.fanfanlo.emergencycall.manager.ShortcutManager.createSecurityShortcut(\"${securityName}\");`;\n            const {javaResultString} = autoWebViewJs.callScript(script);\n            \n            if (javaResultString === 'true') {\n                setMessage({type: 'success', text: '安全呼救快捷方式创建成功！请检查您的桌面。'});\n            } else {\n                setMessage({type: 'error', text: '快捷方式创建失败，请检查权限设置'});\n            }\n        } catch (error) {\n            console.error('Error creating security shortcut:', error);\n            setMessage({type: 'error', text: '创建快捷方式时发生错误'});\n        } finally {\n            setIsCreating(false);\n        }\n    };\n\n    // 检查设备支持情况和权限引导\n    const handleCheckSupport = async () => {\n        try {\n            const supportScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.isShortcutSupported();`;\n            const brandScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.getDeviceBrand();`;\n            const guideScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.getPermissionGuideText();`;\n            \n            const {javaResultString: supportResult} = autoWebViewJs.callScript(supportScript);\n            const {javaResultString: brandResult} = autoWebViewJs.callScript(brandScript);\n            const {javaResultString: guideResult} = autoWebViewJs.callScript(guideScript);\n            \n            const supportInfo = `设备支持情况：\n设备品牌: ${brandResult}\n快捷方式支持: ${supportResult === 'true' ? '支持' : '不支持'}\n\n${guideResult}`;\n            \n            setMessage({type: 'info', text: supportInfo});\n        } catch (error) {\n            console.error('Error checking support:', error);\n            setMessage({type: 'error', text: '检查设备支持情况时发生错误'});\n        }\n    };\n    \n    // 检查并请求权限\n    const handleRequestPermission = async () => {\n        try {\n            console.log('开始调用权限引导方法...');\n            \n            // 先测试基础方法是否工作\n            const brandScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.getDeviceBrand();`;\n            const brandResult = autoWebViewJs.callScript(brandScript);\n            console.log('设备品牌测试:', brandResult);\n            \n            if (!brandResult || brandResult.javaResultString === undefined) {\n                throw new Error('基础方法调用失败，可能需要重新编译应用');\n            }\n            \n            // 尝试新的权限引导方法\n            const script = `com.fanfanlo.emergencycall.manager.ShortcutManager.checkAndRequestPermissionWithResult();`;\n            const {javaResultString: result} = autoWebViewJs.callScript(script);\n            console.log('权限引导结果:', result);\n            \n            if (result && result !== 'undefined') {\n                setMessage({\n                    type: result.startsWith('✅') ? 'success' : result.startsWith('❌') ? 'error' : 'info', \n                    text: result\n                });\n            } else {\n                throw new Error('新方法返回undefined，使用兜底方案');\n            }\n        } catch (error) {\n            console.error('权限引导调用出错:', error);\n            console.log('尝试使用兜底方案...');\n            \n            // 兜底方案：使用旧方法 + 手动指引\n            try {\n                const fallbackScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.checkAndRequestShortcutPermission();`;\n                const fallbackResult = autoWebViewJs.callScript(fallbackScript);\n                \n                const brand = autoWebViewJs.callScript(`com.fanfanlo.emergencycall.manager.ShortcutManager.getDeviceBrand();`);\n                const brandName = brand?.javaResultString || 'UNKNOWN';\n                \n                let guideText = '';\n                if (brandName === 'XIAOMI' || brandName === 'REDMI') {\n                    guideText = `\\n\\n小米/Redmi设备权限设置：\\n1. 打开\"设置\" > \"应用设置\" > \"应用管理\"\\n2. 找到\"紧急呼救\"应用\\n3. 点击\"权限管理\" > \"其他权限\"\\n4. 开启\"创建桌面快捷方式\"权限`;\n                } else {\n                    guideText = `\\n\\n请手动前往：\\n设置 > 应用管理 > 紧急呼救 > 权限管理\\n开启\"创建桌面快捷方式\"权限`;\n                }\n                \n                setMessage({\n                    type: 'warning', \n                    text: `⚠️ 权限引导方法可能需要重新编译应用\\n\\n临时解决方案：${guideText}\\n\\n💡 设置完成后，请返回重新创建快捷方式`\n                });\n            } catch (fallbackError) {\n                console.error('兜底方案也失败:', fallbackError);\n                setMessage({\n                    type: 'error', \n                    text: '❌ 权限方法调用失败\\n\\n可能原因：应用需要重新编译\\n\\n临时解决方案：\\n1. 手动前往：设置 > 应用管理 > 紧急呼救\\n2. 开启\"创建桌面快捷方式\"权限\\n3. 返回重新创建快捷方式'\n                });\n            }\n        }\n    };\n\n    return (\n        <Box sx={{ p: 0,mt:2 }}>\n            <Paper elevation={2} sx={{ p: 1, mb: 0 }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <ShortcutIcon sx={{ mr: 2, color: 'primary.main' }} />\n                    <Typography variant=\"h5\" component=\"h1\">\n                        桌面快捷方式设置\n                    </Typography>\n                </Box>\n                \n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                    创建桌面快捷方式，可以快速触发紧急呼救功能\n                </Typography>\n\n                {message && (\n                    <Alert \n                        severity={message.type} \n                        sx={{ mb: 3 }}\n                        onClose={() => setMessage(null)}\n                    >\n                        <pre style={{ whiteSpace: 'pre-wrap', margin: 0 }}>\n                            {message.text}\n                        </pre>\n                    </Alert>\n                )}\n\n                <Grid container spacing={3}>\n                    {/* 医疗呼救快捷方式 */}\n                    <Grid item xs={12} md={6}>\n                        <Paper variant=\"outlined\" sx={{ p: 3 }}>\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                                <MedicalIcon sx={{ mr: 2, color: 'error.main' }} />\n                                <Typography variant=\"h6\">医疗呼救</Typography>\n                            </Box>\n                            \n                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                                创建医疗紧急呼救快捷方式，点击后直接触发医疗呼救功能\n                            </Typography>\n\n                            <TextField\n                                fullWidth\n                                label=\"快捷方式名称\"\n                                value={medicalName}\n                                onChange={(e) => setMedicalName(e.target.value)}\n                                sx={{ mb: 2 }}\n                                placeholder=\"意外呼救\"\n                            />\n\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"error\"\n                                onClick={handleCreateMedicalShortcut}\n                                disabled={isCreating}\n                                startIcon={<MedicalIcon />}\n                            >\n                                {isCreating ? '创建中...' : '创建医疗呼救快捷方式'}\n                            </Button>\n                        </Paper>\n                    </Grid>\n\n                    {/* 安全呼救快捷方式 */}\n                    <Grid item xs={12} md={6}>\n                        <Paper variant=\"outlined\" sx={{ p: 3 }}>\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                                <SecurityIcon sx={{ mr: 2, color: 'warning.main' }} />\n                                <Typography variant=\"h6\">安全呼救</Typography>\n                            </Box>\n                            \n                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                                创建安全呼救快捷方式（功能开发中，点击显示占位界面）\n                            </Typography>\n\n                            <TextField\n                                fullWidth\n                                label=\"快捷方式名称\"\n                                value={securityName}\n                                onChange={(e) => setSecurityName(e.target.value)}\n                                sx={{ mb: 2 }}\n                                placeholder=\"安全呼救\"\n                            />\n\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"warning\"\n                                onClick={handleCreateSecurityShortcut}\n                                disabled={isCreating}\n                                startIcon={<SecurityIcon />}\n                            >\n                                {isCreating ? '创建中...' : '创建安全呼救快捷方式'}\n                            </Button>\n                        </Paper>\n                    </Grid>\n                </Grid>\n\n                <Divider sx={{ my: 3 }} />\n\n                {/* 工具按钮 */}\n                <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', flexWrap: 'wrap' }}>\n                    <Button\n                        variant=\"outlined\"\n                        onClick={handleCheckSupport}\n                        disabled={isCreating}\n                    >\n                        检查设备支持情况\n                    </Button>\n                    \n                    <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={handleRequestPermission}\n                        disabled={isCreating}\n                    >\n                        打开权限设置\n                    </Button>\n                </Box>\n\n                {/* 使用说明 */}\n                <Box sx={{ mt: 3, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                        使用说明：\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"div\">\n                        <ul style={{ margin: 0, paddingLeft: '20px' }}>\n                            <li>创建快捷方式后，请在桌面查看</li>\n                            <li>医疗呼救快捷方式会直接触发紧急呼救</li>\n                            <li>安全呼救功能正在开发中，明天会完善</li>\n                            <li>支持自定义快捷方式名称</li>\n                            <li><strong>重要：</strong>小米、华为、OPPO、VIVO等设备需要手动开启权限</li>\n                            <li>如果创建失败，请点击“打开权限设置”按钮</li>\n                        </ul>\n                    </Typography>\n                    \n                    <Box sx={{ mt: 2, p: 1.5, bgcolor: 'warning.light', borderRadius: 1, border: '1px solid', borderColor: 'warning.main' }}>\n                        <Typography variant=\"body2\" color=\"warning.dark\">\n                            <strong>ℹ️ 温馨提示：</strong>\n                            如果创建快捷方式时显示“没有权限”错误，请点击上方“打开权限设置”按钮，\n                            系统会自动跳转到对应的权限设置页面。\n                        </Typography>\n                    </Box>\n                </Box>\n            </Paper>\n        </Box>\n    );\n};\n\nexport default ShortcutConfig;","import { Dialog, DialogContent, IconButton } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\n\n// Add a React import for useRef\nimport React from 'react';\nimport { autoJsStoreUtils, autoWebViewJs, isRealInAndroid } from '@droid/android';\n\ninterface PrivacyDialogProps {\n  // open: boolean;\n  // onClose: () => void;\n  // onResult: (agree: boolean) => void;\n  type: string;\n  area: string;\n}\n\ninterface IPrivacyInfo{\n  agree:boolean;\n  disagreeTime:number;\n}\n\nexport function PrivacyDialog({ type, area }: PrivacyDialogProps) {\n  const url = `/privacies/${type}/${area}.html`;\n  const [iframeSrc, setIframeSrc] = useState(url);\n\n  const [open, setOpen] = useState(false);\n  function onClose() {\n    setOpen(false);\n  }\n\n  useEffect(()=>{\n    setIframeSrc(`/privacies/${type}/${area}.html`)\n  }, [type, area]);\n\n  useEffect(() => {\n    const def:IPrivacyInfo = {agree:false, disagreeTime:0}\n    const res = autoJsStoreUtils.read<IPrivacyInfo>(`privacy_${type}`, def);\n    const value:IPrivacyInfo = res && 'agree' in res ? res : def;\n    if(!isRealInAndroid){\n      return;\n    }\n    if(value.agree){\n      return\n    }\n    if(value.disagreeTime && value.disagreeTime != 0 &&  value.disagreeTime + 3 * 24 * 60 * 60 * 1000 > Date.now()){\n      return;\n    }\n    setOpen(true)\n  }, []);\n\n  useEffect(() => {\n    const handleMessage = (event: MessageEvent) => {\n      // Basic security check: ensure the message is from a trusted source if possible\n      // For now, we check the data structure.\n      if (event.source !== iframeRef.current?.contentWindow) {\n        return;\n      }\n\n      const { sender, agree } = event.data;\n\n      if (sender === 'privacy_page') {\n        console.log(`Received privacy decision: ${agree ? 'Agreed' : 'Disagreed'}`);\n\n        const value:IPrivacyInfo = {\n          agree,\n          disagreeTime: agree ? 0 : Date.now()\n        }\n        autoJsStoreUtils.write(`privacy_${type}`, value);\n        const s = `\n        var data = new com.fanfanlo.emergencycall.data.PrivacyData(${value.agree}, ${value.disagreeTime});\n        com.fanfanlo.emergencycall.data.PrivacyStateHolder.updateMainPrivacyByJs(data);\n        `\n        autoWebViewJs.callScript(s);\n\n        // onResult(agree);\n        onClose();\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n\n  const iframeRef = React.useRef<HTMLIFrameElement>(null);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          width: '80%',\n          height: '80%',\n          maxWidth: 'none',\n        },\n      }}>\n      <IconButton\n        aria-label=\"close\"\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 8,\n          color: theme => theme.palette.grey[500],\n        }}>\n        <CloseIcon />\n      </IconButton>\n      <DialogContent sx={{ padding: 0, overflow: 'hidden' }}>\n        {iframeSrc && (\n          <iframe\n            ref={iframeRef}\n            src={iframeSrc}\n            style={{ width: '100%', height: '100%', border: 'none' }}\n            title={`Privacy Policy - ${type}/${area}`}\n          />\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n\n","import { useEffect, useState } from \"react\";\r\nimport { PrivacyDialog } from \"./PrivacyDialog\";\r\nimport { autoJsStoreUtils } from \"@droid/android\";\r\n\r\n\r\nexport function ListenShowPrivacyContent({type}:{type:string}){\r\n\r\n    const [open, setOpen] = useState(false);\r\n    function onClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const value = autoJsStoreUtils.read(`privacy_${type}`, false)\r\n        console.log('privacy value is', value, typeof value);\r\n    }, [])\r\n    return(\r\n        <PrivacyDialog type={type} area=\"zh-cn\" />\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport { Box, TextField, Button, Typography, Paper } from '@mui/material';\nimport { autoWebViewJs } from '@droid/android';\nimport { parse } from 'path';\n\n\n\nexport const SensorMonitor: React.FC = () => {\n  const [threshold, setThreshold] = useState<string>('5.0');\n  const [isMonitoring, setIsMonitoring] = useState<boolean>(false);\n\n  // Effect to fetch the initial monitoring state from Android\n\n  useEffect(()=>{\n    try {\n      const script = `\n      var thresholdValue = com.fanfanlo.emergencycall.manager.SensorManager.getThreshold();\n      thresholdValue;`;\n      const {javaResultString} = autoWebViewJs.callScript(script);\n      const thresholdValue = parseFloat(javaResultString || '5.0');\n      console.log(\"script get threshold=\", thresholdValue, javaResultString);\n      setThreshold(thresholdValue.toString());\n    } catch (error) {\n      console.error('Error fetching initial threshold value:', error);\n    }\n  }, [])\n  function readIsMonitoring(){\n\n    try {\n      const script = `\n      var isMonitoring = com.fanfanlo.emergencycall.manager.SensorManager.isMonitoring();\n      isMonitoring;`;\n      const {javaResultString} = autoWebViewJs.callScript(script);\n      const isMonitoring = javaResultString === \"true\";\n      console.log(\"script get isMonitoring=\", isMonitoring, javaResultString);\n      setIsMonitoring(isMonitoring);\n    } catch (error) {\n      console.error('Error fetching initial monitoring state:', error);\n    }\n  }\n  useEffect(() => {\n    readIsMonitoring();\n  }, []);\n\n  const handleSetThreshold = () => {\n    const thresholdValue = parseFloat(threshold);\n    if (isNaN(thresholdValue)) {\n      alert('请输入一个有效的数字作为阈值。');\n      return;\n    }\n    try {\n      // This script now ONLY updates the threshold.\n      const script = `com.fanfanlo.emergencycall.manager.SensorManager.updateThreshold(${thresholdValue});`;\n      autoWebViewJs.callScript(script);\n      alert(`阈值已设置为: ${thresholdValue}`);\n    } catch (error) {\n      console.error('Error calling updateThreshold:', error);\n      alert('设置阈值失败。请确保您在安卓应用中。');\n    }\n  };\n\n  const handleToggleMonitoring = () => {\n    try {\n      if (isMonitoring) {\n        const script = `com.fanfanlo.emergencycall.manager.SensorManager.stopMonitoring();`;\n        autoWebViewJs.callScript(script);\n      } else {\n        const script = `com.fanfanlo.emergencycall.manager.SensorManager.startMonitoring();`;\n        autoWebViewJs.callScript(script);\n      }\n      readIsMonitoring();\n    } catch (error) {\n      console.error('Error toggling monitoring:', error);\n      alert('切换监控状态失败。请确保您在安卓应用中。');\n    }\n  };\n\n  return (\n    <Paper elevation={3} sx={{ padding: 1, margin: 0 }}>\n      <Typography variant=\"h6\" gutterBottom>\n        传感器监控控制\n      </Typography>\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, marginBottom: 2 }}>\n        <TextField\n          label=\"震动阈值\"\n          variant=\"outlined\"\n          type=\"number\"\n          value={threshold}\n          onChange={(e) => setThreshold(e.target.value)}\n          size=\"small\"\n        />\n        <Button variant=\"contained\" onClick={handleSetThreshold}>\n          设置\n        </Button>\n      </Box>\n      <Button\n        variant=\"contained\"\n        color={isMonitoring ? 'error' : 'primary'}\n        onClick={handleToggleMonitoring}\n        fullWidth\n      >\n        {isMonitoring ? '停止监控' : '开始监控'}\n      </Button>\n    </Paper>\n  );\n};\n\nexport default SensorMonitor;\n\n\n","import { autoWebViewJs } from \"@droid/android\";\r\nimport { Box, Button } from \"@mui/material\";\r\n\r\n\r\nexport function TestEmergencyCall() {\r\n    function onClick(){\r\n        const script = `\r\n        var instance = com.fanfanlo.emergencycall.service.SensorMonitoringService.instance;\r\n        if(instance){\r\n            instance.triggerEmergencyCall();\r\n        }\r\n        `\r\n        autoWebViewJs.callScript(script);\r\n    }\r\n    return(\r\n        <Box sx={{mt:\"10px\", mb:\"10px\"\r\n        }}>\r\n            <Button onClick={onClick}>\r\n                测试呼救\r\n            </Button>\r\n        </Box>  \r\n    )\r\n}","import { autoWebViewJs } from \"@droid/android\";\r\nimport { Log } from \"@fanfanlo\";\r\n\r\nconst fileLog = new Log(false, 'stopAllHandler_f');\r\n\r\nexport function stopAllHandler() {\r\n\r\n    try {\r\n      fileLog.log('开始停止所有紧急音频和震动...');\r\n\r\n      // 使用正确的停止方法（与EmergencyAudioControl.tsx保持一致）\r\n      const stopEmergencyMethods = [\r\n        // 停止监控\r\n        `com.fanfanlo.emergencycall.manager.SensorManager.stopMonitoring();`,\r\n        \r\n        // 停止呼救者声音 (V1 + V2)\r\n        `\r\n        try {\r\n          com.fanfanlo.emergencycall.manager.SoundManager.stop();\r\n          com.fanfanlo.emergencycall.manager.AlarmSoundManager.stop();\r\n          com.fanfanlo.emergencycall.v2.core.EmergencySystemV2.forceStopHelpSound();\r\n        } catch(e) {\r\n          console.log('停止呼救者声音失败:', e);\r\n        }\r\n        `,\r\n        \r\n        // 停止联系人报警声音（主要方法）\r\n        `\r\n        try {\r\n          com.fanfanlo.emergencycall.manager.SoundManager.stopEmergencyAlarm();\r\n          \r\n          // 备用方案：如果WebViewActivity的Android接口可用，也调用它\r\n          if(typeof Android !== 'undefined' && typeof Android.stopAlarm === 'function') {\r\n            Android.stopAlarm();\r\n          }\r\n        } catch(e) {\r\n          console.log('停止联系人报警声音失败:', e);\r\n        }\r\n        `\r\n      ];\r\n\r\n      for (const script of stopEmergencyMethods) {\r\n        try {\r\n          fileLog.log(`调用停止脚本: ${script.trim()}`);\r\n          autoWebViewJs.callScript(script);\r\n        } catch (methodError) {\r\n          fileLog.warn(`停止方法调用失败:`, methodError);\r\n          // 继续尝试其他方法\r\n        }\r\n      }\r\n\r\n      fileLog.log('已停止所有紧急音频和震动');\r\n      return true;\r\n    //   setMessage({\r\n    //     type: 'success',\r\n    //     text: '已停止所有紧急音频和震动'\r\n    //   });\r\n    } catch (error) {\r\n      fileLog.error('停止紧急音频失败:', error);\r\n    //   setMessage({\r\n    //     type: 'error',\r\n    //     text: `停止失败: ${error instanceof Error ? error.message : '未知错误'}`\r\n    //   });\r\n    return false;\r\n    } finally {\r\n    //   setLoading(false);\r\n    }\r\n    \r\n}","import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Alert,\n  Snackbar,\n  Typography,\n  Card,\n  CardContent,\n  Stack\n} from '@mui/material';\nimport {\n  VolumeOff as VolumeOffIcon,\n  NotificationsOff as VibrationOffIcon,\n  Stop as StopIcon\n} from '@mui/icons-material';\nimport { autoWebViewJs } from \"@droid/android\";\nimport { Log } from \"@fanfanlo\";\nimport { stopAllHandler } from './stopAllHandler';\n\nconst fileLog = new Log(false, 'EmergencyAudioControl');\n\n/**\n * 紧急呼救音频和震动控制组件\n * 提供停止预报警震动/铃声、求救循环音频、紧急联系人报警音频/震动的功能\n */\nconst EmergencyAudioControl: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n\n  /**\n   * 检查是否在Android WebView环境中\n   */\n  const isAndroidWebView = (): boolean => {\n    try {\n      return !!(autoWebViewJs && typeof autoWebViewJs.callScript === 'function');\n    } catch (e) {\n      fileLog.error('检查WebView环境时出错:', e);\n      return false;\n    }\n  };\n\n  /**\n   * 调用Android方法的通用函数\n   */\n  const callAndroidMethod = async (methodName: string, description: string): Promise<void> => {\n    setLoading(true);\n    setMessage(null);\n\n    try {\n\n      let script = '';\n      \n      // 根据方法名构建不同的脚本\n      switch (methodName) {\n        case 'stopPreAlarmVibrationAndSound':\n          script = `\n            try {\n              com.fanfanlo.emergencycall.manager.SensorManager.stopMonitoring();\n            } catch(e) {\n              console.log('停止监控失败:', e);\n            }\n          `;\n          break;\n          \n        case 'stopEmergencyLoopAudio':\n          script = `\n            try {\n              // 停止V1系统声音管理器\n              com.fanfanlo.emergencycall.manager.SoundManager.stop();\n              com.fanfanlo.emergencycall.manager.AlarmSoundManager.stop();\n              \n              // 停止V2系统声音管理器\n              com.fanfanlo.emergencycall.v2.core.EmergencySystemV2.forceStopHelpSound();\n            } catch(e) {\n              console.log('停止呼救循环音频失败:', e);\n            }\n          `;\n          break;\n          \n        case 'stopContactAlertVibrationAndSound':\n          script = `\n            try {\n              // 调用SoundManager的停止紧急报警方法（适用于MainActivity）\n              com.fanfanlo.emergencycall.manager.SoundManager.stopEmergencyAlarm();\n              \n              // 备用方案：如果WebViewActivity的Android接口可用，也调用它\n              if(typeof Android !== 'undefined' && typeof Android.stopAlarm === 'function') {\n                Android.stopAlarm();\n              }\n            } catch(e) {\n              console.log('停止联系人报警声音失败:', e);\n            }\n          `;\n          break;\n          \n        case 'stopAllEmergencyAudioAndVibration':\n          script = `\n            try {\n              // 停止监控\n              com.fanfanlo.emergencycall.manager.SensorManager.stopMonitoring();\n              \n              // 停止呼救者声音 (V1 + V2)\n              com.fanfanlo.emergencycall.manager.SoundManager.stop();\n              com.fanfanlo.emergencycall.manager.AlarmSoundManager.stop();\n              com.fanfanlo.emergencycall.v2.core.EmergencySystemV2.forceStopHelpSound();\n              \n              // 停止联系人报警声音（主要方法）\n              com.fanfanlo.emergencycall.manager.SoundManager.stopEmergencyAlarm();\n              \n              // 备用方案：如果WebViewActivity的Android接口可用，也调用它\n              if(typeof Android !== 'undefined' && typeof Android.stopAlarm === 'function') {\n                Android.stopAlarm();\n              }\n            } catch(e) {\n              console.log('停止所有紧急音频和震动失败:', e);\n            }\n          `;\n          break;\n          \n        default:\n          throw new Error(`未知的方法: ${methodName}`);\n      }\n\n      fileLog.log(`调用Android脚本: ${script}`);\n      \n      const result = autoWebViewJs.callScript(script);\n      fileLog.log(`${methodName}调用结果:`, result);\n\n      setMessage({\n        type: 'success',\n        text: `${description}成功`\n      });\n    } catch (error) {\n      fileLog.error(`${methodName}调用失败:`, error);\n      setMessage({\n        type: 'error',\n        text: `${description}失败: ${error instanceof Error ? error.message : '未知错误'}`\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * 停止预报警震动和铃声\n   */\n  const stopPreAlarmVibrationAndSound = () => {\n    callAndroidMethod('stopPreAlarmVibrationAndSound', '停止预报警震动和铃声');\n  };\n\n  /**\n   * 停止求救循环音频\n   */\n  const stopEmergencyLoopAudio = () => {\n    callAndroidMethod('stopEmergencyLoopAudio', '停止求救循环音频');\n  };\n\n  /**\n   * 停止紧急联系人报警震动和铃声\n   */\n  const stopContactAlertVibrationAndSound = () => {\n    callAndroidMethod('stopContactAlertVibrationAndSound', '停止紧急联系人报警震动和铃声');\n  };\n\n  /**\n   * 停止所有紧急呼救相关的音频和震动\n   */\n  const stopAllEmergencyAudioAndVibration = () => {\n    callAndroidMethod('stopAllEmergencyAudioAndVibration', '停止所有紧急呼救音频和震动');\n  };\n\n  /**\n   * 关闭消息提示\n   */\n  const handleCloseMessage = () => {\n    setMessage(null);\n  };\n\n  return (\n    <Card sx={{ mb: 2 }}>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          🔕 紧急呼救音频控制\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n          控制和停止紧急呼救相关的音频和震动效果\n        </Typography>\n\n        <Stack spacing={2}>\n          {/* 停止预报警 */}\n          <Button\n            variant=\"contained\"\n            color=\"warning\"\n            startIcon={<VibrationOffIcon />}\n            onClick={stopPreAlarmVibrationAndSound}\n            disabled={loading}\n            fullWidth\n          >\n            停止预报警震动和铃声\n          </Button>\n\n          {/* 停止求救循环音频 */}\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<VolumeOffIcon />}\n            onClick={stopEmergencyLoopAudio}\n            disabled={loading}\n            fullWidth\n          >\n            停止求救循环音频\n          </Button>\n\n          {/* 停止联系人报警 */}\n          <Button\n            variant=\"contained\"\n            color=\"info\"\n            startIcon={<VibrationOffIcon />}\n            onClick={stopContactAlertVibrationAndSound}\n            disabled={loading}\n            fullWidth\n          >\n            停止联系人报警震动和铃声\n          </Button>\n\n          {/* 停止所有 */}\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            startIcon={<StopIcon />}\n            // onClick={stopAllEmergencyAudioAndVibration}\n            onClick={stopAllHandler}\n            disabled={loading}\n            fullWidth\n            sx={{ mt: 1 }}\n          >\n            停止所有紧急音频和震动\n          </Button>\n        </Stack>\n\n        {/* 状态提示 */}\n        <Snackbar\n          open={!!message}\n          autoHideDuration={6000}\n          onClose={handleCloseMessage}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert \n            onClose={handleCloseMessage} \n            severity={message?.type || 'info'}\n            sx={{ width: '100%' }}\n          >\n            {message?.text}\n          </Alert>\n        </Snackbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default EmergencyAudioControl;","import React, { useState } from 'react';\nimport {\n  Button,\n  Snackbar,\n  Alert,\n  Fab,\n  Tooltip\n} from '@mui/material';\nimport {\n  Stop as StopIcon,\n  VolumeOff as VolumeOffIcon\n} from '@mui/icons-material';\nimport { autoWebViewJs } from \"@droid/android\";\nimport { Log } from \"@fanfanlo\";\nimport { stopAllHandler } from './stopAllHandler';\n\nconst fileLog = new Log(false, 'EmergencyStopButton');\n\ninterface EmergencyStopButtonProps {\n  variant?: 'button' | 'fab';\n  size?: 'small' | 'medium' | 'large';\n  fullWidth?: boolean;\n}\n\n/**\n * 紧急停止按钮组件\n * 快速停止所有紧急呼救相关的音频和震动\n */\nconst EmergencyStopButton: React.FC<EmergencyStopButtonProps> = ({ \n  variant = 'button',\n  size = 'medium',\n  fullWidth = false\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n\n  /**\n   * 检查是否在Android WebView环境中\n   */\n  const isAndroidWebView = (): boolean => {\n    try {\n      return !!(autoWebViewJs && typeof autoWebViewJs.callScript === 'function');\n    } catch (e) {\n      fileLog.error('检查WebView环境时出错:', e);\n      return false;\n    }\n  };\n\n  /**\n   * 停止所有紧急呼救音频和震动\n   */\n  const handleStopAllEmergencyAudio = async (): Promise<void> => {\n    setLoading(true);\n    setMessage(null);\n\n    const bl = stopAllHandler();\n    if (bl){\n      \n      setMessage({\n        type: 'success',\n        text: '已停止所有紧急音频和震动'\n      });\n    }else{\n      \n      setMessage({\n        type: 'error',\n        text: `停止失败`\n      });\n    }\n    setLoading(false);\n    // try {\n    //   fileLog.log('开始停止所有紧急音频和震动...');\n\n    //   // 使用正确的停止方法（与EmergencyAudioControl.tsx保持一致）\n    //   const stopEmergencyMethods = [\n    //     // 停止监控\n    //     `com.fanfanlo.emergencycall.manager.SensorManager.stopMonitoring();`,\n        \n    //     // 停止呼救者声音 (V1 + V2)\n    //     `\n    //     try {\n    //       com.fanfanlo.emergencycall.manager.SoundManager.stop();\n    //       com.fanfanlo.emergencycall.manager.AlarmSoundManager.stop();\n    //       com.fanfanlo.emergencycall.v2.core.EmergencySystemV2.forceStopHelpSound();\n    //     } catch(e) {\n    //       console.log('停止呼救者声音失败:', e);\n    //     }\n    //     `,\n        \n    //     // 停止联系人报警声音（主要方法）\n    //     `\n    //     try {\n    //       com.fanfanlo.emergencycall.manager.SoundManager.stopEmergencyAlarm();\n          \n    //       // 备用方案：如果WebViewActivity的Android接口可用，也调用它\n    //       if(typeof Android !== 'undefined' && typeof Android.stopAlarm === 'function') {\n    //         Android.stopAlarm();\n    //       }\n    //     } catch(e) {\n    //       console.log('停止联系人报警声音失败:', e);\n    //     }\n    //     `\n    //   ];\n\n    //   for (const script of stopEmergencyMethods) {\n    //     try {\n    //       fileLog.log(`调用停止脚本: ${script.trim()}`);\n    //       autoWebViewJs.callScript(script);\n    //     } catch (methodError) {\n    //       fileLog.warn(`停止方法调用失败:`, methodError);\n    //       // 继续尝试其他方法\n    //     }\n    //   }\n\n    //   setMessage({\n    //     type: 'success',\n    //     text: '已停止所有紧急音频和震动'\n    //   });\n    // } catch (error) {\n    //   fileLog.error('停止紧急音频失败:', error);\n    //   setMessage({\n    //     type: 'error',\n    //     text: `停止失败: ${error instanceof Error ? error.message : '未知错误'}`\n    //   });\n    // } finally {\n    //   setLoading(false);\n    // }\n  };\n\n  /**\n   * 关闭消息提示\n   */\n  const handleCloseMessage = () => {\n    setMessage(null);\n  };\n\n  // 浮动操作按钮样式\n  if (variant === 'fab') {\n    return (\n      <>\n        <Tooltip title=\"停止所有紧急音频和震动\" placement=\"left\">\n          <Fab\n            color=\"error\"\n            onClick={handleStopAllEmergencyAudio}\n            disabled={loading}\n            size={size}\n            sx={{\n              position: 'fixed',\n              bottom: 80,\n              right: 16,\n              zIndex: 1000\n            }}\n          >\n            {loading ? <VolumeOffIcon /> : <StopIcon />}\n          </Fab>\n        </Tooltip>\n\n        <Snackbar\n          open={!!message}\n          autoHideDuration={4000}\n          onClose={handleCloseMessage}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert \n            onClose={handleCloseMessage} \n            severity={message?.type || 'info'}\n            sx={{ width: '100%' }}\n          >\n            {message?.text}\n          </Alert>\n        </Snackbar>\n      </>\n    );\n  }\n\n  // 普通按钮样式\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        color=\"error\"\n        size={size}\n        fullWidth={fullWidth}\n        startIcon={loading ? <VolumeOffIcon /> : <StopIcon />}\n        onClick={handleStopAllEmergencyAudio}\n        disabled={loading}\n        sx={{ mb: 1 }}\n      >\n        🔕 停止紧急音频\n      </Button>\n\n      <Snackbar\n        open={!!message}\n        autoHideDuration={4000}\n        onClose={handleCloseMessage}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert \n          onClose={handleCloseMessage} \n          severity={message?.type || 'info'}\n          sx={{ width: '100%' }}\n        >\n          {message?.text}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default EmergencyStopButton;","import { AppShell, TabbarContainer } from '@app/ui';\nimport { MeetingRoom5 } from '@im/livekit';\nimport { IMOpenPageLink } from '@im/matrix';\nimport { Box, Button, Grid2 } from '@mui/material';\nimport { InviteContactDialog } from '@src/components/dialogs/InviteContactDialog';\nimport InvitationManager from '@src/components/InvitationManager/InvitationManager';\nimport { JpushIsInitialized } from '@src/components/jpush/IsInitialized';\nimport { NavBar } from '@src/components/navbar/NavBar';\nimport PendingInvitationsList from '@src/components/PendingInvitationsList/PendingInvitationsList';\nimport PreAlarmConfig2 from '@src/components/pre-alarm-config2';\nimport ShortcutConfig from '@src/components/shortcut-config/ShortcutConfig';\nimport { ListenShowPrivacyContent } from '@src/components/privacies/ListenShowPrivacyContent';\nimport { SensorMonitor } from '@src/components/sensor-monitor/SensorMonitor';\nimport { TestEmergencyCall } from '@src/components/test/TestEmergencyCall';\nimport EmergencyAudioControl from '@src/components/emergency-audio-control/EmergencyAudioControl';\nimport EmergencyStopButton from '@src/components/emergency-audio-control/EmergencyStopButton';\nimport { mainModel } from '@src/libs/mc/main/MainModel';\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport MeetingList from '@src/components/meeting-list/MeetingList';\n\nfunction Content() {\n  const [openInviteDialog, setOpenInviteDialog] = useState(false);\n\n  return (\n    <Box sx={{ my: 2, p: 2 }}>\n      {/* 紧急停止按钮 - 置顶显示 */}\n      {/* <EmergencyStopButton fullWidth size=\"large\" /> */}\n      \n      <ListenShowPrivacyContent type=\"main\" />\n      {/* <InvitationManager /> */}\n      <MeetingList maxItemLength={3} />\n      <PendingInvitationsList />\n      <PreAlarmConfig2 />\n      {/* <PreAlarmConfigComponent /> */}\n      <EmergencyAudioControl />\n      {/* <JpushIsInitialized /> */}\n      <TestEmergencyCall />\n      <Grid2 container spacing={2} sx={{ mb: 2 }}>\n        <Grid2 size={6}>\n          <Button variant=\"contained\" onClick={() => setOpenInviteDialog(true)}>\n            邀请紧急联系人\n          </Button>\n        </Grid2>\n        <Link href=\"/contacts\" style={{ textDecoration: 'none' }}>\n          联系人管理\n        </Link>\n      </Grid2>\n      <SensorMonitor />\n      {openInviteDialog && <InviteContactDialog open={openInviteDialog} onClose={() => setOpenInviteDialog(false)} />}\n\n      {/* <MeetingRoom5\n        roomName=\"test-room\"\n        userName={`user-${Math.random().toString(36).substring(2, 8)}`}\n        livekitConfig={mainModel.appConfig.livekit}\n        // role=\"initiator\" // Add role for testing\n      />\n       */}\n      <ShortcutConfig />\n      \n      <Link href={\"/logs\"}>日志</Link>\n      <IMOpenPageLink />\n      <Box sx={{ mt: \"2rem\" }}></Box>\n      \n      {/* 浮动紧急停止按钮 */}\n      <EmergencyStopButton variant=\"fab\" />\n    </Box>\n  );\n}\n\nexport default function Home() {\n  return (\n    <AppShell>\n      <TabbarContainer titleConf={{ ns: 'emergency-call/pages/home/content', key: 'home.title' }} navBar={<NavBar />}>\n        <Content />\n      </TabbarContainer>\n    </AppShell>\n  );\n}\n","import { useRouter } from \"next/router\";\r\nimport { useTranslation } from \"@fanfanlo\";\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport ListIcon from '@mui/icons-material/List';\r\nimport { BottomNavigation, BottomNavigationAction } from \"@mui/material\";\r\ninterface TabInfoType {\r\n  label: string;\r\n  value: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nexport function NavBar() {\r\n  const router = useRouter();\r\n  const { pathname } = router;\r\n  const { t } = useTranslation('emergency-call/components/navbar/content');\r\n  const tabInfoList: TabInfoType[] = [\r\n    { label: t('NavBar.home'), value: '/', icon: <HomeIcon /> },\r\n    // { label: t('NavBar.logs'), value: '/logs', icon: <ListIcon /> },\r\n    // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n    // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n    { label: t('NavBar.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n  ];\r\n  return (\r\n\r\n    <BottomNavigation showLabels value={pathname}>\r\n      {tabInfoList.map(e => (\r\n        <BottomNavigationAction\r\n          key={e.value}\r\n          label={e.label}\r\n          icon={e.icon}\r\n          data-id={`tabbar-${e.value}`}\r\n          className={pathname === e.value ? 'Mui-selected' : ''}\r\n          onClick={() => {\r\n            if (pathname === e.value) return;\r\n            router.push(e.value);\r\n          }}\r\n        />\r\n      ))}\r\n    </BottomNavigation>\r\n  );\r\n}","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3\\\\node_modules\\\\react-i18next\\\\dist\\\\es\\\\index.js\"","\"use client\";\r\n// 现在用的是这个文件\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport Backend, { type HttpBackendOptions } from \"i18next-http-backend\";\r\n\r\nimport i18next from \"i18next\";\r\nimport { Log } from \"../log/Log\";\r\nimport { getBuildTime, isServer } from \"../nextjs/env/env\";\r\nimport { fileMapUtils } from \"../utils\";\r\n;\r\nexport { useTranslation } from 'react-i18next';\r\nlet fileDateVersion:string = ''// = getConfig().publicRuntimeConfig?.version\r\nexport const i18nLogger = new Log(false, `i18n`);\r\nconst windowHref = (()=>{\r\n  if(typeof window === 'undefined')return ''\r\n  const u = new URL(window.location.href || window.parent?.location.href);\r\n  // 同域文本iframe里的页面会获取不到href，所以判断一下直接用父级的就行.\r\n  return u.origin == null || u.origin == 'null' ? '' : u.origin\r\n})()\r\nconst backendOptions = {\r\n  loadPath: function (lngs: string[], namespaces: string[]) {\r\n    const log = i18nLogger.sub(false, `i18n loadpath`);\r\n    log.pause = true;\r\n    const lng = lngs[0]\r\n    let p = ``\r\n    // p = `/options/_locales/${lngs[0].replace(\"-\", \"_\")}/messages.json`;\r\n    // p = `/locales/zh-CN/ns1/content.json`;\r\n    // p = `locales/${lng}/${namespaces[0]}.json?v=${fileDateVersion}`\r\n    const ps = namespaces[0].split('/')\r\n    ps.splice(ps.length - 1, 0, lng)\r\n    // p = `locales/${ps.join('/')}.json?v=${fileDateVersion}`\r\n    // p = `locales/${ps.join('/')}.json?v=${getBuildTime()}`\r\n    p = `locales/${ps.join('/')}.json`\r\n    log.log(`lngs=`, lngs);\r\n    log.log(`namespaces=`, namespaces);\r\n    log.log(\"p=\", p);\r\n    p = fileMapUtils.getFile(`/${p}`);\r\n    // console.log('map p=', p)\r\n    p = `${windowHref}/${p}`\r\n    return p;\r\n\r\n  },\r\n  parse: function (\r\n    data: string,\r\n    languages?: string | string[],\r\n    namespaces?: string | string[]\r\n  ) {\r\n    const log = i18nLogger.sub(false, `i18n backend parse`);\r\n    log.pause = true;\r\n    // log.log(`parrrse`, data, languages, namespaces);\r\n    const l = JSON.parse(data);\r\n    log.print(`before set i18ndata`);\r\n    // i18nData = l as II18n;\r\n    // log.log(`i18nData.rule.scripts.sys.rules`, i18nData.rule.scripts.sys.rules);\r\n    log.log(`parrrse`, languages, namespaces);\r\n    return l;\r\n  },\r\n};\r\nconst backend = new Backend();\r\nbackend.init(null, backendOptions);\r\nexport const i18n = i18next;\r\n// export const resources: Resource = {\r\n//   // 'zh-CN': {\r\n//   //   translation: _.merge({}, zhCN),\r\n//   // },\r\n//   // en: {\r\n//   //   translation: _.merge({}, en),\r\n//   // },\r\n// };\r\n\r\n\r\ni18n.on(\"languageChanged\", async function (lng) {\r\n  const log = i18nLogger.sub(false, `onlanguageChanged`);\r\n  log.pause = true;\r\n  log.log(`lllllng`, lng);\r\n  // lng = \"en\";\r\n  // const p = `/options/_locales/${lng.replace(\"-\", \"_\")}/messages.json`;\r\n});\r\n\r\n\r\n\r\n\r\nexport function i18nInit(_fileDateVersion:string=''){\r\n  fileDateVersion = _fileDateVersion\r\n  i18n\r\n  .use(LanguageDetector)\r\n  .use(backend)\r\n  .use(initReactI18next)\r\n  .init<HttpBackendOptions>({\r\n    load: \"currentOnly\",\r\n    // load: \"all\",\r\n    // supportedLngs: ['zh-CN', 'zh-TW', 'en', 'en-GB', 'ja'],\r\n    // resources,\r\n    fallbackLng: isServer ? \"en\" : \"zh-CN\",\r\n    // fallbackLng: \"zh-CN\",\r\n    // lng: \"zh-CN\",\r\n    partialBundledLanguages:true,\r\n    ns:[],\r\n    \r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    detection: {\r\n      caches: [\"localStorage\"],\r\n    },\r\n  });\r\n}\r\ni18n.on(\"missingKey\", function (lngs, namespace, key, res) {\r\n  console.error(\r\n    \"i18n mssing key, lngs=%s, namespace=%s, key=%s, res=%s\",\r\n    lngs,\r\n    namespace,\r\n    key,\r\n    res\r\n  );\r\n});\r\n\r\ni18n.on(\"loaded\", function (loaded) {\r\n  const log = i18nLogger.sub(false, `onloaded`);\r\n  log.pause = true;\r\n  log.log(`onloaded arguments`, loaded);\r\n});\r\n\r\ni18n.on(\"failedLoading\", function (lng, ns, msg) {\r\n  const log = i18nLogger.sub(false, `onfailedLoading`);\r\n  log.pause = true;\r\n  log.log(`failedLoading arguments`, lng, ns, msg);\r\n});\r\n\r\ni18n.on(\"added\", function () {\r\n  console.log('added', arguments)\r\n});   \r\n\r\nexport default i18n;","import { createContext } from \"react\";\r\nimport { storeUtils } from \"./store-utils\";\r\n// import { storeUtils } from \"./store\";\r\nconst s = storeUtils.namespace('store-page-context')\r\n\r\nexport interface IPageScrollPosition{\r\n    x:number\r\n    y:number\r\n}\r\n\r\nfunction create(){\r\n    return createContext(s)\r\n}\r\nexport const StorePageContext = createContext<any>(s)\r\n\r\nexport const StorePageDynamicContext = createContext<Record<string, any>>({})","'use client'\r\nimport { i18n, i18nInit, IPageScrollPosition, StorePageContext, StorePageDynamicContext, toProxy, watchUpdates, storeUtils } from \"@fanfanlo\";\r\nimport { useRouter } from \"next/router\";\r\nimport getConfig from \"node_modules/next/config\";\r\nimport { PropsWithChildren, useEffect } from \"react\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\n\r\ncheckReloadPage();\r\ni18nInit()\r\n\r\n\r\nfunction checkReloadPage(){\r\n  if(typeof window === 'undefined')return\r\n  if(getConfig().publicRuntimeConfig.isDevelopment){\r\n    return\r\n  }\r\n  if(window.location.href.indexOf('qiniu') == -1)return;\r\n  // 帮我检测url中是否包含_htmlRefreshTime的参数\r\n  // 如果没有，则添加_htmlRefresTime的参数，值为当前时间的毫秒数\r\n  const searchParams = new URL(window.location.href).searchParams\r\n  const htmlRefreshTime = searchParams.get('_htmlRefreshTime')\r\n  if (!htmlRefreshTime) {\r\n    const newUrl = new URL(window.location.href)\r\n    newUrl.searchParams.set('_htmlRefreshTime', String(Date.now()))\r\n    window.location.href = newUrl.toString()\r\n    return\r\n  }\r\n\r\n  const refreshTime = Number(htmlRefreshTime)\r\n  if (refreshTime + 2 * 60 * 1000 < Date.now()) {\r\n    const newUrl = new URL(window.location.href)\r\n    newUrl.searchParams.set('_htmlRefreshTime', String(Date.now()))\r\n    window.location.href = newUrl.toString()\r\n  }\r\n}\r\nexport function AppShell({ children }: PropsWithChildren) {\r\n  const router = useRouter();\r\n  const scrollKey = 'scrollPositionInfo'\r\n  const href = window.location.href.split(\"#\")[0]\r\n  const dynamicKey = `dynamic-${href}`\r\n  const s = storeUtils.namespace(dynamicKey);\r\n  let o: Record<string, unknown>|undefined = s.read(dynamicKey)\r\n  if (!o) {\r\n    o = {}\r\n    s.write(dynamicKey, o)\r\n  }\r\n  o = toProxy(o)\r\n  useEffect(() => {\r\n\r\n    router.beforePopState((state) => {\r\n      s.clearAll()\r\n      return true\r\n    })\r\n  })\r\n  useEffect(() => {\r\n    s.write(dynamicKey, o)\r\n    return watchUpdates(o, () => {\r\n      s.write(dynamicKey, o)\r\n    })\r\n  }, [])\r\n  useEffect(() => {\r\n    const info = (s.read(scrollKey) || { x: 0, y: 0 }) as IPageScrollPosition\r\n    // console.log('app shell scroll info info = ', info)\r\n    if (info.x == 0 && info.y == 0) {\r\n      listenScroll()\r\n    } else {\r\n      window.requestAnimationFrame(() => {\r\n        window.scrollTo(info.x, info.y)\r\n        listenScroll()\r\n      })\r\n    }\r\n    function onScroll(e: Event) {\r\n      // console.log('app shell on scroll', { x: window.scrollX, y: window.scrollY })\r\n      s.write(scrollKey, { x: window.scrollX, y: window.scrollY })\r\n    }\r\n    function listenScroll() {\r\n      window.addEventListener('scroll', onScroll)\r\n    }\r\n\r\n    function unsub() {\r\n      window.removeEventListener('scroll', onScroll)\r\n    }\r\n    return unsub\r\n  });\r\n  return (\r\n    <StorePageContext value={s}>\r\n      <StorePageDynamicContext value={o}>\r\n\r\n        <I18nextProvider i18n={i18n}>\r\n          {children}\r\n        </I18nextProvider>\r\n      </StorePageDynamicContext>\r\n    </StorePageContext>\r\n  )\r\n}","import { Box, Button, Container } from '@mui/material';\r\nimport { createContext, PropsWithChildren, useContext, useEffect } from 'react';\r\nimport { ITitleI18nConf, ITitleI18nNsConf, ITitleI18nTitleConf } from '.';\r\nimport { isBuild, isDev, isServer, loadI18nValue, publicRuntimeConfig } from '@fanfanlo';\r\nimport { read } from 'fs';\r\nimport { useTranslation } from '@fanfanlo';\r\n\r\n\r\nfunction Reload(){\r\n  if(!isDev)return <>  </>\r\n  const {t} = useTranslation(\"app-ui/components/page/content\")\r\n  return(\r\n    <Box>\r\n      <Button onClick={() => {window.location.reload()}}>{t(\"PageContent.refresh\")}</Button>\r\n      {new Date().toLocaleString()}\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst ScrollP = createContext({ x: 0, y: 0 });\r\nlet index = 0;\r\nexport default function PageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren) {\r\n  index++;\r\n  const scroll = useContext(ScrollP);\r\n  const clazz = `${Date.now() + Math.random() * Date.now()}`;\r\n  useEffect(()=>{\r\n    async function loadTitle(){\r\n      if(!titleConf)return\r\n      let title = titleConf.title\r\n      if(titleConf.ns){\r\n        title = await loadI18nValue(titleConf.ns, titleConf.key || \"content.title\")\r\n      }\r\n      if(!title)return\r\n      document.title = title\r\n    }\r\n    loadTitle()\r\n  }, [])\r\n  useEffect(() => {\r\n    const container = document.getElementsByClassName(clazz)[0];\r\n    if (!container) return;\r\n    container.scrollTop = scroll.y;\r\n    const onScroll = () => {\r\n      var scrollTop = container.scrollTop;\r\n      scroll.y = scrollTop;\r\n    };\r\n    container.removeEventListener('scroll', onScroll);\r\n    container.addEventListener('scroll', onScroll, { passive: true });\r\n    return () => container.removeEventListener('scroll', onScroll);\r\n  }, [clazz, scroll]);\r\n  return (\r\n\r\n    <Container className={clazz} sx={{ flexGrow: 1, overflow: 'auto', padding: \"0px\" }}>\r\n      <Box>\r\n        {(reload || (reload == undefined)) && <Reload />}\r\n        \r\n        {children}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { PropsWithChildren } from \"react\";\r\nimport PageContent from \"./PageContent\";\r\nimport { ITitleI18nConf } from \".\";\r\nexport default function AndroidPageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren)  {\r\n    return (\r\n        <PageContent titleConf={titleConf} reload={reload}>\r\n            {children}\r\n        </PageContent>\r\n    )\r\n}\r\n","import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { IRequestHandler, request } from \"@fanfanlo\";\n\n/**\n * 获取所有邀请的请求参数\n */\nexport interface IParamsListAllInvitations {\n  // 可以添加分页等参数\n  page?: number;\n  page_size?: number;\n}\n\n/**\n * 用户信息\n */\nexport interface IInvitationUserInfo {\n  user_id: string;\n  display_name: string;\n  avatar_url?: string;\n}\n\n// 邀请状态类型\nexport type InviteStatus = 'pending' | 'accepted' | 'declined' | 'expired' | 'cancelled';\n\n// 邀请记录详情\nexport interface IInvitationDetails {\n  invitation_id: string;\n  user_info: {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n  };\n  status: InviteStatus;\n  message: string;\n  created_at: number;\n  expires_at: number;\n}\n\n/**\n * 获取所有邀请的响应结果\n */\nexport interface IResultListAllInvitations {\n  is_ok: boolean;\n  msg?: string;\n  sent_invitations: IInvitationDetails[];\n  received_invitations: IInvitationDetails[];\n}\n\n/**\n * 响应邀请的请求参数\n */\nexport interface IParamsRespondToInvite {\n  invitation_id: string;\n  action: 'accept' | 'decline' | 'cancel' | 'remove';\n}\n\n/**\n * 获取所有邀请（发送和接收的）\n */\nexport async function tmsEmergencyCallListAllInvitations(\n  opts: IRequestOptions<IParamsListAllInvitations>\n) {\n  return request<IResultListAllInvitations, IParamsListAllInvitations>(\n    tms.TEmc,\n    tms.MEmcListAllInvitations,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n/**\n * 取消或删除邀请\n * @param invitationId 邀请ID\n * @param isReceived 是否是接收的邀请\n * @returns Promise\n */\nexport async function cancelOrRemoveInvitation(\n  invitationId: string,\n  isReceived: boolean\n) {\n  const action = isReceived ? 'remove' : 'cancel';\n  return emergencyCallInvitationService.respondToInvite({\n    params: {\n      invitation_id: invitationId,\n      action\n    }\n  } as any);\n}\n\n/**\n * 响应邀请\n */\nexport async function tmsEmergencyCallRespondToInvite(\n  opts: IRequestOptions<IParamsRespondToInvite>\n) {\n  return request<{ is_ok: boolean; msg?: string }, IParamsRespondToInvite>(\n    tms.TEmc,\n    tms.MEmcRespondToInvite,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出所有接口\nexport const emergencyCallInvitationService = {\n  listAllInvitations: tmsEmergencyCallListAllInvitations,\n  respondToInvite: tmsEmergencyCallRespondToInvite,\n};\n\nexport default emergencyCallInvitationService;\n","'use client';\r\nimport { BottomNavigation, BottomNavigationAction, Box, CssBaseline, Paper, Stack } from '@mui/material';\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport StorefrontIcon from '@mui/icons-material/Storefront';\r\nimport { useRouter } from 'next/router';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ITitleI18nConf } from '../page';\r\nimport AndroidPageContent from '../page/AndroidPageContent';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\n// interface TabInfoType {\r\n//   label: string;\r\n//   value: string;\r\n//   icon: React.ReactNode;\r\n// }\r\n\r\nfunction BottomBar({navBar}:{navBar?:React.ReactNode}) {\r\n  return <Paper\r\n    id=\"bottom-navigation\"\r\n    sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }}\r\n    elevation={3}>\r\n    {/* <NavBar /> */}\r\n    {navBar}\r\n  </Paper>;\r\n}\r\n// function NavBar() {\r\n//   const router = useRouter();\r\n//   const { pathname } = router;\r\n//   const { t } = useTranslation('app-ui/components/tabbar/content');\r\n//   const tabInfoList: TabInfoType[] = [\r\n//     { label: t('content.home'), value: '/', icon: <HomeIcon /> },\r\n//     // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n//     // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n//     { label: t('content.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n//   ];\r\n//   return (\r\n\r\n//     <BottomNavigation showLabels value={pathname}>\r\n//       {tabInfoList.map(e => (\r\n//         <BottomNavigationAction\r\n//           key={e.value}\r\n//           label={e.label}\r\n//           icon={e.icon}\r\n//           data-id={`tabbar-${e.value}`}\r\n//           className={pathname === e.value ? 'Mui-selected' : ''}\r\n//           onClick={() => {\r\n//             if (pathname === e.value) return;\r\n//             router.push(e.value);\r\n//           }}\r\n//         />\r\n//       ))}\r\n//     </BottomNavigation>\r\n//   );\r\n// }\r\n\r\n\r\n// testWatchUpdates()\r\nexport function TabbarContainer({ children, titleConf, navBar }: {titleConf?:ITitleI18nConf, navBar:React.ReactNode} & PropsWithChildren)  {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', height2: '100vh' }}>\r\n      <CssBaseline />\r\n      <Stack direction={\"column\"} spacing={3}\r\n      \r\n      >\r\n        <AndroidPageContent titleConf={titleConf}>\r\n          {children}\r\n        </AndroidPageContent>\r\n        <BottomBar navBar={navBar} />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\n"],"names":["request","tms","tmsEmcInviteContacts","opts","res","TEmc","MEmcInviteContacts","params","gateway","handler","tmsEmcGetContactTypes","MEmcGetContactTypes","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Box","CircularProgress","Autocomplete","useState","useCallback","useEffect","useRef","user","toast","matrixUser","authService","Log","useProxyWatch","fileLogger","isValidIdentity","text","test","is11DigitNumber","InviteContactDialog","open","onClose","onInviteSent","uiLogger","sub","contacts","setContacts","remark","setRemark","callType","setCallType","availableCallTypes","setAvailableCallTypes","console","log","message","setMessage","isLoading","setIsLoading","isTypesLoading","setIsTypesLoading","pendingParams","setPendingParams","executionLock","accessToken","userData","userInfo","loginResponse","access_token","isUserLoggedIn","data","sessionData","global_user_info","userToken","storeData","user_token","current","finalParams","matrix_access_token","type","executeApiCall","error","responseData","printLog","err","shellIsOk","dataIsOk","errorMessage","results","msg","successResults","filter","r","result_code","infoResults","errorResults","length","success","infoMessages","map","Boolean","join","errorMessages","fetchCallTypes","logger","JSON","stringify","types","formattedTypes","id","uuid","name","is_system","defaultType","warn","handleSendInvitation","contactInputs","split","c","trim","contactIdentities","input","push","identity","identityType","appLoggedIn","showLoginDialog","currentAccessToken","apiParams","maxWidth","fullWidth","component","sx","mt","autoFocus","margin","label","multiline","rows","variant","placeholder","value","onChange","e","target","disabled","freeSolo","options","option","event","newValue","inputValue","onInputChange","newInputValue","reason","disablePortal","disableClearable","forcePopupIcon","mb","width","renderInput","InputProps","endAdornment","color","size","ListboxProps","style","maxHeight","overflow","onClick","tmsEmergencyCallListPendingReceivedInvitations","MEmcListPendingReceivedInvitations","emergencyCallPendingInvitationService","listPendingReceivedInvitations","React","Typography","Card","CardContent","CardActions","Avatar","Chip","Alert","Stack","Check","CheckIcon","Close","CloseIcon","AccessTime","AccessTimeIcon","Notifications","NotificationsIcon","formatDistanceToNow","zhCN","emergencyCallInvitationService","AppModelEvent","appModel","PendingInvitationCard","invitation","onRespond","isProcessing","isProcessingAction","setIsProcessingAction","handleRespond","action","isExpired","Date","expires_at","opacity","display","alignItems","src","user_info","avatar_url","alt","display_name","height","mr","toUpperCase","flexGrow","created_at","addSuffix","locale","textAlign","icon","fontSize","fontWeight","justifyContent","pt","startIcon","PendingInvitationsList","setError","invitations","setInvitations","setIsProcessing","loadPendingInvitations","is_ok","handleRespondToInvite","invitationId","respondToInvite","invitation_id","Error","prev","invite","dispatcher","emit","InviteListUpdated","unsubscribe","addListener","flexDirection","p","severity","spacing","Switch","Paper","Collapse","Divider","IconButton","FormControlLabel","Tooltip","FormControl","MenuItem","InputLabel","Select","DragIndicator","DragIndicatorIcon","ExpandLess","Settings","Delete","PlayArrow","Stop","VolumeUp","VolumeUpIcon","Vibration","VibrationIcon","DndContext","closestCenter","KeyboardSensor","PointerSensor","TouchSensor","useSensor","useSensors","arrayMove","SortableContext","sortableKeyboardCoordinates","useSortable","verticalListSortingStrategy","CSS","debounce","autoJsStoreUtils","PRE_ALARM_CONFIG_KEY","defaultSoundResources","SortableActionItem","isPlaying","onUpdate","onRemove","onPreview","onStopPreview","attributes","listeners","setNodeRef","transform","transition","isDragging","Transform","toString","zIndex","ref","elevation","gap","userSelect","cursor","touchAction","duration","parseInt","resourceId","startAdornment","title","sound","PreAlarmConfig2","config","setConfig","expanded","setExpanded","playingSoundId","setPlayingSoundId","debouncedWrite","newConfig","write","sensors","activationConstraint","distance","delay","tolerance","coordinateGetter","loadConfig","storedConfig","read","actionsWithIds","actions","Math","random","substr","enabled","maxWaitDuration","updateConfig","updates","handleToggleEnabled","checked","handleAddAction","newAction","now","handleUpdateAction","handleRemoveAction","handleDragEnd","active","over","oldIndex","findIndex","a","newIndex","handlePreviewSound","handleStopSound","window","SoundManager","previewSound","stopPreview","borderRadius","control","in","border","borderColor","gutterBottom","ml","my","direction","collisionDetection","onDragEnd","items","strategy","Grid","MedicalServices","MedicalIcon","Security","SecurityIcon","Shortcut","ShortcutIcon","autoWebViewJs","ShortcutConfig","medicalName","setMedicalName","securityName","setSecurityName","isCreating","setIsCreating","handleCreateMedicalShortcut","supportScript","javaResultString","supportResult","callScript","script","handleCreateSecurityShortcut","handleCheckSupport","brandScript","guideScript","brandResult","guideResult","supportInfo","handleRequestPermission","undefined","result","startsWith","fallbackScript","fallbackResult","brand","brandName","guideText","fallbackError","pre","whiteSpace","container","item","xs","md","flexWrap","bgcolor","ul","paddingLeft","li","strong","isRealInAndroid","PrivacyDialog","area","url","iframeSrc","setIframeSrc","setOpen","def","agree","disagreeTime","handleMessage","iframeRef","source","contentWindow","sender","s","addEventListener","removeEventListener","PaperProps","aria-label","position","right","top","theme","palette","grey","padding","iframe","ListenShowPrivacyContent","SensorMonitor","threshold","setThreshold","isMonitoring","setIsMonitoring","thresholdValue","parseFloat","readIsMonitoring","handleSetThreshold","isNaN","alert","handleToggleMonitoring","marginBottom","TestEmergencyCall","fileLog","stopAllHandler","stopEmergencyMethods","methodError","Snackbar","VolumeOff","VolumeOffIcon","NotificationsOff","VibrationOffIcon","StopIcon","EmergencyAudioControl","loading","setLoading","isAndroidWebView","callAndroidMethod","methodName","description","stopPreAlarmVibrationAndSound","stopEmergencyLoopAudio","stopContactAlertVibrationAndSound","stopAllEmergencyAudioAndVibration","handleCloseMessage","autoHideDuration","anchorOrigin","vertical","horizontal","Fab","EmergencyStopButton","handleStopAllEmergencyAudio","bl","placement","bottom","AppShell","TabbarContainer","IMOpenPageLink","Grid2","NavBar","Link","MeetingList","Content","openInviteDialog","setOpenInviteDialog","maxItemLength","href","textDecoration","Home","titleConf","ns","key","navBar","useRouter","useTranslation","HomeIcon","SettingsIcon","BottomNavigation","BottomNavigationAction","router","pathname","t","tabInfoList","showLabels","data-id","className","initReactI18next","LanguageDetector","Backend","i18next","isServer","fileMapUtils","fileDateVersion","i18nLogger","windowHref","u","URL","location","parent","origin","backendOptions","loadPath","lngs","namespaces","pause","lng","ps","splice","getFile","parse","languages","l","print","backend","init","i18n","on","i18nInit","_fileDateVersion","use","load","fallbackLng","partialBundledLanguages","debug","interpolation","escapeValue","detection","caches","namespace","loaded","arguments","createContext","storeUtils","create","StorePageContext","StorePageDynamicContext","toProxy","watchUpdates","getConfig","I18nextProvider","checkReloadPage","publicRuntimeConfig","isDevelopment","indexOf","searchParams","htmlRefreshTime","get","newUrl","set","String","refreshTime","Number","children","scrollKey","dynamicKey","o","beforePopState","state","clearAll","info","x","y","listenScroll","requestAnimationFrame","scrollTo","onScroll","scrollX","scrollY","unsub","Container","useContext","isDev","loadI18nValue","Reload","reload","toLocaleString","ScrollP","index","PageContent","scroll","clazz","loadTitle","document","getElementsByClassName","scrollTop","passive","AndroidPageContent","tmsEmergencyCallListAllInvitations","MEmcListAllInvitations","cancelOrRemoveInvitation","isReceived","tmsEmergencyCallRespondToInvite","MEmcRespondToInvite","listAllInvitations","CssBaseline","BottomBar","left","height2"],"sourceRoot":"","ignoreList":[5,17]}