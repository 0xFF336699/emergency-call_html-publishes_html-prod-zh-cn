{"version":3,"file":"static/chunks/632-2fecc3db2b2b945b.js","mappings":"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","sources":["webpack://_N_E/../../libs/im/livekit/src/livekit-meeting/MeetingRoom5.tsx","webpack://_N_E/../../libs/app/model/src/remote/emc/inviteContacts.ts","webpack://_N_E/../../libs/app/model/src/remote/emc/tmsEmcGetContactTypes.ts","webpack://_N_E/./src/components/dialogs/InviteContactDialog.tsx","webpack://_N_E/./src/components/jpush/IsInitialized.tsx","webpack://_N_E/../../libs/app/model/src/remote/emergency-call/list_pending_received_invitations.ts","webpack://_N_E/./src/components/PendingInvitationsList/PendingInvitationsList.tsx","webpack://_N_E/../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/lodash.js","webpack://_N_E/./src/components/pre-alarm-config2/index.tsx","webpack://_N_E/./src/components/shortcut-config/ShortcutConfig.tsx","webpack://_N_E/./src/components/privacies/PrivacyDialog.tsx","webpack://_N_E/./src/components/privacies/ListenShowPrivacyContent.tsx","webpack://_N_E/./src/components/sensor-monitor/SensorMonitor.tsx","webpack://_N_E/./src/components/test/TestEmergencyCall.tsx","webpack://_N_E/./src/pages/home/index.tsx","webpack://_N_E/./src/components/navbar/NavBar.tsx","webpack://_N_E/../../node_modules/.pnpm/react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3/node_modules/react-i18next/dist/es/index.js","webpack://_N_E/../../libs/fanfanlo/src/i18n/i18n-init.ts","webpack://_N_E/../../libs/fanfanlo/src/storage/store-page-context.tsx","webpack://_N_E/../../libs/app/ui/src/components/app/AppShell.tsx","webpack://_N_E/../../libs/app/model/src/remote/event-call/listAvailableMeetings.ts","webpack://_N_E/./src/services/meetingService.ts","webpack://_N_E/./src/components/meeting-list/MeetingList.tsx","webpack://_N_E/../../libs/app/ui/src/components/page/PageContent.tsx","webpack://_N_E/../../libs/app/ui/src/components/page/AndroidPageContent.tsx","webpack://_N_E/../../libs/app/model/src/remote/emergency-call/list_all_invitations.ts","webpack://_N_E/../../libs/app/ui/src/components/tabbar/Tabbar.tsx"],"sourcesContent":["import React, {\r\n    useCallback,\r\n    useEffect,\r\n    useRef,\r\n    useState,\r\n    forwardRef,\r\n    ForwardedRef\r\n} from 'react';\r\nimport {\r\n    Room,\r\n    RoomEvent,\r\n    Participant,\r\n    RemoteParticipant,\r\n    RemoteTrack,\r\n    Track,\r\n    LocalTrack,\r\n    LocalVideoTrack,\r\n    LocalAudioTrack,\r\n    createLocalAudioTrack,\r\n    createLocalVideoTrack,\r\n    VideoPreset,\r\n    VideoPresets,\r\n    TrackPublication,\r\n    LocalParticipant\r\n} from 'livekit-client';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    Alert,\r\n    IconButton,\r\n    CircularProgress,\r\n    Stack,\r\n    SxProps,\r\n    Theme\r\n} from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport {\r\n    Mic as MicIcon,\r\n    MicOff as MicOffIcon,\r\n    ScreenShare as ScreenShareIcon,\r\n    StopScreenShare as StopScreenShareIcon,\r\n    Videocam as VideoIcon,\r\n    VideocamOff as VideoOffIcon,\r\n    CallEnd as CallEndIcon,\r\n    Settings as SettingsIcon,\r\n    VolumeUp as VolumeUpIcon,\r\n    VolumeOff as VolumeOffIcon,\r\n    Fullscreen as FullscreenIcon,\r\n    FullscreenExit as FullscreenExitIcon,\r\n    Refresh as RefreshIcon,\r\n    Visibility as VisibilityIcon,\r\n    VisibilityOff as VisibilityOffIcon\r\n} from '@mui/icons-material';\r\nimport { Log } from '@fanfanlo';\r\n// import { mainModel } from '@src/libs/mc/main/MainModel';\r\nimport { MeetingRoomProps, VideoPresetConfig, ExtendedParticipantState, ParticipantState } from './meeting-room.intf';\r\n\r\n// 日志记录器\r\nconst logger = new Log(false, 'livekit-meeting.MeetingRoom');\r\nconst uiLogger = logger.sub(false, 'MeetingRoom_ui');\r\n\r\n// 视频预设\r\nconst VIDEO_PRESET: VideoPresetConfig = {\r\n    width: 1280,\r\n    height: 720,\r\n    // @ts-ignore - frameRate is used by LiveKit internally\r\n    frameRate: 24,\r\n    maxBitrate: 3000 * 1000, // 3Mbps\r\n};\r\n\r\n// 类型定义已移至 meetint-room.intf.ts\r\n\r\n\r\n// function getTokenEndpoint(): string {\r\n//     if (!mainModel.appConfig?.livekit?.jwt) {\r\n//         throw new Error('LiveKit JWT endpoint is not configured');\r\n//     }\r\n//     return `${mainModel.appConfig.livekit.jwt}/token`;\r\n// }\r\n// 主组件实现\r\nfunction MeetingRoomComponent(\r\n    {\r\n        livekitConfig,\r\n        roomName,\r\n        userName,\r\n        onDisconnect,\r\n        onError,\r\n        className = '',\r\n        style,\r\n        sx,\r\n        directly = false,\r\n    }: MeetingRoomProps,\r\n    ref: ForwardedRef<HTMLDivElement>\r\n) {\r\n    // 全局音视频控制状态\r\n    const [globalMediaState, setGlobalMediaState] = useState<{\r\n        isAudioEnabled: boolean;\r\n        isVideoEnabled: boolean;\r\n    }>({\r\n        isAudioEnabled: true,\r\n        isVideoEnabled: true,\r\n    });\r\n\r\n    // 远程参与者媒体订阅状态\r\n    const [remoteMediaState, setRemoteMediaState] = useState({\r\n        isAudioSubscribed: true,\r\n        isVideoSubscribed: true\r\n    });\r\n\r\n    // 切换全局远程音频订阅状态\r\n    const toggleRemoteAudio = useCallback(() => {\r\n        const newState = !remoteMediaState.isAudioSubscribed;\r\n        logger.log('Toggling remote audio subscription to:', newState);\r\n        \r\n        // 更新状态\r\n        setRemoteMediaState(prev => {\r\n            logger.log('Remote audio subscription state changed:', { \r\n                from: prev.isAudioSubscribed, \r\n                to: newState \r\n            });\r\n            return {\r\n                ...prev,\r\n                isAudioSubscribed: newState\r\n            };\r\n        });\r\n        \r\n        // 更新所有远程参与者的音频订阅状态\r\n        if (roomRef.current) {\r\n            const participantCount = roomRef.current.remoteParticipants.size;\r\n            logger.log(`Updating audio subscription for ${participantCount} remote participants`);\r\n            \r\n            roomRef.current.remoteParticipants.forEach((participant, identity) => {\r\n                let audioTrackCount = 0;\r\n                participant.trackPublications.forEach(publication => {\r\n                    if (publication.kind === Track.Kind.Audio) {\r\n                        audioTrackCount++;\r\n                        logger.log(`Setting audio subscription for ${identity} to ${newState}`, {\r\n                            trackSid: publication.trackSid,\r\n                            isSubscribed: publication.isSubscribed\r\n                        });\r\n                        publication.setSubscribed(newState);\r\n                    }\r\n                });\r\n                logger.log(`Processed ${audioTrackCount} audio tracks for participant: ${identity}`);\r\n            });\r\n        }\r\n    }, [remoteMediaState.isAudioSubscribed]);\r\n\r\n    // 切换全局远程视频订阅状态\r\n    const toggleRemoteVideo = useCallback(() => {\r\n        const newState = !remoteMediaState.isVideoSubscribed;\r\n        logger.log('Toggling remote video subscription to:', newState);\r\n        \r\n        // 更新状态\r\n        setRemoteMediaState(prev => {\r\n            logger.log('Remote video subscription state changed:', { \r\n                from: prev.isVideoSubscribed, \r\n                to: newState \r\n            });\r\n            return {\r\n                ...prev,\r\n                isVideoSubscribed: newState\r\n            };\r\n        });\r\n        \r\n        // 更新所有远程参与者的视频订阅状态\r\n        if (roomRef.current) {\r\n            const participantCount = roomRef.current.remoteParticipants.size;\r\n            logger.log(`Updating video subscription for ${participantCount} remote participants`);\r\n            \r\n            roomRef.current.remoteParticipants.forEach((participant, identity) => {\r\n                let videoTrackCount = 0;\r\n                participant.trackPublications.forEach(publication => {\r\n                    if (publication.kind === Track.Kind.Video) {\r\n                        videoTrackCount++;\r\n                        logger.log(`Setting video subscription for ${identity} to ${newState}`, {\r\n                            trackSid: publication.trackSid,\r\n                            isSubscribed: publication.isSubscribed\r\n                        });\r\n                        publication.setSubscribed(newState);\r\n                    }\r\n                });\r\n                logger.log(`Processed ${videoTrackCount} video tracks for participant: ${identity}`);\r\n            });\r\n        }\r\n    }, [remoteMediaState.isVideoSubscribed]);\r\n\r\n    // 处理参与者连接\r\n    const handleParticipantConnected = useCallback((participant: RemoteParticipant) => {\r\n        logger.log('Participant connected:', participant.identity, {\r\n            audioSubscribed: remoteMediaState.isAudioSubscribed,\r\n            videoSubscribed: remoteMediaState.isVideoSubscribed\r\n        });\r\n        \r\n        // 应用当前的全局订阅设置\r\n        let audioTracksProcessed = 0;\r\n        let videoTracksProcessed = 0;\r\n        \r\n        participant.trackPublications.forEach(publication => {\r\n            if (publication.kind === Track.Kind.Audio || publication.kind === Track.Kind.Video) {\r\n                const isAudio = publication.kind === Track.Kind.Audio;\r\n                const shouldSubscribe = isAudio ? \r\n                    remoteMediaState.isAudioSubscribed : \r\n                    remoteMediaState.isVideoSubscribed;\r\n                \r\n                logger.log(`Setting ${isAudio ? 'audio' : 'video'} subscription for new participant ${participant.identity} to ${shouldSubscribe}`, {\r\n                    trackSid: publication.trackSid,\r\n                    isSubscribed: publication.isSubscribed\r\n                });\r\n                \r\n                publication.setSubscribed(shouldSubscribe);\r\n                \r\n                if (isAudio) audioTracksProcessed++;\r\n                else videoTracksProcessed++;\r\n            }\r\n        });\r\n        \r\n        logger.log(`Processed tracks for new participant ${participant.identity}:`, {\r\n            audioTracks: audioTracksProcessed,\r\n            videoTracks: videoTracksProcessed\r\n        });\r\n        \r\n        // 添加参与者到状态\r\n        setParticipants(prev => {\r\n            const exists = prev.some(p => p.identity === participant.identity);\r\n            if (!exists) {\r\n                logger.log('Adding participant to state:', participant.identity);\r\n                return [...prev, participant];\r\n            }\r\n            logger.log('Participant already in state, not adding again:', participant.identity);\r\n            return prev;\r\n        });\r\n    }, [remoteMediaState]);\r\n\r\n    // Refs\r\n    const roomRef = useRef<Room | null>(null);\r\n    const localTracksRef = useRef<LocalTrack[]>([]);\r\n    const videoElements = useRef<Record<string, HTMLVideoElement>>({});\r\n    const audioElements = useRef<Record<string, HTMLAudioElement>>({});\r\n    const [participantStates, setParticipantStates] = useState<Record<string, ExtendedParticipantState>>({});\r\n    const isUnmountedRef = useRef(false);\r\n\r\n    // State\r\n    const [isConnecting, setIsConnecting] = useState(false);\r\n    const [hasConnected, setHasConnected] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [isMuted, setIsMuted] = useState(false);\r\n    const [isVideoEnabled, setIsVideoEnabled] = useState(true);\r\n    const [participants, setParticipants] = useState<RemoteParticipant[]>([]);\r\n\r\n    // 获取 token\r\n    const fetchToken = useCallback(async (roomName: string, identity: string) => {\r\n        try {\r\n            const response = await fetch(`${livekitConfig.jwt}/token`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    room_name: roomName,\r\n                    identity,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('获取 token 失败');\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data.token;\r\n        } catch (error) {\r\n            uiLogger.error('获取 token 失败:', error);\r\n            throw error;\r\n        }\r\n    }, []);\r\n\r\n    // 连接到房间\r\n    const connectToRoom = useCallback(async () => {\r\n        if (isConnecting || hasConnected) return;\r\n\r\n        setIsConnecting(true);\r\n        setError(null);\r\n\r\n        try {\r\n            // 1. 获取 token\r\n            const token = await fetchToken(roomName, userName);\r\n            uiLogger.log('token:', token);\r\n\r\n            // 2. 创建本地轨道\r\n            const { audioTrack, videoTrack } = await createLocalTracks();\r\n            localTracksRef.current = [audioTrack, videoTrack];\r\n            uiLogger.log('audioTrack:', audioTrack);\r\n            uiLogger.log('videoTrack:', videoTrack);\r\n            // 3. 创建房间连接\r\n            const room = new Room({\r\n                adaptiveStream: true,\r\n                dynacast: true,\r\n                videoCaptureDefaults: {\r\n                    resolution: VIDEO_PRESET,\r\n                },\r\n                // @ts-ignore - publishDefaults is a valid option\r\n                publishDefaults: {\r\n                    dtx: true,\r\n                    red: true,\r\n                    forceStereo: false,\r\n                    simulcast: true,\r\n                } as any, // Type assertion to bypass type checking for now\r\n            });\r\n            uiLogger.log('room:', room);\r\n            // 4. 设置事件监听\r\n            setupRoomListeners(room);\r\n\r\n            // 5. 连接到房间\r\n            await room.connect(\r\n                livekitConfig.wsUrl,\r\n                token,\r\n                {\r\n                    autoSubscribe: true,\r\n                }\r\n            );\r\n            uiLogger.log('room connected');\r\n            // 6. 发布本地轨道\r\n            try {\r\n                await Promise.all([\r\n                    room.localParticipant.publishTrack(audioTrack),\r\n                    room.localParticipant.publishTrack(videoTrack)\r\n                ]);\r\n            } catch (publishError) {\r\n                uiLogger.error('发布轨道失败:', publishError);\r\n                // 即使发布失败也继续，因为可能已经有其他参与者发布了相同的轨道\r\n            }\r\n\r\n            // 7. 更新引用和状态\r\n            roomRef.current = room;\r\n            setHasConnected(true);\r\n\r\n            // 8. 添加现有远程参与者到状态\r\n            const remoteParticipants = Array.from(room.remoteParticipants.values());\r\n            setParticipants(remoteParticipants);\r\n\r\n            // 9. 更新本地参与者状态\r\n            updateParticipantState(room.localParticipant.identity, {\r\n                isAudioEnabled: true,\r\n                isVideoEnabled: true,\r\n                audioTrack,\r\n                videoTrack,\r\n            });\r\n\r\n            // 10. 为现有远程参与者设置轨道\r\n            remoteParticipants.forEach(participant => {\r\n                // 初始化远程参与者状态\r\n                initParticipantState(participant);\r\n                uiLogger.log('已初始化远程参与者状态:', participant.identity);\r\n                \r\n                // 使用 getTrackPublications 获取所有轨道发布\r\n                participant.getTrackPublications().forEach(publication => {\r\n                    if (publication.track && publication.track instanceof RemoteTrack) {\r\n                        handleTrackSubscribed(publication.track, publication, participant);\r\n                    }\r\n                });\r\n            });\r\n            \r\n            // 初始化本地参与者状态\r\n            if (room.localParticipant) {\r\n                initParticipantState(room.localParticipant);\r\n                uiLogger.log('已初始化本地参与者状态:', room.localParticipant.identity);\r\n            }\r\n\r\n            uiLogger.log('成功加入会议');\r\n\r\n        } catch (error) {\r\n            uiLogger.error('连接房间失败啦:', error);\r\n            setError('加入会议失败，请检查网络和权限设置');\r\n            // 发生错误时清理资源\r\n            cleanupTracks(localTracksRef.current);\r\n            localTracksRef.current = [];\r\n\r\n            if (roomRef.current) {\r\n                try {\r\n                    await roomRef.current.disconnect();\r\n                } catch (e) {\r\n                    uiLogger.error('断开连接时出错:', e);\r\n                }\r\n                roomRef.current = null;\r\n            }\r\n        } finally {\r\n            setIsConnecting(false);\r\n        }\r\n    }, [roomName, userName, isConnecting, hasConnected, fetchToken]);\r\n\r\n    // 创建本地音视频轨道\r\n    const createLocalTracks = useCallback(async () => {\r\n        try {\r\n            const [audioTrack, videoTrack] = await Promise.all([\r\n                createLocalAudioTrack({\r\n                    echoCancellation: true,\r\n                    noiseSuppression: true,\r\n                    autoGainControl: true,\r\n                }),\r\n                createLocalVideoTrack({\r\n                    resolution: {\r\n                        width: 1280,\r\n                        height: 720,\r\n                        frameRate: 24,\r\n                    },\r\n                }),\r\n            ]);\r\n            return { audioTrack, videoTrack };\r\n        } catch (error) {\r\n            uiLogger.error('创建本地轨道失败:', error);\r\n            throw error;\r\n        }\r\n    }, []);\r\n\r\n    // 清理轨道\r\n    const cleanupTracks = useCallback((tracks: LocalTrack[]) => {\r\n        tracks.forEach(track => {\r\n            track.stop();\r\n            track.detach();\r\n        });\r\n    }, []);\r\n\r\n    // 跟踪已处理的轨道元素\r\n    const trackElementsRef = useRef<Record<string, boolean>>({});\r\n    const videoElementsRef = useRef<Record<string, HTMLVideoElement>>({});\r\n    const audioElementsRef = useRef<Record<string, HTMLAudioElement>>({});\r\n\r\n    // 更新参与者状态\r\n    const updateParticipantState = useCallback((identity: string, state: Partial<ParticipantState>) => {\r\n        setParticipantStates(prev => ({\r\n            ...prev,\r\n            [identity]: {\r\n                ...(prev[identity] || {\r\n                    isAudioEnabled: true,\r\n                    isVideoEnabled: true,\r\n                    isAudioEnabledGlobal: true,\r\n                    isVideoEnabledGlobal: true,\r\n                }),\r\n                ...state,\r\n            },\r\n        }));\r\n    }, []);\r\n    // 处理轨道订阅\r\n    const handleTrackSubscribed = useCallback((\r\n        track: RemoteTrack,\r\n        publication: TrackPublication,\r\n        participant: Participant\r\n    ) => {\r\n        if (!track) return () => { };\r\n\r\n        const { identity } = participant;\r\n        const isVideoTrack = track.kind === Track.Kind.Video;\r\n\r\n        uiLogger.log(`处理 ${track.kind} 轨道订阅:`, identity, track);\r\n\r\n        // 更新轨道状态的函数\r\n        const updateTrackState = () => {\r\n            const isMuted = track.isMuted;\r\n            const stateUpdate: Partial<ParticipantState> = {};\r\n\r\n            if (track.kind === Track.Kind.Audio) {\r\n                stateUpdate.isAudioEnabled = !isMuted;\r\n            } else if (track.kind === Track.Kind.Video) {\r\n                stateUpdate.isVideoEnabled = !isMuted;\r\n            }\r\n\r\n            updateParticipantState(identity, stateUpdate);\r\n\r\n            // 强制触发重新渲染以确保 ParticipantVideo 组件更新\r\n            if (isVideoTrack) {\r\n                setParticipants(prev => [...prev]);\r\n            }\r\n        };\r\n\r\n        // 监听轨道静音/取消静音事件\r\n        track.on('muted', updateTrackState);\r\n        track.on('unmuted', updateTrackState);\r\n\r\n        // 初始状态更新\r\n        updateTrackState();\r\n\r\n        // 强制更新参与者列表以触发重新渲染\r\n        // 这确保了即使没有状态变化，组件也会检查新的轨道\r\n        setParticipants(prev => {\r\n            const participantExists = prev.some(p => p.identity === identity);\r\n            if (!participantExists) {\r\n                return [...prev, participant as RemoteParticipant];\r\n            }\r\n            return [...prev];\r\n        });\r\n\r\n\r\n        // 清理函数\r\n        return () => {\r\n            track.off('muted', updateTrackState);\r\n            track.off('unmuted', updateTrackState);\r\n        };\r\n    }, [updateParticipantState]);\r\n\r\n    // 设置房间事件监听\r\n    const setupRoomListeners = useCallback((room: Room) => {\r\n        // 保存所有事件处理函数引用，以便后续清理\r\n        type EventHandler = (...args: any[]) => void;\r\n        const eventHandlers: Record<string, EventHandler> = {\r\n            // 处理远程参与者连接\r\n            participantConnected: (participant: RemoteParticipant) => {\r\n                if (!(participant instanceof RemoteParticipant)) return;\r\n\r\n                uiLogger.log('远程参与者已连接:', participant.identity);\r\n\r\n                // 添加新参与者到状态（使用函数式更新确保不重复添加）\r\n                setParticipants(prev => {\r\n                    // 如果已经存在该参与者，则返回原数组\r\n                    if (prev.some(p => p.identity === participant.identity)) {\r\n                        return prev;\r\n                    }\r\n                    return [...prev, participant];\r\n                });\r\n\r\n                // 监听参与者的轨道发布\r\n                const handleTrackPublished = (publication: TrackPublication) => {\r\n                    uiLogger.log('远程参与者发布轨道:', publication.kind, participant.identity);\r\n                    if (publication.track) {\r\n                        handleTrackSubscribed(publication.track as RemoteTrack, publication, participant);\r\n                    } else {\r\n                        publication.once('subscribed', (track: RemoteTrack) => {\r\n                            handleTrackSubscribed(track, publication, participant);\r\n                        });\r\n                    }\r\n                };\r\n\r\n                // 添加轨道发布监听\r\n                participant.on('trackPublished', handleTrackPublished);\r\n\r\n                // 处理已经发布的轨道\r\n                participant.trackPublications.forEach(publication => {\r\n                    if (publication.track) {\r\n                        handleTrackSubscribed(publication.track as RemoteTrack, publication, participant);\r\n                    }\r\n                });\r\n\r\n                // 返回清理函数\r\n                return () => {\r\n                    participant.off('trackPublished', handleTrackPublished);\r\n                };\r\n            },\r\n\r\n            // 处理参与者断开连接\r\n            participantDisconnected: (participant: RemoteParticipant) => {\r\n                uiLogger.log('远程参与者已断开连接:', participant.identity);\r\n                setParticipants(prev => {\r\n                    const newParticipants = prev.filter(p => p.identity !== participant.identity);\r\n                    uiLogger.log('更新后的参与者列表:', newParticipants.map(p => p.identity));\r\n                    return newParticipants;\r\n                });\r\n            },\r\n\r\n            // 处理轨道订阅\r\n            trackSubscribed: (track: RemoteTrack, publication: TrackPublication, participant: Participant) => {\r\n                if (!track) return;\r\n                uiLogger.log('轨道订阅成功:', track.kind, participant.identity);\r\n                // 处理远程轨道订阅\r\n                handleTrackSubscribed(track, publication, participant as RemoteParticipant);\r\n            },\r\n\r\n            disconnected: (reason?: any) => {\r\n                const reasonStr = reason?.toString?.() || '未知原因';\r\n                uiLogger.log('已从房间断开连接，原因:', reasonStr);\r\n                // 更新状态但不调用 handleDisconnect，因为可能是我们主动断开的\r\n                setHasConnected(false);\r\n                setParticipants([]);\r\n                setError(null);\r\n            },\r\n\r\n            reconnecting: () => {\r\n                uiLogger.log('正在重新连接到房间...');\r\n                setError('正在重新连接...');\r\n            },\r\n\r\n            reconnected: () => {\r\n                uiLogger.log('已重新连接到房间');\r\n                setError(null);\r\n            }\r\n        };\r\n\r\n        // 添加事件监听\r\n        room\r\n            .on(RoomEvent.Disconnected, eventHandlers.disconnected)\r\n            .on(RoomEvent.Reconnecting, eventHandlers.reconnecting)\r\n            .on(RoomEvent.Reconnected, eventHandlers.reconnected)\r\n            .on(RoomEvent.ParticipantConnected, handleParticipantConnected) // 使用新的处理函数\r\n            .on(RoomEvent.ParticipantDisconnected, eventHandlers.participantDisconnected)\r\n            .on(RoomEvent.TrackSubscribed, eventHandlers.trackSubscribed);\r\n\r\n        // 返回清理函数\r\n        return () => {\r\n            if (!room) return;\r\n            room\r\n                .off(RoomEvent.Disconnected, eventHandlers.disconnected)\r\n                .off(RoomEvent.Reconnecting, eventHandlers.reconnecting)\r\n                .off(RoomEvent.Reconnected, eventHandlers.reconnected)\r\n                .off(RoomEvent.ParticipantConnected, eventHandlers.participantConnected)\r\n                .off(RoomEvent.ParticipantDisconnected, eventHandlers.participantDisconnected)\r\n                .off(RoomEvent.TrackSubscribed, eventHandlers.trackSubscribed);\r\n\r\n            // 确保返回 void\r\n            return undefined;\r\n        };\r\n    }, [handleTrackSubscribed]);\r\n\r\n    // 离开会议\r\n    const leaveMeeting = useCallback(async () => {\r\n        uiLogger.log('正在离开会议...');\r\n        try {\r\n            // 停止所有本地轨道\r\n            cleanupTracks(localTracksRef.current);\r\n\r\n            // 断开房间连接\r\n            if (roomRef.current) {\r\n                await roomRef.current.disconnect();\r\n                roomRef.current = null;\r\n            }\r\n\r\n            // 更新状态\r\n            setHasConnected(false);\r\n            setParticipants([]);\r\n            setError(null);\r\n\r\n            // 清除所有媒体元素\r\n            Object.values(videoElements.current).forEach(el => el && el.remove());\r\n            Object.values(audioElements.current).forEach(el => el && el.remove());\r\n            videoElements.current = {};\r\n            audioElements.current = {};\r\n\r\n            // 调用断开连接回调\r\n            if (onDisconnect) {\r\n                onDisconnect();\r\n            }\r\n\r\n            uiLogger.log('已成功离开会议');\r\n        } catch (error) {\r\n            uiLogger.error('离开会议时出错:', error);\r\n            setError('离开会议时出错，请重试');\r\n        }\r\n    }, [onDisconnect]);\r\n\r\n    // 清理函数\r\n    const cleanup = useCallback(async (isUnmounting = false) => {\r\n        // 如果是组件卸载，设置卸载标志\r\n        if (isUnmounting) {\r\n            isUnmountedRef.current = true;\r\n        }\r\n\r\n        uiLogger.log('执行清理...');\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const audioTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Audio\r\n        ) as LocalAudioTrack | undefined;\r\n        const videoTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Video\r\n        ) as LocalVideoTrack | undefined;\r\n\r\n        try {\r\n            if (audioTrack) {\r\n                await audioTrack.stop();\r\n            }\r\n            if (videoTrack) {\r\n                await videoTrack.stop();\r\n            }\r\n        } catch (error) {\r\n            uiLogger.error('停止轨道失败:', error);\r\n        }\r\n\r\n        // 清理轨道\r\n        cleanupTracks(localTracksRef.current);\r\n        localTracksRef.current = [];\r\n\r\n        // 清理房间\r\n        if (roomRef.current) {\r\n            roomRef.current.disconnect();\r\n            roomRef.current = null;\r\n        }\r\n\r\n        // 清理状态\r\n        setHasConnected(false);\r\n        setParticipants([]);\r\n        setParticipantStates({});\r\n    }, []);\r\n\r\n    // 更新全局媒体状态\r\n    const updateGlobalMediaState = useCallback((audioEnabled: boolean, videoEnabled: boolean) => {\r\n        setGlobalMediaState(prev => ({\r\n            ...prev,\r\n            isAudioEnabled: audioEnabled,\r\n            isVideoEnabled: videoEnabled,\r\n        }));\r\n    }, []);\r\n\r\n    // 切换静音状态（全局控制）\r\n    const toggleMute = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const audioTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Audio\r\n        ) as LocalAudioTrack | undefined;\r\n\r\n        if (!audioTrack) return;\r\n\r\n        try {\r\n            // 全局按钮基于全局状态进行切换\r\n            const newGlobalAudioState = !globalMediaState.isAudioEnabled;\r\n\r\n            // 同步更新本地麦克风的物理状态\r\n            if (newGlobalAudioState) {\r\n                await audioTrack.unmute();\r\n            } else {\r\n                await audioTrack.mute();\r\n            }\r\n\r\n            // 更新本地UI状态\r\n            setIsMuted(!newGlobalAudioState);\r\n            updateParticipantState(localParticipant.identity, { isAudioEnabled: newGlobalAudioState });\r\n\r\n            // 更新全局音频状态，这将影响所有参与者的有效状态\r\n            updateGlobalMediaState(newGlobalAudioState, globalMediaState.isVideoEnabled);\r\n        } catch (error) {\r\n            uiLogger.error('切换静音状态失败:', error);\r\n            setError('切换麦克风状态失败');\r\n        }\r\n    }, [globalMediaState, updateParticipantState, updateGlobalMediaState]);\r\n\r\n    // 切换视频状态（全局控制）\r\n    const toggleVideo = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const videoTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Video\r\n        ) as LocalVideoTrack | undefined;\r\n\r\n        if (!videoTrack) return;\r\n\r\n        try {\r\n            // 全局按钮基于全局状态进行切换\r\n            const newGlobalVideoState = !globalMediaState.isVideoEnabled;\r\n\r\n            // 同步更新本地摄像头的物理状态\r\n            if (newGlobalVideoState) {\r\n                await videoTrack.unmute();\r\n            } else {\r\n                await videoTrack.mute();\r\n            }\r\n\r\n            // 更新本地UI状态\r\n            setIsVideoEnabled(newGlobalVideoState);\r\n            updateParticipantState(localParticipant.identity, { isVideoEnabled: newGlobalVideoState });\r\n\r\n            // 更新全局视频状态，这将影响所有参与者的有效状态\r\n            updateGlobalMediaState(globalMediaState.isAudioEnabled, newGlobalVideoState);\r\n        } catch (error) {\r\n            uiLogger.error('切换视频状态失败:', error);\r\n            setError('切换摄像头状态失败');\r\n        }\r\n    }, [globalMediaState, updateParticipantState, updateGlobalMediaState]);\r\n\r\n    // 切换本地静音状态（仅本地tile）\r\n    const handleLocalMuteToggle = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const audioTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Audio\r\n        ) as LocalAudioTrack | undefined;\r\n\r\n        if (!audioTrack) return;\r\n\r\n        try {\r\n            const newMutedState = !isMuted;\r\n            if (newMutedState) {\r\n                await audioTrack.mute();\r\n            } else {\r\n                await audioTrack.unmute();\r\n            }\r\n\r\n            setIsMuted(newMutedState);\r\n            updateParticipantState(localParticipant.identity, { isAudioEnabled: !newMutedState });\r\n        } catch (error) {\r\n            uiLogger.error('切换本地静音状态失败:', error);\r\n            setError('切换麦克风状态失败');\r\n        }\r\n    }, [isMuted, updateParticipantState]);\r\n\r\n    // 切换本地视频状态（仅本地tile）\r\n    const handleLocalVideoToggle = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const videoTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Video\r\n        ) as LocalVideoTrack | undefined;\r\n\r\n        if (!videoTrack) return;\r\n\r\n        try {\r\n            const newVideoState = !isVideoEnabled;\r\n            if (newVideoState) {\r\n                await videoTrack.unmute();\r\n            } else {\r\n                await videoTrack.mute();\r\n            }\r\n\r\n            setIsVideoEnabled(newVideoState);\r\n            updateParticipantState(localParticipant.identity, { isVideoEnabled: newVideoState });\r\n        } catch (error) {\r\n            uiLogger.error('切换本地视频状态失败:', error);\r\n            setError('切换摄像头状态失败');\r\n        }\r\n    }, [isVideoEnabled, updateParticipantState]);\r\n\r\n    // 组件卸载时清理资源\r\n    useEffect(() => {\r\n        return () => {\r\n            // 清理资源\r\n            cleanup(true);\r\n        };\r\n    }, []);\r\n\r\n    // 获取参与者状态\r\n    const getParticipantState = useCallback((identity: string): ParticipantState => {\r\n        return participantStates[identity] || {\r\n            isAudioEnabled: true,\r\n            isVideoEnabled: true,\r\n            isAudioEnabledGlobal: true,\r\n            isVideoEnabledGlobal: true,\r\n        };\r\n    }, [participantStates]);\r\n\r\n    // 初始化参与者状态\r\n    const initParticipantState = useCallback((participant: Participant) => {\r\n        const state = getParticipantState(participant.identity);\r\n\r\n        // 更新音频状态\r\n        const audioTrack = participant.getTrackPublications().find(\r\n            pub => pub.kind === Track.Kind.Audio\r\n        )?.track as LocalAudioTrack | undefined;\r\n\r\n        // 更新视频状态\r\n        const videoTrack = participant.getTrackPublications().find(\r\n            pub => pub.kind === Track.Kind.Video\r\n        )?.track as LocalVideoTrack | undefined;\r\n\r\n        updateParticipantState(participant.identity, {\r\n            ...state,\r\n            isAudioEnabled: audioTrack ? !audioTrack.isMuted : false,\r\n            isVideoEnabled: videoTrack ? !videoTrack.isMuted : false\r\n        });\r\n    }, [getParticipantState, updateParticipantState]);\r\n\r\n    // 切换参与者的音频状态\r\n    const handleToggleAudio = useCallback((participant: Participant) => {\r\n        const currentState = participantStates[participant.identity] || {\r\n            isAudioEnabled: true,\r\n            isVideoEnabled: true,\r\n            isAudioEnabledGlobal: true,\r\n            isVideoEnabledGlobal: true,\r\n        };\r\n\r\n        updateParticipantState(participant.identity, {\r\n            ...currentState,\r\n            isAudioEnabled: !currentState.isAudioEnabled\r\n        });\r\n    }, [participantStates, updateParticipantState]);\r\n\r\n    // 切换参与者的视频状态\r\n    const handleToggleVideo = useCallback((participant: Participant) => {\r\n        const currentState = participantStates[participant.identity] || {\r\n            isAudioEnabled: true,\r\n            isVideoEnabled: true,\r\n            isAudioEnabledGlobal: true,\r\n            isVideoEnabledGlobal: true,\r\n        };\r\n\r\n        updateParticipantState(participant.identity, {\r\n            ...currentState,\r\n            isVideoEnabled: !currentState.isVideoEnabled\r\n        });\r\n    }, [participantStates, updateParticipantState]);\r\n\r\n    // 获取参与者的实际媒体状态（考虑全局覆盖）\r\n    const getEffectiveMediaState = useCallback((participantId: string) => {\r\n        const state = participantStates[participantId];\r\n        if (!state) return { isAudioEnabled: true, isVideoEnabled: true };\r\n\r\n        return {\r\n            isAudioEnabled: globalMediaState.isAudioEnabled ? state.isAudioEnabled : false,\r\n            isVideoEnabled: globalMediaState.isVideoEnabled ? state.isVideoEnabled : false,\r\n        };\r\n    }, [globalMediaState, participantStates]);\r\n\r\n    // 参与者视频组件\r\n    const ParticipantVideo = React.memo(({\r\n        participant,\r\n        isLocal,\r\n        isVideoEnabled\r\n    }: {\r\n        participant: Participant;\r\n        isLocal: boolean;\r\n        isVideoEnabled: boolean;\r\n    }) => {\r\n        const videoRef = useRef<HTMLVideoElement>(null);\r\n        const [videoTrack, setVideoTrack] = useState<RemoteTrack | LocalVideoTrack | Track | null>(null);\r\n\r\n        // 处理视频轨道变化\r\n        useEffect(() => {\r\n            if (!participant) return;\r\n\r\n            // 查找现有的视频轨道发布\r\n            const videoPublication = Array.from(participant.trackPublications.values())\r\n                .find(pub => pub.kind === Track.Kind.Video);\r\n\r\n            // 如果轨道已存在，则直接设置\r\n            if (videoPublication && videoPublication.track) {\r\n                setVideoTrack(videoPublication.track);\r\n            }\r\n\r\n            // 当订阅轨道时处理\r\n            const handleTrackSubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Video) {\r\n                    setVideoTrack(track as RemoteTrack | LocalVideoTrack);\r\n                }\r\n            };\r\n\r\n            // 当取消订阅轨道时处理\r\n            const handleTrackUnsubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Video) {\r\n                    setVideoTrack(null);\r\n                }\r\n            };\r\n\r\n            // 添加事件监听\r\n            participant.on(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n            participant.on(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n\r\n            // 清理函数\r\n            return () => {\r\n                participant.off(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n                participant.off(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n            };\r\n        }, [participant]);\r\n\r\n        // 处理视频元素附加/分离\r\n        useEffect(() => {\r\n            const videoElement = videoRef.current;\r\n            if (!videoElement || !videoTrack) return;\r\n\r\n            // 清理现有视频源\r\n            while (videoElement.firstChild) {\r\n                videoElement.removeChild(videoElement.firstChild);\r\n            }\r\n\r\n            // 附加视频轨道\r\n            if (isVideoEnabled) {\r\n                videoTrack.attach(videoElement);\r\n            }\r\n\r\n            return () => {\r\n                if (videoTrack) {\r\n                    videoTrack.detach(videoElement);\r\n                }\r\n            };\r\n        }, [videoTrack, isVideoEnabled]);\r\n\r\n        return (\r\n            <Box\r\n                sx={{\r\n                    width: '100%',\r\n                    aspectRatio: '16/9',\r\n                    bgcolor: 'grey.800',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    position: 'relative',\r\n                }}\r\n            >\r\n                <video\r\n                    ref={videoRef}\r\n                    autoPlay\r\n                    playsInline\r\n                    muted={isLocal}\r\n                    style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        objectFit: 'cover',\r\n                        display: isVideoEnabled ? 'block' : 'none'\r\n                    }}\r\n                />\r\n                {!isVideoEnabled && (\r\n                    <Box\r\n                        sx={{\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                            bottom: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            bgcolor: 'grey.900',\r\n                        }}\r\n                    >\r\n                        <Box\r\n                            sx={{\r\n                                width: 80,\r\n                                height: 80,\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                bgcolor: 'primary.main',\r\n                                color: 'white',\r\n                                fontSize: 32,\r\n                                fontWeight: 'bold',\r\n                            }}\r\n                        >\r\n                            {participant.identity.charAt(0).toUpperCase()}\r\n                        </Box>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        );\r\n    });\r\n\r\n    // 参与者音频组件\r\n    const ParticipantAudio = React.memo(({\r\n        participant,\r\n        isMuted,\r\n    }: {\r\n        participant: Participant;\r\n        isMuted: boolean;\r\n    }) => {\r\n        const audioRef = useRef<HTMLAudioElement>(null);\r\n        const [audioTrack, setAudioTrack] = useState<RemoteTrack | LocalAudioTrack | Track | null>(null);\r\n\r\n        useEffect(() => {\r\n            if (!participant) return;\r\n\r\n            const handleTrackSubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Audio) {\r\n                    setAudioTrack(track as RemoteTrack | LocalAudioTrack);\r\n                }\r\n            };\r\n\r\n            const handleTrackUnsubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Audio) {\r\n                    setAudioTrack(null);\r\n                }\r\n            };\r\n\r\n            // 查找现有的音频轨道\r\n            const audioPublication = Array.from(participant.trackPublications.values())\r\n                .find(pub => pub.kind === Track.Kind.Audio);\r\n\r\n            if (audioPublication && audioPublication.track) {\r\n                setAudioTrack(audioPublication.track);\r\n            }\r\n\r\n            participant.on(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n            participant.on(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n\r\n            return () => {\r\n                participant.off(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n                participant.off(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n            };\r\n        }, [participant]);\r\n\r\n        useEffect(() => {\r\n            const audioElement = audioRef.current;\r\n            if (audioElement && audioTrack) {\r\n                audioTrack.attach(audioElement);\r\n                // 远程音频默认静音，除非用户手动取消\r\n                audioElement.muted = isMuted;\r\n                return () => {\r\n                    audioTrack.detach(audioElement);\r\n                };\r\n            }\r\n        }, [audioTrack, isMuted]);\r\n\r\n        return <audio ref={audioRef} autoPlay playsInline />;\r\n    });\r\n\r\n    // 渲染参与者\r\n    const renderParticipant = useCallback((participant: Participant, isLocal: boolean) => {\r\n        const effectiveState = getEffectiveMediaState(participant.identity);\r\n\r\n        return (\r\n            <Box\r\n                key={participant.identity}\r\n                sx={{\r\n                    position: 'relative',\r\n                    borderRadius: 2,\r\n                    overflow: 'hidden',\r\n                    bgcolor: 'background.paper',\r\n                    boxShadow: 1,\r\n                }}\r\n            >\r\n                {/* 视频元素 */}\r\n                <ParticipantVideo\r\n                    participant={participant}\r\n                    isLocal={isLocal}\r\n                    isVideoEnabled={effectiveState.isVideoEnabled}\r\n                />\r\n\r\n                {/* 音频元素 */}\r\n                {!isLocal && (\r\n                    <ParticipantAudio\r\n                        participant={participant}\r\n                        isMuted={!effectiveState.isAudioEnabled}\r\n                    />\r\n                )}\r\n\r\n                {/* 控制栏 */}\r\n                <Grid container\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        p: 1,\r\n                        bgcolor: 'rgba(0, 0, 0, 0.6)',\r\n                        justifyContent: 'center',\r\n                        gap: 1,\r\n                    }}\r\n                >\r\n                    <Grid item>\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            color={effectiveState.isAudioEnabled ? 'primary' : 'error'}\r\n                            onClick={() => handleToggleAudio(participant)}\r\n                        >\r\n                            {effectiveState.isAudioEnabled ? <VolumeUpIcon /> : <VolumeOffIcon />}\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            color={effectiveState.isVideoEnabled ? 'primary' : 'error'}\r\n                            onClick={() => handleToggleVideo(participant)}\r\n                        >\r\n                            {effectiveState.isVideoEnabled ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"caption\" color=\"white\">\r\n                            {participant.identity} {isLocal && '(你)'}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    {/* 本地麦克风控制 */}\r\n                    {isLocal && (\r\n                        <Grid item>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={handleLocalMuteToggle}\r\n                                color={isMuted ? 'error' : 'primary'}\r\n                                sx={{ color: 'white' }}\r\n                                title={isMuted ? '取消静音' : '静音'}\r\n                            >\r\n                                {isMuted ? <MicOffIcon /> : <MicIcon />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                    )}\r\n\r\n                    {/* 本地视频控制 */}\r\n                    {isLocal && (\r\n                        <Grid item>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={handleLocalVideoToggle}\r\n                                color={isVideoEnabled ? 'primary' : 'error'}\r\n                                sx={{ color: 'white' }}\r\n                                title={isVideoEnabled ? '关闭摄像头' : '开启摄像头'}\r\n                            >\r\n                                {isVideoEnabled ? <VideoIcon /> : <VideoOffIcon />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n        );\r\n    }, [isMuted, isVideoEnabled, getEffectiveMediaState, handleToggleAudio, handleToggleVideo, handleLocalMuteToggle, handleLocalVideoToggle]);\r\n\r\n    // 渲染控制按钮\r\n    function renderControlButtons() {\r\n        return (\r\n            <Box sx={{ display: 'flex', gap: 1, p: 1, bgcolor: 'background.paper' }}>\r\n                {/* 本地音频控制 */}\r\n                <IconButton\r\n                    color={isMuted ? 'error' : 'primary'}\r\n                    onClick={toggleMute}\r\n                    title={isMuted ? '取消静音' : '静音'}\r\n                >\r\n                    {isMuted ? <MicOffIcon /> : <MicIcon />}\r\n                </IconButton>\r\n\r\n                {/* 本地视频控制 */}\r\n                <IconButton\r\n                    color={isVideoEnabled ? 'primary' : 'error'}\r\n                    onClick={toggleVideo}\r\n                    title={isVideoEnabled ? '关闭摄像头' : '开启摄像头'}\r\n                >\r\n                    {isVideoEnabled ? <VideoIcon /> : <VideoOffIcon />}\r\n                </IconButton>\r\n\r\n                {/* 全局远程音频控制 */}\r\n                <IconButton\r\n                    color={remoteMediaState.isAudioSubscribed ? 'primary' : 'error'}\r\n                    onClick={toggleRemoteAudio}\r\n                    title={remoteMediaState.isAudioSubscribed ? '关闭所有远程音频' : '开启所有远程音频'}\r\n                >\r\n                    {remoteMediaState.isAudioSubscribed ? <VolumeUpIcon /> : <VolumeOffIcon />}\r\n                </IconButton>\r\n\r\n                {/* 全局远程视频控制 */}\r\n                <IconButton\r\n                    color={remoteMediaState.isVideoSubscribed ? 'primary' : 'error'}\r\n                    onClick={toggleRemoteVideo}\r\n                    title={remoteMediaState.isVideoSubscribed ? '关闭所有远程视频' : '开启所有远程视频'}\r\n                >\r\n                    {remoteMediaState.isVideoSubscribed ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                </IconButton>\r\n\r\n                {/* 离开会议按钮 */}\r\n                <IconButton\r\n                    color=\"error\"\r\n                    onClick={leaveMeeting}\r\n                    title=\"离开会议\"\r\n                >\r\n                    <CallEndIcon />\r\n                </IconButton>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    // 渲染主界面\r\n    function renderMainContent() {\r\n        // 如果已经连接，显示会议界面\r\n        if (hasConnected && roomRef.current) {\r\n            return (\r\n                <Box className={className} sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n                    <Box sx={{ flex: 1, overflow: 'auto', p: 2 }}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} md={participants.length === 0 ? 12 : 6}>\r\n                                {renderParticipant(roomRef.current.localParticipant, true)}\r\n                            </Grid>\r\n                            {participants.map(function (participant) {\r\n                                return (\r\n                                    <Grid item xs={12} md={6} key={participant.identity}>\r\n                                        {renderParticipant(participant, false)}\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                        </Grid>\r\n                    </Box>\r\n                    {/* 底部控制栏 */}\r\n                    <Box sx={{ p: 1, borderTop: '1px solid', borderColor: 'divider' }}>\r\n                        {renderControlButtons()}\r\n                    </Box>\r\n                </Box>\r\n            );\r\n        }\r\n\r\n        // 未连接时显示连接界面\r\n        return (\r\n            <Box className={className} sx={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                p: 3\r\n            }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    准备加入会议\r\n                </Typography>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={connectToRoom}\r\n                    disabled={isConnecting}\r\n                    startIcon={<VideoIcon />}\r\n                    sx={{ mt: 2 }}\r\n                >\r\n                    加入会议\r\n                    {isConnecting && (\r\n                        <CircularProgress\r\n                            size={16}\r\n                            sx={{\r\n                                color: 'inherit',\r\n                                ml: 1\r\n                            }}\r\n                        />\r\n                    )}\r\n                </Button>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    // 统一渲染内容，避免提前 return 导致 hooks 数量不一致\r\n    let content: React.ReactNode;\r\n    if (isConnecting) {\r\n        content = (\r\n            <Box sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                height: '100%',\r\n                p: 3\r\n            }}>\r\n                <CircularProgress />\r\n                <Typography variant=\"body1\" sx={{ mt: 2 }}>正在连接会议...</Typography>\r\n            </Box>\r\n        );\r\n    } else if (error) {\r\n        content = (\r\n            <Alert severity=\"error\" sx={{ m: 2 }}>\r\n                <Typography variant=\"body1\">{error}</Typography>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={connectToRoom}\r\n                    startIcon={<RefreshIcon />}\r\n                    sx={{ mt: 1 }}\r\n                >\r\n                    重试连接\r\n                </Button>\r\n            </Alert>\r\n        );\r\n    } else {\r\n        content = renderMainContent();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(directly){\r\n            connectToRoom();\r\n        }\r\n    }, [directly])\r\n    // 渲染组件\r\n    return (\r\n        <Box ref={ref} sx={sx} style={style}>\r\n            {content}\r\n        </Box>\r\n    );\r\n}\r\n\r\n// 使用 forwardRef 导出组件\r\nconst MeetingRoom5 = forwardRef(MeetingRoomComponent);\r\nMeetingRoom5.displayName = 'MeetingRoom5';\r\n\r\nexport { MeetingRoom5 };","import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 单个联系人的信息，由前端提供\n */\nexport interface IEmcContactIdentity {\n    identity: string;\n    identityType: 'email' | 'mobile';\n}\n\n/**\n * @description 邀请联系人的请求参数\n */\nexport interface IEmcInviteContactsParams extends IRequestParams {\n    contacts: IEmcContactIdentity[];\n    remark?: string;\n    type: string;\n    message?: string;\n    matrix_access_token: string; // 新增：用于创建 Matrix 房间的授权 Token\n}\n\n/**\n * @description 单个邀请的处理结果，由后端返回\n */\nexport interface IEmcInviteResultItem {\n    identity: string;\n    result_code: string; // 使用 ResultCode 的字符串形式\n    msg: string;\n}\n\n/**\n * @description 邀请联系人的完整响应体\n */\n// export interface IEmcInviteContactsResult extends IResultContent {\n//     data: {\n//         data: {\n//             results: IEmcInviteResultItem[];\n//             msg?: string;\n//         };\n//         msg?: string;\n//     };\n//     results?: IEmcInviteResultItem[]; // 保持向后兼容\n// }\n\nexport interface IEmcInviteContactsResult extends IResultContent {\n    data: {\n        is_ok:boolean;\n        results: IEmcInviteResultItem[];\n        msg?: string;\n    };\n}\n\n/**\n * @description 调用邀请联系人接口的函数\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEmcInviteContacts(opts: IRequestOptions<IEmcInviteContactsParams>) {\n    const res = await request<IEmcInviteContactsResult>(tms.TEmc, tms.MEmcInviteContacts, opts.params, opts.gateway, opts.handler);\n    return res;\n}","import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 获取联系人类型的请求参数\n */\nexport interface IEmcGetContactTypesParams extends IRequestParams {\n    // 可能不需要额外参数，但保留结构以备将来扩展\n}\n\n/**\n * @description 单个联系人类型\n */\nexport interface IEmcContactTypeItem {\n    id: string;\n    name: string;\n    // 根据实际需要可以添加更多字段，例如 icon, description 等\n}\n\n/**\n * @description 获取联系人类型的完整响应体\n */\nexport interface IEmcGetContactTypesResult extends IResultContent {\n    data: {\n        types: Array<{\n            uuid: string;\n            name: string;\n            is_system: boolean;\n        }>;\n    };\n}\n\n/**\n * @description 调用获取联系人类型接口的函数\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEmcGetContactTypes(opts: IRequestOptions<IEmcGetContactTypesParams>) {\n    const res = await request<IEmcGetContactTypesResult>(tms.TEmc, tms.MEmcGetContactTypes, opts.params, opts.gateway, opts.handler);\n    return res;\n}\n","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n    Box,\n    CircularProgress,\n    Autocomplete,\n} from '@mui/material';\nimport { useState, useCallback, useEffect, useRef, SyntheticEvent } from 'react';\nimport { \n    IEmcInviteContactsParams, \n    tmsEmcInviteContacts, \n    IEmcContactIdentity, \n    user, \n    tmsEmcGetContactTypes,\n    IEmcGetContactTypesResult,\n    IEmcContactTypeItem,\n    IEmcInviteResultItem,\n} from '@app/model';\nimport toast from 'react-hot-toast';\nimport { matrixUser } from '@im/matrix';\nimport { authService } from '@src/services/authService';\nimport { Log, useProxyWatch,\n    IRequestResult } from '@fanfanlo';\nconst fileLogger = new Log(false, 'InviteContactDialog.tsx');\n\nconst isValidIdentity = (text: string) => /(^\\d{11}$)|(^[a-zA-Z0-9]{32}$)/.test(text);\nconst is11DigitNumber = (text: string) => /^\\d{11}$/.test(text);\n\ninterface InviteContactDialogProps {\n    open: boolean;\n    onClose: () => void;\n    onInviteSent?: () => void;\n}\n\nexport function InviteContactDialog({ open, onClose, onInviteSent }: InviteContactDialogProps) {\n    const uiLogger = fileLogger.sub(false, 'InviteContactDialog_ui');\n\n    const [contacts, setContacts] = useState('');\n    const [remark, setRemark] = useState('');\n    const [callType, setCallType] = useState<string | null>(null);\n    const [availableCallTypes, setAvailableCallTypes] = useState<readonly IEmcContactTypeItem[]>([]);\n    \n    // Debug effect to log availableCallTypes changes\n    useEffect(() => {\n        console.log('availableCallTypes updated:', availableCallTypes);\n    }, [availableCallTypes]);\n    \n    // Debug effect to log callType changes\n    useEffect(() => {\n        console.log('callType updated:', callType);\n    }, [callType]);\n    const [message, setMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isTypesLoading, setIsTypesLoading] = useState(false);\n\n    const [pendingParams, setPendingParams] = useState<Omit<IEmcInviteContactsParams, 'matrix_access_token'> | null>(null);\n    const executionLock = useRef(false);\n    const [accessToken] = useProxyWatch(matrixUser.userData.userInfo, 'loginResponse.access_token', matrixUser.userData.userInfo.loginResponse?.access_token);\n    const [isUserLoggedIn] = useProxyWatch(user.data.sessionData, 'global_user_info', !!user.data.sessionData.global_user_info);\n    const [userToken] = useProxyWatch(user, 'data.storeData.user_token', user.data.storeData.user_token);\n    useEffect(() => {\n        if (accessToken && pendingParams && !executionLock.current) {\n            executionLock.current = true;\n            const finalParams: IEmcInviteContactsParams = {\n                ...pendingParams,\n                matrix_access_token: accessToken,\n                contacts: pendingParams?.contacts || [],\n                type: pendingParams?.type || ''\n            };\n            executeApiCall(finalParams);\n        }\n    }, [accessToken, pendingParams]);\n\n    const executeApiCall = useCallback(async (params: IEmcInviteContactsParams) => {\n        if (!params.contacts || !params.type) {\n            toast.error('请填写联系人和呼叫类型');\n            return;\n        }\n\n        setIsLoading(true);\n        \n        try {\n            const res = await tmsEmcInviteContacts({\n                params,\n                handler: { printLog: true }\n            });\n\n            console.log('Invite response:', res);\n\n            // 处理响应结果\n            if (res.err || !res.shellIsOk || !res.dataIsOk) {\n                const errorMessage = res.err?.message || '邀请失败，请稍后重试';\n                toast.error(errorMessage);\n                return;\n            }\n\n            // 处理嵌套的响应结构\n            const responseData = res.data;\n            if (!responseData?.data?.results) {\n                const errorMessage = responseData?.data?.msg || res.data?.msg || '未返回有效的结果';\n                toast.error(errorMessage);\n                return;\n            }\n            \n            const results: IEmcInviteResultItem[] = responseData.data.results;\n\n            // 统计成功和失败的数量\n            const successResults = results.filter(r => r.result_code === 'SUCCESS');\n            const infoResults = results.filter(r => r.result_code === 'INVITE_ALREADY_SENT' || r.result_code === 'ALREADY_A_CONTACT');\n            const errorResults = results.filter(r => r.result_code !== 'SUCCESS' && r.result_code !== 'INVITE_ALREADY_SENT' && r.result_code !== 'ALREADY_A_CONTACT');\n\n            if (successResults.length > 0) {\n                toast.success(`成功邀请 ${successResults.length} 个联系人`);\n                onInviteSent?.();\n            }\n            \n            if (infoResults.length > 0) {\n                const infoMessages = infoResults.map(r => r.msg).filter(Boolean).join('\\n');\n                if (infoMessages) {\n                    // 使用默认的 toast 替代 toast.info\n                    toast(infoMessages);\n                }\n            }\n            \n            if (errorResults.length > 0) {\n                const errorMessages = errorResults.map(r => r.msg).filter(Boolean).join('\\n');\n                if (errorMessages) {\n                    toast.error(`部分邀请失败：\\n${errorMessages}`);\n                }\n            }\n        } catch (error) {\n            console.error('Error in executeApiCall:', error);\n            toast.error('处理请求时发生错误，请稍后重试');\n        } finally {\n            setIsLoading(false);\n        }\n    }, [onInviteSent]);\n\n    const fetchCallTypes = useCallback(async () => {\n        const logger = uiLogger.sub(false, 'fetchCallTypes_fn');\n        logger.log('Fetching call types...');\n        setIsTypesLoading(true);\n        const res: IRequestResult<IEmcGetContactTypesResult, any> = await tmsEmcGetContactTypes({ params: {}, handler: { printLog: true } });\n        logger.log('Call types response:', JSON.stringify(res));\n        setIsTypesLoading(false);\n\n        if (res.err || !res.shellIsOk || !res.dataIsOk) {\n            const errorMessage = res.err?.message || '加载呼叫类型失败。';\n            toast.error(errorMessage);\n            setAvailableCallTypes([]);\n            logger.error('Failed to load call types:', errorMessage);\n        } else {\n            // 从 res.data.data.types 获取数据\n            const types = res.data?.data?.types || [];\n            logger.log('Setting availableCallTypes:', JSON.stringify(types));\n            \n            // 转换为 IEmcContactTypeItem[] 格式\n            const formattedTypes = types.map(type => ({\n                id: type.uuid,\n                name: type.name,\n                is_system: type.is_system\n            }));\n            \n            setAvailableCallTypes(formattedTypes);\n            \n            // 只在 callType 为空时设置默认值\n            if (formattedTypes.length > 0 && !callType) {\n                const defaultType = formattedTypes[0].name;\n                logger.log('Setting default call type:', defaultType);\n                setCallType(defaultType);\n            } else if (formattedTypes.length === 0) {\n                logger.warn('No call types available');\n            }\n        }\n    }, []); // 移除了 callType 依赖\n\n    useEffect(() => {\n        if (open) {\n            fetchCallTypes();\n        } else {\n            setContacts('');\n            setRemark('');\n            setCallType(null);\n            setAvailableCallTypes([]);\n            setMessage('');\n            setIsLoading(false);\n            setPendingParams(null);\n            executionLock.current = false;\n        }\n    }, [open, fetchCallTypes]);\n\n    const handleSendInvitation = useCallback(async () => {\n        const contactInputs = contacts.split('\\n').map(c => c.trim()).filter(c => c);\n        if (contactInputs.length === 0) {\n            toast.error('请输入至少一个联系人。');\n            return;\n        }\n\n        const contactIdentities: IEmcContactIdentity[] = [];\n        for (const input of contactInputs) {\n            if (isValidIdentity(input)) {\n                const type = is11DigitNumber(input) ? 'mobile' : 'email';\n                contactIdentities.push({ identity: input, identityType: type });\n            } else {\n                toast.error(`联系人格式无效: ${input}。必须是11位手机号或32位字符串。`);\n                return;\n            }\n        }\n\n        if (!callType || callType.trim() === '') {\n            toast.error('请选择或输入一个呼叫类型。');\n            return;\n        }\n\n        setIsLoading(true);\n\n        if (!userToken) {\n            const appLoggedIn = await authService.showLoginDialog();\n            if (!appLoggedIn) {\n                setIsLoading(false);\n                return; \n            }\n        }\n\n        const currentAccessToken = matrixUser.userData.userInfo.loginResponse?.access_token;\n        const params: Omit<IEmcInviteContactsParams, 'matrix_access_token'> = {\n            contacts: contactIdentities,\n            type: callType.trim(),\n            remark: remark.trim(),\n            message: message.trim(),\n        };\n\n        if (currentAccessToken) {\n            executionLock.current = true;\n            const apiParams: IEmcInviteContactsParams = {\n                ...params,\n                matrix_access_token: currentAccessToken,\n                contacts: params.contacts || [],\n                type: params.type || ''\n            };\n            executeApiCall(apiParams);\n        } else {\n            toast('等待登录...');\n            setPendingParams(params);\n        }\n\n    }, [contacts, remark, callType, message, executeApiCall, isUserLoggedIn]);\n\n    return (\n        <Dialog open={open} onClose={() => onClose()} maxWidth=\"sm\" fullWidth>\n            <DialogTitle>邀请紧急联系人</DialogTitle>\n            <DialogContent>\n                <Box component=\"form\" sx={{ mt: 2 }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"contacts\"\n                        label=\"联系人 (11位手机号或32位ID)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                        placeholder=\"13800138000&#10;550e8400e29b41d4a716446655440000\"\n                        value={contacts}\n                        onChange={(e) => setContacts(e.target.value)}\n                        disabled={isLoading}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"remark\"\n                        label=\"备注名 (可选)\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"outlined\"\n                        value={remark}\n                        onChange={(e) => setRemark(e.target.value)}\n                        disabled={isLoading}\n                    />\n                    <Autocomplete\n                        freeSolo\n                        id=\"call-type-autocomplete\"\n                        options={availableCallTypes.map((option) => option.name)}\n                        value={callType || ''}\n                        onChange={(event: SyntheticEvent, newValue: string | null) => {\n                            console.log('Call type changed to:', newValue);\n                            setCallType(newValue);\n                        }}\n                        inputValue={callType || ''}\n                        onInputChange={(event, newInputValue, reason) => {\n                            // Only update when the user is typing, not when an option is selected\n                            if (reason === 'input') {\n                                console.log('Input value changed to:', newInputValue);\n                                setCallType(newInputValue);\n                            }\n                        }}\n                        disablePortal\n                        disableClearable\n                        forcePopupIcon={!isTypesLoading}\n                        sx={{ mt: 1, mb: 1, width: '100%' }}\n                        renderInput={(params) => (\n                            <TextField\n                                {...params}\n                                label=\"呼叫类型\"\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{\n                                    ...params.InputProps,\n                                    endAdornment: (\n                                        <>\n                                            {isTypesLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                            {params.InputProps.endAdornment}\n                                        </>\n                                    ),\n                                }}\n                            />\n                        )}\n                        ListboxProps={{\n                            style: {\n                                maxHeight: '200px',\n                                overflow: 'auto',\n                            },\n                        }}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"message\"\n                        label=\"邀请信息 (可选)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        rows={3}\n                        variant=\"outlined\"\n                        placeholder=\"我已将您添加为我的紧急联系人，请接受邀请。\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        disabled={isLoading}\n                    />\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => onClose()} disabled={isLoading}>关闭</Button>\n                <Button onClick={handleSendInvitation} variant=\"contained\" disabled={isLoading}>\n                    {isLoading ? <CircularProgress size={24} /> : '发送邀请'}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","import { autoWebViewJs } from \"@droid/android\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nexport function JpushIsInitialized(){\r\n    const [isInitialized, setIsInitialized] = useState(false);\r\n    function refresh(){\r\n        const script = `var bl = com.fanfanlo.emergencycall.jpush.JpushManager.readIsJpushInitialized();\r\n        bl;`\r\n        const {javaResultData} = autoWebViewJs.callScript<boolean>(script);\r\n        setIsInitialized(typeof javaResultData == \"undefined\" ? false : javaResultData);\r\n    }\r\n    useEffect(() => {\r\n        refresh();\r\n    }, []);\r\n\r\n    return(\r\n        <Box>\r\n            <span>消息推送初始:</span><span>{isInitialized ? \"是\" : \"否\"}</span>\r\n            <span><Button onClick={refresh}>刷新</Button></span>\r\n        </Box>\r\n    )\r\n}","import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { request } from \"@fanfanlo\";\n\n/**\n * 获取未处理被邀请信息的请求参数\n */\nexport interface IParamsListPendingReceivedInvitations {\n  // 可以添加分页等参数\n  page?: number;\n  page_size?: number;\n}\n\n/**\n * 未处理的被邀请信息\n */\nexport interface IPendingInvitationInfo {\n  invitation_id: string;\n  user_info: {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n  };\n  status: 'pending';\n  message: string;\n  created_at: number;\n  expires_at: number;\n}\n\n/**\n * 获取未处理被邀请信息的响应结果\n */\nexport interface IResultListPendingReceivedInvitations {\n  is_ok: boolean;\n  msg?: string;\n  invitations: IPendingInvitationInfo[];\n}\n\n/**\n * 获取未处理的被邀请信息\n */\nexport async function tmsEmergencyCallListPendingReceivedInvitations(\n  opts: IRequestOptions<IParamsListPendingReceivedInvitations>\n) {\n  return request<IResultListPendingReceivedInvitations, IParamsListPendingReceivedInvitations>(\n    tms.TEmc,\n    tms.MEmcListPendingReceivedInvitations,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出服务\nexport const emergencyCallPendingInvitationService = {\n  listPendingReceivedInvitations: tmsEmergencyCallListPendingReceivedInvitations,\n};\n\nexport default emergencyCallPendingInvitationService;","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  CircularProgress,\n  Avatar,\n  Chip,\n  Alert,\n  Stack,\n} from '@mui/material';\nimport {\n  Check as CheckIcon,\n  Close as CloseIcon,\n  AccessTime as AccessTimeIcon,\n  Person as PersonIcon,\n  Notifications as NotificationsIcon,\n} from '@mui/icons-material';\nimport { formatDistanceToNow } from 'date-fns';\nimport { zhCN } from 'date-fns/locale';\nimport { \n  emergencyCallPendingInvitationService,\n  emergencyCallInvitationService,\n  IPendingInvitationInfo,\n  user,\n  AppModelEvent,\n  appModel\n} from '@app/model';\nimport { useProxyWatch } from '@fanfanlo';\n\n// 邀请卡片组件\nfunction PendingInvitationCard({ \n  invitation,\n  onRespond,\n  isProcessing = false,\n}: { \n  invitation: IPendingInvitationInfo;\n  onRespond?: (action: 'accept' | 'decline') => Promise<void>;\n  isProcessing?: boolean;\n}) {\n  const [isProcessingAction, setIsProcessingAction] = useState(false);\n\n  const handleRespond = async (action: 'accept' | 'decline') => {\n    if (!onRespond) return;\n    \n    try {\n      setIsProcessingAction(true);\n      await onRespond(action);\n    } finally {\n      setIsProcessingAction(false);\n    }\n  };\n\n  const isExpired = new Date(invitation.expires_at * 1000) < new Date();\n\n  return (\n    <Card variant=\"outlined\" sx={{ mb: 2, opacity: isProcessing ? 0.7 : 1 }}>\n      <CardContent>\n        <Box display=\"flex\" alignItems=\"center\" mb={2}>\n          <Avatar \n            src={invitation.user_info.avatar_url} \n            alt={invitation.user_info.display_name}\n            sx={{ width: 50, height: 50, mr: 2 }}\n          >\n            {invitation.user_info.display_name?.[0]?.toUpperCase() || '?'}\n          </Avatar>\n          <Box flexGrow={1}>\n            <Typography variant=\"h6\">\n              {invitation.user_info.display_name || '未知用户'}\n            </Typography>\n            {/* <Typography variant=\"body2\" color=\"text.secondary\">\n              ID: {invitation.user_info.user_id}\n            </Typography> */}\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 0.5 }}>\n              {formatDistanceToNow(invitation.created_at * 1000, { \n                addSuffix: true, \n                locale: zhCN \n              })}\n            </Typography>\n          </Box>\n          <Box textAlign=\"right\">\n            <Chip \n              size=\"small\"\n              icon={<AccessTimeIcon fontSize=\"small\" />}\n              label={isExpired ? '已过期' : `${formatDistanceToNow(invitation.expires_at * 1000, { \n                addSuffix: true, \n                locale: zhCN \n              })}`}\n              color={isExpired ? 'error' : 'primary'}\n              variant=\"outlined\"\n            />\n          </Box>\n        </Box>\n        \n        {invitation.message && (\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1, mb: 1 }}>\n            邀请信息: {invitation.message}\n          </Typography>\n        )}\n\n        <Typography variant=\"body2\" color=\"primary\" sx={{ fontWeight: 'medium' }}>\n          邀请您成为紧急联系人\n        </Typography>\n      </CardContent>\n      \n      {!isExpired && (\n        <CardActions sx={{ justifyContent: 'flex-end', pt: 0 }}>\n          <Button \n            size=\"small\" \n            color=\"error\"\n            startIcon={<CloseIcon />}\n            onClick={() => handleRespond('decline')}\n            disabled={isProcessing || isProcessingAction}\n          >\n            拒绝\n          </Button>\n          <Button \n            size=\"small\" \n            color=\"primary\"\n            variant=\"contained\"\n            startIcon={<CheckIcon />}\n            onClick={() => handleRespond('accept')}\n            disabled={isProcessing || isProcessingAction}\n          >\n            接受\n          </Button>\n        </CardActions>\n      )}\n    </Card>\n  );\n}\n\nconst PendingInvitationsList: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [invitations, setInvitations] = useState<IPendingInvitationInfo[]>([]);\n  const [isProcessing, setIsProcessing] = useState<boolean>(false);\n\n  // 监听用户登录状态\n  const [userToken] = useProxyWatch(user, 'data.storeData.user_token', user.data.storeData.user_token);\n\n  // 加载未处理的被邀请信息\n  const loadPendingInvitations = useCallback(async () => {\n    if (!userToken) {\n      setInvitations([]);\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const res = await emergencyCallPendingInvitationService.listPendingReceivedInvitations({\n        params: {},\n      } as any);\n      \n      if (res.shellIsOk && res.dataIsOk && res.data?.is_ok) {\n        setInvitations(res.data.invitations || []);\n      } else {\n        setError(res.data?.msg || '加载邀请列表失败');\n      }\n    } catch (err) {\n      console.error('加载未处理邀请列表异常:', err);\n      setError('发生未知错误');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [userToken]); // 现在可以安全地依赖userToken了\n\n  // 响应邀请\n  const handleRespondToInvite = useCallback(async (invitationId: string, action: 'accept' | 'decline'): Promise<void> => {\n    try {\n      setIsProcessing(true);\n\n      const res = await emergencyCallInvitationService.respondToInvite({\n        params: { invitation_id: invitationId, action },\n      } as any);\n\n      if (!res.shellIsOk || !res.dataIsOk || !res.data?.is_ok) {\n        throw new Error(res.data?.msg || '操作失败');\n      }\n      \n      // 从列表中移除已处理的邀请\n      setInvitations(prev => prev.filter(invite => invite.invitation_id !== invitationId));\n      \n      // 发送邀请列表更新事件\n      appModel.dispatcher.emit(AppModelEvent.InviteListUpdated);\n      \n    } catch (err) {\n      console.error('处理邀请失败:', err);\n      setError(err instanceof Error ? err.message : '操作失败，请重试');\n    } finally {\n      setIsProcessing(false);\n    }\n  }, []);\n\n  // 监听用户登录状态变化\n  useEffect(() => {\n    console.log('PendingInvitationsList - userToken changed:', userToken);\n    if (userToken) {\n      // 有登录用户了，刷新邀请列表\n      loadPendingInvitations();\n    } else {\n      // 清空邀请信息列表\n      setInvitations([]);\n    }\n  }, [userToken]); // 只依赖userToken\n\n  // 监听邀请列表更新事件\n  useEffect(() => {\n    const unsubscribe = appModel.dispatcher.addListener(AppModelEvent.InviteListUpdated, () => {\n      console.log('AppModelEvent.InviteListUpdated - 刷新未处理邀请列表');\n      loadPendingInvitations();\n    });\n\n    return unsubscribe;\n  }, [loadPendingInvitations]); // 依赖loadPendingInvitations函数\n\n  // 如果没有登录用户，不显示任何内容\n  if (!userToken) {\n    return null;\n  }\n\n  if (isLoading) {\n    return (\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" p={2}>\n        {/* <CircularProgress size={24} />\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n          加载中...\n        </Typography> */}\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box p={2}>\n        <Alert severity=\"error\">\n          {error}\n        </Alert>\n      </Box>\n    );\n  }\n\n  if (invitations.length === 0) {\n    return (\n      <Box \n        display=\"flex\" \n        flexDirection=\"column\" \n        alignItems=\"center\" \n        p={2}\n        textAlign=\"center\"\n      >\n        {/* <NotificationsIcon color=\"disabled\" sx={{ fontSize: 48, mb: 1 }} />\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          暂无未处理的邀请\n        </Typography> */}\n      </Box>\n    );\n  }\n\n  return (\n    <Box p={2}>\n      <Box display=\"flex\" alignItems=\"center\" mb={2}>\n        <NotificationsIcon color=\"primary\" sx={{ mr: 1 }} />\n        <Typography variant=\"h6\" color=\"primary\">\n          未处理的邀请 ({invitations.length})\n        </Typography>\n      </Box>\n\n      <Stack spacing={2}>\n        {invitations.map((invitation) => (\n          <PendingInvitationCard\n            key={invitation.invitation_id}\n            invitation={invitation}\n            onRespond={(action) => handleRespondToInvite(invitation.invitation_id, action)}\n            isProcessing={isProcessing}\n          />\n        ))}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default PendingInvitationsList;","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\lodash@4.17.21\\\\node_modules\\\\lodash\\\\lodash.js\"","import React, { useState, useCallback } from 'react';\nimport {\n    Box,\n    Switch,\n    Button,\n    Typography,\n    Paper,\n    Collapse,\n    Divider,\n    IconButton,\n    TextField,\n    FormControlLabel,\n    Tooltip,\n    Stack,\n    FormControl,\n    MenuItem,\n    InputLabel,\n    Select,\n} from '@mui/material';\nimport {\n    DragIndicator as DragIndicatorIcon,\n    ExpandLess,\n    Settings,\n    Delete,\n    PlayArrow,\n    Stop,\n    VolumeUp as VolumeUpIcon,\n    Vibration as VibrationIcon\n} from '@mui/icons-material';\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, TouchSensor, useSensor, useSensors, DragEndEvent } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, sortableKeyboardCoordinates, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { debounce } from 'lodash';\nimport { autoJsStoreUtils } from '@droid/android';\n\nconst PRE_ALARM_CONFIG_KEY = 'PRE_ALARM_ACTIONS_CONFIG';\n\ninterface PreAlarmAction {\n    id: string;\n    type: 'sound' | 'vibration';\n    duration: number;\n    resourceId?: string;\n}\n\ninterface PreAlarmConfig {\n    enabled: boolean;\n    actions: PreAlarmAction[];\n    maxWaitDuration: number;\n}\n\nconst defaultSoundResources = [\n    { id: 'beep_short', name: '短提示音' },\n    { id: 'siren_gentle', name: '缓和警报' },\n    { id: 'alarm_clock', name: '闹钟' },\n];\n\nconst SortableActionItem: React.FC<{\n    action: PreAlarmAction;\n    isPlaying: boolean;\n    onUpdate: (id: string, updates: Partial<Omit<PreAlarmAction, 'id'>>) => void;\n    onRemove: (id: string) => void;\n    onPreview: (resourceId?: string) => void;\n    onStopPreview: () => void;\n}> = ({ action, isPlaying, onUpdate, onRemove, onPreview, onStopPreview }) => {\n    const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id: action.id });\n\n    const style = {\n        transform: CSS.Transform.toString(transform),\n        transition,\n        opacity: isDragging ? 0.8 : 1,\n        zIndex: isDragging ? 1 : 'auto',\n    };\n\n    return (\n        <Paper\n            ref={setNodeRef}\n            style={style}\n            elevation={isDragging ? 3 : 1}\n            sx={{\n                p: 2,\n                mb: 1,\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2,\n                userSelect: 'none',\n            }}\n        >\n            <Box {...attributes} {...listeners} sx={{ display: 'flex', alignItems: 'center', cursor: 'grab', touchAction: 'none' }}>\n                <DragIndicatorIcon />\n            </Box>\n            \n            <Box sx={{ flexGrow: 1 }}>\n                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', gap: 1.5 }}>\n                    <Typography variant=\"subtitle2\">\n                        {action.type === 'sound' ? '声音' : '震动'}\n                    </Typography>\n                    <TextField\n                        size=\"small\"\n                        type=\"number\"\n                        label=\"持续时间 (ms)\"\n                        value={action.duration}\n                        onChange={(e) => onUpdate(action.id, { duration: parseInt(e.target.value, 10) || 0 })}\n                        sx={{ width: '100%' }}\n                    />\n                    \n                    {action.type === 'sound' && (\n                        <FormControl size=\"small\" sx={{ width: '100%' }}>\n                            <InputLabel>声音类型</InputLabel>\n                            <Select\n                                value={action.resourceId || ''}\n                                label=\"声音类��\"\n                                onChange={(e) => onUpdate(action.id, { resourceId: e.target.value })}\n                                startAdornment={\n                                    <Tooltip title={isPlaying ? \"停止\" : \"试听\"}>\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() => isPlaying ? onStopPreview() : onPreview(action.resourceId)}\n                                            sx={{ mr: 1 }}\n                                        >\n                                            {isPlaying ? <Stop fontSize=\"small\" /> : <PlayArrow fontSize=\"small\" />}\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                            >\n                                {defaultSoundResources.map((sound) => (\n                                    <MenuItem key={sound.id} value={sound.id}>\n                                        {sound.name}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    )}\n                </Box>\n            </Box>\n            \n            <IconButton onClick={() => onRemove(action.id)} size=\"small\" color=\"error\">\n                <Delete />\n            </IconButton>\n        </Paper>\n    );\n};\n\nconst PreAlarmConfig2: React.FC = () => {\n    const [config, setConfig] = useState<PreAlarmConfig | null>(null);\n    const [expanded, setExpanded] = useState(false);\n    const [playingSoundId, setPlayingSoundId] = useState<string | null>(null);\n\n    const debouncedWrite = useCallback(\n        debounce((newConfig: PreAlarmConfig) => {\n            autoJsStoreUtils.write(PRE_ALARM_CONFIG_KEY, newConfig);\n        }, 500),\n        []\n    );\n\n    const sensors = useSensors(\n        useSensor(PointerSensor, {\n            activationConstraint: {\n                distance: 8,\n            },\n        }),\n        useSensor(TouchSensor, {\n            activationConstraint: {\n                delay: 250,\n                tolerance: 5,\n            },\n        }),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: sortableKeyboardCoordinates,\n        })\n    );\n\n    React.useEffect(() => {\n        const loadConfig = async () => {\n            const storedConfig = await autoJsStoreUtils.read<PreAlarmConfig>(PRE_ALARM_CONFIG_KEY);\n            if (storedConfig) {\n                const actionsWithIds = storedConfig.actions.map((action) => ({\n                    ...action,\n                    id: action.id || `action-${Math.random().toString(36).substr(2, 9)}`,\n                }));\n                setConfig({\n                    ...storedConfig,\n                    actions: actionsWithIds,\n                });\n            } else {\n                setConfig({\n                    enabled: true,\n                    actions: [],\n                    maxWaitDuration: 30000,\n                });\n            }\n        };\n        loadConfig();\n    }, []);\n\n    const updateConfig = useCallback(\n        (updates: Partial<PreAlarmConfig>) => {\n            setConfig((prev) => {\n                if (!prev) return null;\n                const newConfig = { ...prev, ...updates };\n                debouncedWrite(newConfig);\n                return newConfig;\n            });\n        },\n        [debouncedWrite]\n    );\n\n    const handleToggleEnabled = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateConfig({ enabled: event.target.checked });\n    };\n\n    const handleAddAction = (type: 'sound' | 'vibration') => {\n        const newAction: PreAlarmAction = {\n            id: `action-${Date.now()}`,\n            type,\n            duration: 3000,\n            ...(type === 'sound' && { resourceId: defaultSoundResources[0].id }),\n        };\n        updateConfig({\n            actions: [...(config?.actions || []), newAction],\n        });\n    };\n\n    const handleUpdateAction = (id: string, updates: Partial<Omit<PreAlarmAction, 'id'>>) => {\n        if (!config) return;\n        updateConfig({\n            actions: config.actions.map((action) =>\n                action.id === id ? { ...action, ...updates } : action\n            ),\n        });\n    };\n\n    const handleRemoveAction = (id: string) => {\n        if (!config) return;\n        updateConfig({\n            actions: config.actions.filter((action) => action.id !== id),\n        });\n    };\n\n    const handleDragEnd = (event: DragEndEvent) => {\n        const { active, over } = event;\n        if (!config || !over || active.id === over.id) return;\n\n        const oldIndex = config.actions.findIndex((a) => a.id === active.id);\n        const newIndex = config.actions.findIndex((a) => a.id === over.id);\n\n        if (oldIndex !== -1 && newIndex !== -1) {\n            updateConfig({\n                actions: arrayMove(config.actions, oldIndex, newIndex),\n            });\n        }\n    };\n\n    const handlePreviewSound = (resourceId?: string) => {\n        if (!resourceId) return;\n        handleStopSound(); \n        if ((window as any).SoundManager) {\n            (window as any).SoundManager.previewSound(resourceId);\n            setPlayingSoundId(resourceId);\n        } else {\n            console.warn('SoundManager JavascriptInterface is not available.');\n        }\n    };\n\n    const handleStopSound = () => {\n        if ((window as any).SoundManager) {\n            (window as any).SoundManager.stopPreview();\n        }\n        setPlayingSoundId(null);\n    };\n\n    if (!config) {\n        return <Box sx={{ p: 2, textAlign: 'center' }}>加载中...</Box>;\n    }\n\n    return (\n        <Box sx={{ mb: 3 }}>\n            <Paper \n                elevation={1} \n                sx={{ \n                    p: 2, \n                    display: 'flex', \n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    borderRadius: 1,\n                }}\n            >\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <Typography variant=\"subtitle1\">防误触报警设置</Typography>\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={config.enabled}\n                                onChange={handleToggleEnabled}\n                                color=\"primary\"\n                            />\n                        }\n                        label={config.enabled ? '已启用' : '已禁用'}\n                    />\n                </Box>\n                \n                <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    startIcon={expanded ? <ExpandLess /> : <Settings />}\n                    onClick={() => setExpanded(!expanded)}\n                >\n                    {expanded ? '收起设置' : '设置'}\n                </Button>\n            </Paper>\n\n            <Collapse in={expanded}>\n                <Paper \n                    elevation={0} \n                    sx={{ \n                        mt: 1, \n                        p: 2, \n                        border: '1px solid', \n                        borderColor: 'divider',\n                        borderRadius: 1,\n                    }}\n                >\n                    <Box sx={{ mb: 3 }}>\n                        <Typography variant=\"subtitle2\" gutterBottom>\n                            最大等待时间 (毫秒)\n                        </Typography>\n                        <TextField\n                            fullWidth\n                            type=\"number\"\n                            value={config.maxWaitDuration}\n                            onChange={(e) =>\n                                updateConfig({ maxWaitDuration: parseInt(e.target.value, 10) || 0 })\n                            }\n                            size=\"small\"\n                            InputProps={{\n                                endAdornment: (\n                                    <Typography variant=\"body2\" sx={{ ml: 1 }}>\n                                        毫秒\n                                    </Typography>\n                                ),\n                            }}\n                        />\n                    </Box>\n\n                    <Divider sx={{ my: 2 }} />\n\n                    <Box sx={{ mb: 2 }}>\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                            <Typography variant=\"subtitle2\">\n                                报警动作 ({config.actions.length})\n                            </Typography>\n                            <Stack direction=\"row\" spacing={1}>\n                                <Button\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    startIcon={<VolumeUpIcon />}\n                                    onClick={() => handleAddAction('sound')}\n                                >\n                                    添加声音\n                                </Button>\n                                <Button\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    startIcon={<VibrationIcon />}\n                                    onClick={() => handleAddAction('vibration')}\n                                >\n                                    添加震动\n                                </Button>\n                            </Stack>\n                        </Box>\n\n                        {config.actions.length === 0 ? (\n                            <Paper\n                                variant=\"outlined\"\n                                sx={{\n                                    p: 3,\n                                    textAlign: 'center',\n                                    color: 'text.secondary',\n                                }}\n                            >\n                                <Typography>暂无报警动作，请点击上方按钮添加</Typography>\n                            </Paper>\n                        ) : (\n                            <DndContext\n                                sensors={sensors}\n                                collisionDetection={closestCenter}\n                                onDragEnd={handleDragEnd}\n                            >\n                                <SortableContext\n                                    items={config.actions.map((a) => a.id)}\n                                    strategy={verticalListSortingStrategy}\n                                >\n                                    {config.actions.map((action) => (\n                                        <SortableActionItem\n                                            key={action.id}\n                                            action={action}\n                                            isPlaying={playingSoundId === action.resourceId}\n                                            onUpdate={handleUpdateAction}\n                                            onRemove={handleRemoveAction}\n                                            onPreview={handlePreviewSound}\n                                            onStopPreview={handleStopSound}\n                                        />\n                                    ))}\n                                </SortableContext>\n                            </DndContext>\n                        )}\n                    </Box>\n                </Paper>\n            </Collapse>\n        </Box>\n    );\n};\n\nexport default PreAlarmConfig2;","import React, { useState } from 'react';\nimport { \n    Box, \n    Paper, \n    Typography, \n    Button, \n    TextField, \n    Alert,\n    Divider,\n    Grid\n} from '@mui/material';\nimport { \n    MedicalServices as MedicalIcon,\n    Security as SecurityIcon,\n    Shortcut as ShortcutIcon\n} from '@mui/icons-material';\nimport { autoWebViewJs } from '@droid/android';\n\n/**\n * 桌面快捷方式配置组件\n * 用于创建医疗呼救和安全呼救的桌面快捷方式\n */\nconst ShortcutConfig: React.FC = () => {\n    const [medicalName, setMedicalName] = useState('意外呼救');\n    const [securityName, setSecurityName] = useState('安全呼救');\n    const [isCreating, setIsCreating] = useState(false);\n    const [message, setMessage] = useState<{type: 'success' | 'error' | 'info', text: string} | null>(null);\n\n    // 创建医疗呼救快捷方式\n    const handleCreateMedicalShortcut = async () => {\n        if (!medicalName.trim()) {\n            setMessage({type: 'error', text: '请输入快捷方式名称'});\n            return;\n        }\n\n        setIsCreating(true);\n        setMessage(null);\n\n        try {\n            // 检查是否支持快捷方式\n            const supportScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.isShortcutSupported();`;\n            const {javaResultString: supportResult} = autoWebViewJs.callScript(supportScript);\n            \n            if (supportResult !== 'true') {\n                setMessage({type: 'error', text: '当前设备不支持创建桌面快捷方式'});\n                return;\n            }\n\n            // 创建医疗呼救快捷方式\n            const script = `com.fanfanlo.emergencycall.manager.ShortcutManager.createMedicalShortcut(\"${medicalName}\");`;\n            const {javaResultString} = autoWebViewJs.callScript(script);\n            \n            if (javaResultString === 'true') {\n                setMessage({type: 'success', text: '医疗呼救快捷方式创建成功！请检查您的桌面。'});\n            } else {\n                setMessage({type: 'error', text: '快捷方式创建失败，请检查权限设置'});\n            }\n        } catch (error) {\n            console.error('Error creating medical shortcut:', error);\n            setMessage({type: 'error', text: '创建快捷方式时发生错误'});\n        } finally {\n            setIsCreating(false);\n        }\n    };\n\n    // 创建安全呼救快捷方式\n    const handleCreateSecurityShortcut = async () => {\n        if (!securityName.trim()) {\n            setMessage({type: 'error', text: '请输入快捷方式名称'});\n            return;\n        }\n\n        setIsCreating(true);\n        setMessage(null);\n\n        try {\n            // 检查是否支持快捷方式\n            const supportScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.isShortcutSupported();`;\n            const {javaResultString: supportResult} = autoWebViewJs.callScript(supportScript);\n            \n            if (supportResult !== 'true') {\n                setMessage({type: 'error', text: '当前设备不支持创建桌面快捷方式'});\n                return;\n            }\n\n            // 创建安全呼救快捷方式\n            const script = `com.fanfanlo.emergencycall.manager.ShortcutManager.createSecurityShortcut(\"${securityName}\");`;\n            const {javaResultString} = autoWebViewJs.callScript(script);\n            \n            if (javaResultString === 'true') {\n                setMessage({type: 'success', text: '安全呼救快捷方式创建成功！请检查您的桌面。'});\n            } else {\n                setMessage({type: 'error', text: '快捷方式创建失败，请检查权限设置'});\n            }\n        } catch (error) {\n            console.error('Error creating security shortcut:', error);\n            setMessage({type: 'error', text: '创建快捷方式时发生错误'});\n        } finally {\n            setIsCreating(false);\n        }\n    };\n\n    // 检查设备支持情况和权限引导\n    const handleCheckSupport = async () => {\n        try {\n            const supportScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.isShortcutSupported();`;\n            const brandScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.getDeviceBrand();`;\n            const guideScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.getPermissionGuideText();`;\n            \n            const {javaResultString: supportResult} = autoWebViewJs.callScript(supportScript);\n            const {javaResultString: brandResult} = autoWebViewJs.callScript(brandScript);\n            const {javaResultString: guideResult} = autoWebViewJs.callScript(guideScript);\n            \n            const supportInfo = `设备支持情况：\n设备品牌: ${brandResult}\n快捷方式支持: ${supportResult === 'true' ? '支持' : '不支持'}\n\n${guideResult}`;\n            \n            setMessage({type: 'info', text: supportInfo});\n        } catch (error) {\n            console.error('Error checking support:', error);\n            setMessage({type: 'error', text: '检查设备支持情况时发生错误'});\n        }\n    };\n    \n    // 检查并请求权限\n    const handleRequestPermission = async () => {\n        try {\n            console.log('开始调用权限引导方法...');\n            \n            // 先测试基础方法是否工作\n            const brandScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.getDeviceBrand();`;\n            const brandResult = autoWebViewJs.callScript(brandScript);\n            console.log('设备品牌测试:', brandResult);\n            \n            if (!brandResult || brandResult.javaResultString === undefined) {\n                throw new Error('基础方法调用失败，可能需要重新编译应用');\n            }\n            \n            // 尝试新的权限引导方法\n            const script = `com.fanfanlo.emergencycall.manager.ShortcutManager.checkAndRequestPermissionWithResult();`;\n            const {javaResultString: result} = autoWebViewJs.callScript(script);\n            console.log('权限引导结果:', result);\n            \n            if (result && result !== 'undefined') {\n                setMessage({\n                    type: result.startsWith('✅') ? 'success' : result.startsWith('❌') ? 'error' : 'info', \n                    text: result\n                });\n            } else {\n                throw new Error('新方法返回undefined，使用兜底方案');\n            }\n        } catch (error) {\n            console.error('权限引导调用出错:', error);\n            console.log('尝试使用兜底方案...');\n            \n            // 兜底方案：使用旧方法 + 手动指引\n            try {\n                const fallbackScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.checkAndRequestShortcutPermission();`;\n                const fallbackResult = autoWebViewJs.callScript(fallbackScript);\n                \n                const brand = autoWebViewJs.callScript(`com.fanfanlo.emergencycall.manager.ShortcutManager.getDeviceBrand();`);\n                const brandName = brand?.javaResultString || 'UNKNOWN';\n                \n                let guideText = '';\n                if (brandName === 'XIAOMI' || brandName === 'REDMI') {\n                    guideText = `\\n\\n小米/Redmi设备权限设置：\\n1. 打开\"设置\" > \"应用设置\" > \"应用管理\"\\n2. 找到\"紧急呼救\"应用\\n3. 点击\"权限管理\" > \"其他权限\"\\n4. 开启\"创建桌面快捷方式\"权限`;\n                } else {\n                    guideText = `\\n\\n请手动前往：\\n设置 > 应用管理 > 紧急呼救 > 权限管理\\n开启\"创建桌面快捷方式\"权限`;\n                }\n                \n                setMessage({\n                    type: 'warning', \n                    text: `⚠️ 权限引导方法可能需要重新编译应用\\n\\n临时解决方案：${guideText}\\n\\n💡 设置完成后，请返回重新创建快捷方式`\n                });\n            } catch (fallbackError) {\n                console.error('兜底方案也失败:', fallbackError);\n                setMessage({\n                    type: 'error', \n                    text: '❌ 权限方法调用失败\\n\\n可能原因：应用需要重新编译\\n\\n临时解决方案：\\n1. 手动前往：设置 > 应用管理 > 紧急呼救\\n2. 开启\"创建桌面快捷方式\"权限\\n3. 返回重新创建快捷方式'\n                });\n            }\n        }\n    };\n\n    return (\n        <Box sx={{ p: 3 }}>\n            <Paper elevation={2} sx={{ p: 3, mb: 3 }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <ShortcutIcon sx={{ mr: 2, color: 'primary.main' }} />\n                    <Typography variant=\"h5\" component=\"h1\">\n                        桌面快捷方式设置\n                    </Typography>\n                </Box>\n                \n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                    创建桌面快捷方式，可以快速触发紧急呼救功能\n                </Typography>\n\n                {message && (\n                    <Alert \n                        severity={message.type} \n                        sx={{ mb: 3 }}\n                        onClose={() => setMessage(null)}\n                    >\n                        <pre style={{ whiteSpace: 'pre-wrap', margin: 0 }}>\n                            {message.text}\n                        </pre>\n                    </Alert>\n                )}\n\n                <Grid container spacing={3}>\n                    {/* 医疗呼救快捷方式 */}\n                    <Grid item xs={12} md={6}>\n                        <Paper variant=\"outlined\" sx={{ p: 3 }}>\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                                <MedicalIcon sx={{ mr: 2, color: 'error.main' }} />\n                                <Typography variant=\"h6\">医疗呼救</Typography>\n                            </Box>\n                            \n                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                                创建医疗紧急呼救快捷方式，点击后直接触发医疗呼救功能\n                            </Typography>\n\n                            <TextField\n                                fullWidth\n                                label=\"快捷方式名称\"\n                                value={medicalName}\n                                onChange={(e) => setMedicalName(e.target.value)}\n                                sx={{ mb: 2 }}\n                                placeholder=\"意外呼救\"\n                            />\n\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"error\"\n                                onClick={handleCreateMedicalShortcut}\n                                disabled={isCreating}\n                                startIcon={<MedicalIcon />}\n                            >\n                                {isCreating ? '创建中...' : '创建医疗呼救快捷方式'}\n                            </Button>\n                        </Paper>\n                    </Grid>\n\n                    {/* 安全呼救快捷方式 */}\n                    <Grid item xs={12} md={6}>\n                        <Paper variant=\"outlined\" sx={{ p: 3 }}>\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                                <SecurityIcon sx={{ mr: 2, color: 'warning.main' }} />\n                                <Typography variant=\"h6\">安全呼救</Typography>\n                            </Box>\n                            \n                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                                创建安全呼救快捷方式（功能开发中，点击显示占位界面）\n                            </Typography>\n\n                            <TextField\n                                fullWidth\n                                label=\"快捷方式名称\"\n                                value={securityName}\n                                onChange={(e) => setSecurityName(e.target.value)}\n                                sx={{ mb: 2 }}\n                                placeholder=\"安全呼救\"\n                            />\n\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"warning\"\n                                onClick={handleCreateSecurityShortcut}\n                                disabled={isCreating}\n                                startIcon={<SecurityIcon />}\n                            >\n                                {isCreating ? '创建中...' : '创建安全呼救快捷方式'}\n                            </Button>\n                        </Paper>\n                    </Grid>\n                </Grid>\n\n                <Divider sx={{ my: 3 }} />\n\n                {/* 工具按钮 */}\n                <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', flexWrap: 'wrap' }}>\n                    <Button\n                        variant=\"outlined\"\n                        onClick={handleCheckSupport}\n                        disabled={isCreating}\n                    >\n                        检查设备支持情况\n                    </Button>\n                    \n                    <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={handleRequestPermission}\n                        disabled={isCreating}\n                    >\n                        打开权限设置\n                    </Button>\n                </Box>\n\n                {/* 使用说明 */}\n                <Box sx={{ mt: 3, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                        使用说明：\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"div\">\n                        <ul style={{ margin: 0, paddingLeft: '20px' }}>\n                            <li>创建快捷方式后，请在桌面查看</li>\n                            <li>医疗呼救快捷方式会直接触发紧急呼救</li>\n                            <li>安全呼救功能正在开发中，明天会完善</li>\n                            <li>支持自定义快捷方式名称</li>\n                            <li><strong>重要：</strong>小米、华为、OPPO、VIVO等设备需要手动开启权限</li>\n                            <li>如果创建失败，请点击“打开权限设置”按钮</li>\n                        </ul>\n                    </Typography>\n                    \n                    <Box sx={{ mt: 2, p: 1.5, bgcolor: 'warning.light', borderRadius: 1, border: '1px solid', borderColor: 'warning.main' }}>\n                        <Typography variant=\"body2\" color=\"warning.dark\">\n                            <strong>ℹ️ 温馨提示：</strong>\n                            如果创建快捷方式时显示“没有权限”错误，请点击上方“打开权限设置”按钮，\n                            系统会自动跳转到对应的权限设置页面。\n                        </Typography>\n                    </Box>\n                </Box>\n            </Paper>\n        </Box>\n    );\n};\n\nexport default ShortcutConfig;","import { Dialog, DialogContent, IconButton } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\n\n// Add a React import for useRef\nimport React from 'react';\nimport { autoJsStoreUtils, autoWebViewJs, isRealInAndroid } from '@droid/android';\n\ninterface PrivacyDialogProps {\n  // open: boolean;\n  // onClose: () => void;\n  // onResult: (agree: boolean) => void;\n  type: string;\n  area: string;\n}\n\ninterface IPrivacyInfo{\n  agree:boolean;\n  disagreeTime:number;\n}\n\nexport function PrivacyDialog({ type, area }: PrivacyDialogProps) {\n  const url = `/privacies/${type}/${area}.html`;\n  const [iframeSrc, setIframeSrc] = useState(url);\n\n  const [open, setOpen] = useState(false);\n  function onClose() {\n    setOpen(false);\n  }\n\n  useEffect(()=>{\n    setIframeSrc(`/privacies/${type}/${area}.html`)\n  }, [type, area]);\n\n  useEffect(() => {\n    const def:IPrivacyInfo = {agree:false, disagreeTime:0}\n    const res = autoJsStoreUtils.read<IPrivacyInfo>(`privacy_${type}`, def);\n    const value:IPrivacyInfo = res && 'agree' in res ? res : def;\n    if(!isRealInAndroid){\n      return;\n    }\n    if(value.agree){\n      return\n    }\n    if(value.disagreeTime && value.disagreeTime != 0 &&  value.disagreeTime + 3 * 24 * 60 * 60 * 1000 > Date.now()){\n      return;\n    }\n    setOpen(true)\n  }, []);\n\n  useEffect(() => {\n    const handleMessage = (event: MessageEvent) => {\n      // Basic security check: ensure the message is from a trusted source if possible\n      // For now, we check the data structure.\n      if (event.source !== iframeRef.current?.contentWindow) {\n        return;\n      }\n\n      const { sender, agree } = event.data;\n\n      if (sender === 'privacy_page') {\n        console.log(`Received privacy decision: ${agree ? 'Agreed' : 'Disagreed'}`);\n\n        const value:IPrivacyInfo = {\n          agree,\n          disagreeTime: agree ? 0 : Date.now()\n        }\n        autoJsStoreUtils.write(`privacy_${type}`, value);\n        const s = `\n        var data = new com.fanfanlo.emergencycall.data.PrivacyData(${value.agree}, ${value.disagreeTime});\n        com.fanfanlo.emergencycall.data.PrivacyStateHolder.updateMainPrivacyByJs(data);\n        `\n        autoWebViewJs.callScript(s);\n\n        // onResult(agree);\n        onClose();\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n\n  const iframeRef = React.useRef<HTMLIFrameElement>(null);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          width: '80%',\n          height: '80%',\n          maxWidth: 'none',\n        },\n      }}>\n      <IconButton\n        aria-label=\"close\"\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 8,\n          color: theme => theme.palette.grey[500],\n        }}>\n        <CloseIcon />\n      </IconButton>\n      <DialogContent sx={{ padding: 0, overflow: 'hidden' }}>\n        {iframeSrc && (\n          <iframe\n            ref={iframeRef}\n            src={iframeSrc}\n            style={{ width: '100%', height: '100%', border: 'none' }}\n            title={`Privacy Policy - ${type}/${area}`}\n          />\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n\n","import { useEffect, useState } from \"react\";\r\nimport { PrivacyDialog } from \"./PrivacyDialog\";\r\nimport { autoJsStoreUtils } from \"@droid/android\";\r\n\r\n\r\nexport function ListenShowPrivacyContent({type}:{type:string}){\r\n\r\n    const [open, setOpen] = useState(false);\r\n    function onClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const value = autoJsStoreUtils.read(`privacy_${type}`, false)\r\n        console.log('privacy value is', value, typeof value);\r\n    }, [])\r\n    return(\r\n        <PrivacyDialog type={type} area=\"zh-cn\" />\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport { Box, TextField, Button, Typography, Paper } from '@mui/material';\nimport { autoWebViewJs } from '@droid/android';\nimport { parse } from 'path';\n\n\n\nexport const SensorMonitor: React.FC = () => {\n  const [threshold, setThreshold] = useState<string>('5.0');\n  const [isMonitoring, setIsMonitoring] = useState<boolean>(false);\n\n  // Effect to fetch the initial monitoring state from Android\n\n  useEffect(()=>{\n    try {\n      const script = `\n      var thresholdValue = com.fanfanlo.emergencycall.manager.SensorManager.getThreshold();\n      thresholdValue;`;\n      const {javaResultString} = autoWebViewJs.callScript(script);\n      const thresholdValue = parseFloat(javaResultString || '5.0');\n      console.log(\"script get threshold=\", thresholdValue, javaResultString);\n      setThreshold(thresholdValue.toString());\n    } catch (error) {\n      console.error('Error fetching initial threshold value:', error);\n    }\n  }, [])\n  function readIsMonitoring(){\n\n    try {\n      const script = `\n      var isMonitoring = com.fanfanlo.emergencycall.manager.SensorManager.isMonitoring();\n      isMonitoring;`;\n      const {javaResultString} = autoWebViewJs.callScript(script);\n      const isMonitoring = javaResultString === \"true\";\n      console.log(\"script get isMonitoring=\", isMonitoring, javaResultString);\n      setIsMonitoring(isMonitoring);\n    } catch (error) {\n      console.error('Error fetching initial monitoring state:', error);\n    }\n  }\n  useEffect(() => {\n    readIsMonitoring();\n  }, []);\n\n  const handleSetThreshold = () => {\n    const thresholdValue = parseFloat(threshold);\n    if (isNaN(thresholdValue)) {\n      alert('请输入一个有效的数字作为阈值。');\n      return;\n    }\n    try {\n      // This script now ONLY updates the threshold.\n      const script = `com.fanfanlo.emergencycall.manager.SensorManager.updateThreshold(${thresholdValue});`;\n      autoWebViewJs.callScript(script);\n      alert(`阈值已设置为: ${thresholdValue}`);\n    } catch (error) {\n      console.error('Error calling updateThreshold:', error);\n      alert('设置阈值失败。请确保您在安卓应用中。');\n    }\n  };\n\n  const handleToggleMonitoring = () => {\n    try {\n      if (isMonitoring) {\n        const script = `com.fanfanlo.emergencycall.manager.SensorManager.stopMonitoring();`;\n        autoWebViewJs.callScript(script);\n      } else {\n        const script = `com.fanfanlo.emergencycall.manager.SensorManager.startMonitoring();`;\n        autoWebViewJs.callScript(script);\n      }\n      readIsMonitoring();\n    } catch (error) {\n      console.error('Error toggling monitoring:', error);\n      alert('切换监控状态失败。请确保您在安卓应用中。');\n    }\n  };\n\n  return (\n    <Paper elevation={3} sx={{ padding: 2, margin: 2 }}>\n      <Typography variant=\"h6\" gutterBottom>\n        传感器监控控制\n      </Typography>\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, marginBottom: 2 }}>\n        <TextField\n          label=\"震动阈值\"\n          variant=\"outlined\"\n          type=\"number\"\n          value={threshold}\n          onChange={(e) => setThreshold(e.target.value)}\n          size=\"small\"\n        />\n        <Button variant=\"contained\" onClick={handleSetThreshold}>\n          设置\n        </Button>\n      </Box>\n      <Button\n        variant=\"contained\"\n        color={isMonitoring ? 'error' : 'primary'}\n        onClick={handleToggleMonitoring}\n        fullWidth\n      >\n        {isMonitoring ? '停止监控' : '开始监控'}\n      </Button>\n    </Paper>\n  );\n};\n\nexport default SensorMonitor;\n\n\n","import { autoWebViewJs } from \"@droid/android\";\r\nimport { Box, Button } from \"@mui/material\";\r\n\r\n\r\nexport function TestEmergencyCall() {\r\n    function onClick(){\r\n        const script = `\r\n        var instance = com.fanfanlo.emergencycall.service.SensorMonitoringService.instance;\r\n        if(instance){\r\n            instance.triggerEmergencyCall();\r\n        }\r\n        `\r\n        autoWebViewJs.callScript(script);\r\n    }\r\n    return(\r\n        <Box sx={{mt:\"10px\", mb:\"10px\"\r\n        }}>\r\n            <Button onClick={onClick}>\r\n                呼救\r\n            </Button>\r\n        </Box>  \r\n    )\r\n}","import { AppShell, TabbarContainer } from '@app/ui';\nimport { MeetingRoom5 } from '@im/livekit';\nimport { IMOpenPageLink } from '@im/matrix';\nimport { Box, Button, Grid2 } from '@mui/material';\nimport { InviteContactDialog } from '@src/components/dialogs/InviteContactDialog';\nimport InvitationManager from '@src/components/InvitationManager/InvitationManager';\nimport { JpushIsInitialized } from '@src/components/jpush/IsInitialized';\nimport { NavBar } from '@src/components/navbar/NavBar';\nimport PendingInvitationsList from '@src/components/PendingInvitationsList/PendingInvitationsList';\nimport PreAlarmConfig2 from '@src/components/pre-alarm-config2';\nimport ShortcutConfig from '@src/components/shortcut-config/ShortcutConfig';\nimport { ListenShowPrivacyContent } from '@src/components/privacies/ListenShowPrivacyContent';\nimport { SensorMonitor } from '@src/components/sensor-monitor/SensorMonitor';\nimport { TestEmergencyCall } from '@src/components/test/TestEmergencyCall';\nimport { mainModel } from '@src/libs/mc/main/MainModel';\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport MeetingList from '@src/components/meeting-list/MeetingList';\n\nfunction Content() {\n  const [openInviteDialog, setOpenInviteDialog] = useState(false);\n\n  return (\n    <Box sx={{ my: 2, p: 2 }}>\n      <ListenShowPrivacyContent type=\"main\" />\n      {/* <InvitationManager /> */}\n      <MeetingList />\n      <PendingInvitationsList />\n      <PreAlarmConfig2 />\n      {/* <PreAlarmConfigComponent /> */}\n      <JpushIsInitialized />\n      <TestEmergencyCall />\n      <Grid2 container spacing={2} sx={{ mb: 2 }}>\n        <Grid2 size={6}>\n          <Button variant=\"contained\" onClick={() => setOpenInviteDialog(true)}>\n            邀请紧急联系人\n          </Button>\n        </Grid2>\n        <Link href=\"/contacts\" style={{ textDecoration: 'none' }}>\n          联系人管理\n        </Link>\n      </Grid2>\n      <SensorMonitor />\n      {openInviteDialog && <InviteContactDialog open={openInviteDialog} onClose={() => setOpenInviteDialog(false)} />}\n\n      <MeetingRoom5\n        roomName=\"test-room\"\n        userName={`user-${Math.random().toString(36).substring(2, 8)}`}\n        livekitConfig={mainModel.appConfig.livekit}\n        // role=\"initiator\" // Add role for testing\n      />\n      \n      <ShortcutConfig />\n      \n      <Link href={\"/logs\"}>日志</Link>\n      <IMOpenPageLink />\n      <Box sx={{ mt: \"2rem\" }}></Box>\n    </Box>\n  );\n}\n\nexport default function Home() {\n  return (\n    <AppShell>\n      <TabbarContainer titleConf={{ ns: 'emergency-call/pages/home/content', key: 'home.title' }} navBar={<NavBar />}>\n        <Content />\n      </TabbarContainer>\n    </AppShell>\n  );\n}\n","import { useRouter } from \"next/router\";\r\nimport { useTranslation } from \"@fanfanlo\";\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport ListIcon from '@mui/icons-material/List';\r\nimport { BottomNavigation, BottomNavigationAction } from \"@mui/material\";\r\ninterface TabInfoType {\r\n  label: string;\r\n  value: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nexport function NavBar() {\r\n  const router = useRouter();\r\n  const { pathname } = router;\r\n  const { t } = useTranslation('emergency-call/components/navbar/content');\r\n  const tabInfoList: TabInfoType[] = [\r\n    { label: t('NavBar.home'), value: '/', icon: <HomeIcon /> },\r\n    // { label: t('NavBar.logs'), value: '/logs', icon: <ListIcon /> },\r\n    // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n    // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n    { label: t('NavBar.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n  ];\r\n  return (\r\n\r\n    <BottomNavigation showLabels value={pathname}>\r\n      {tabInfoList.map(e => (\r\n        <BottomNavigationAction\r\n          key={e.value}\r\n          label={e.label}\r\n          icon={e.icon}\r\n          data-id={`tabbar-${e.value}`}\r\n          className={pathname === e.value ? 'Mui-selected' : ''}\r\n          onClick={() => {\r\n            if (pathname === e.value) return;\r\n            router.push(e.value);\r\n          }}\r\n        />\r\n      ))}\r\n    </BottomNavigation>\r\n  );\r\n}","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3\\\\node_modules\\\\react-i18next\\\\dist\\\\es\\\\index.js\"","\"use client\";\r\n// 现在用的是这个文件\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport Backend, { type HttpBackendOptions } from \"i18next-http-backend\";\r\n\r\nimport i18next from \"i18next\";\r\nimport { Log } from \"../log/Log\";\r\nimport { getBuildTime, isServer } from \"../nextjs/env/env\";\r\nimport { fileMapUtils } from \"../utils\";\r\n;\r\nexport { useTranslation } from 'react-i18next';\r\nlet fileDateVersion:string = ''// = getConfig().publicRuntimeConfig?.version\r\nexport const i18nLogger = new Log(false, `i18n`);\r\nconst windowHref = (()=>{\r\n  if(typeof window === 'undefined')return ''\r\n  const u = new URL(window.location.href || window.parent?.location.href);\r\n  // 同域文本iframe里的页面会获取不到href，所以判断一下直接用父级的就行.\r\n  return u.origin == null || u.origin == 'null' ? '' : u.origin\r\n})()\r\nconst backendOptions = {\r\n  loadPath: function (lngs: string[], namespaces: string[]) {\r\n    const log = i18nLogger.sub(false, `i18n loadpath`);\r\n    log.pause = true;\r\n    const lng = lngs[0]\r\n    let p = ``\r\n    // p = `/options/_locales/${lngs[0].replace(\"-\", \"_\")}/messages.json`;\r\n    // p = `/locales/zh-CN/ns1/content.json`;\r\n    // p = `locales/${lng}/${namespaces[0]}.json?v=${fileDateVersion}`\r\n    const ps = namespaces[0].split('/')\r\n    ps.splice(ps.length - 1, 0, lng)\r\n    // p = `locales/${ps.join('/')}.json?v=${fileDateVersion}`\r\n    // p = `locales/${ps.join('/')}.json?v=${getBuildTime()}`\r\n    p = `locales/${ps.join('/')}.json`\r\n    log.log(`lngs=`, lngs);\r\n    log.log(`namespaces=`, namespaces);\r\n    log.log(\"p=\", p);\r\n    p = fileMapUtils.getFile(`/${p}`);\r\n    // console.log('map p=', p)\r\n    p = `${windowHref}/${p}`\r\n    return p;\r\n\r\n  },\r\n  parse: function (\r\n    data: string,\r\n    languages?: string | string[],\r\n    namespaces?: string | string[]\r\n  ) {\r\n    const log = i18nLogger.sub(false, `i18n backend parse`);\r\n    log.pause = true;\r\n    // log.log(`parrrse`, data, languages, namespaces);\r\n    const l = JSON.parse(data);\r\n    log.print(`before set i18ndata`);\r\n    // i18nData = l as II18n;\r\n    // log.log(`i18nData.rule.scripts.sys.rules`, i18nData.rule.scripts.sys.rules);\r\n    log.log(`parrrse`, languages, namespaces);\r\n    return l;\r\n  },\r\n};\r\nconst backend = new Backend();\r\nbackend.init(null, backendOptions);\r\nexport const i18n = i18next;\r\n// export const resources: Resource = {\r\n//   // 'zh-CN': {\r\n//   //   translation: _.merge({}, zhCN),\r\n//   // },\r\n//   // en: {\r\n//   //   translation: _.merge({}, en),\r\n//   // },\r\n// };\r\n\r\n\r\ni18n.on(\"languageChanged\", async function (lng) {\r\n  const log = i18nLogger.sub(false, `onlanguageChanged`);\r\n  log.pause = true;\r\n  log.log(`lllllng`, lng);\r\n  // lng = \"en\";\r\n  // const p = `/options/_locales/${lng.replace(\"-\", \"_\")}/messages.json`;\r\n});\r\n\r\n\r\n\r\n\r\nexport function i18nInit(_fileDateVersion:string=''){\r\n  fileDateVersion = _fileDateVersion\r\n  i18n\r\n  .use(LanguageDetector)\r\n  .use(backend)\r\n  .use(initReactI18next)\r\n  .init<HttpBackendOptions>({\r\n    load: \"currentOnly\",\r\n    // load: \"all\",\r\n    // supportedLngs: ['zh-CN', 'zh-TW', 'en', 'en-GB', 'ja'],\r\n    // resources,\r\n    fallbackLng: isServer ? \"en\" : \"zh-CN\",\r\n    // fallbackLng: \"zh-CN\",\r\n    // lng: \"zh-CN\",\r\n    partialBundledLanguages:true,\r\n    ns:[],\r\n    \r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    detection: {\r\n      caches: [\"localStorage\"],\r\n    },\r\n  });\r\n}\r\ni18n.on(\"missingKey\", function (lngs, namespace, key, res) {\r\n  console.error(\r\n    \"i18n mssing key, lngs=%s, namespace=%s, key=%s, res=%s\",\r\n    lngs,\r\n    namespace,\r\n    key,\r\n    res\r\n  );\r\n});\r\n\r\ni18n.on(\"loaded\", function (loaded) {\r\n  const log = i18nLogger.sub(false, `onloaded`);\r\n  log.pause = true;\r\n  log.log(`onloaded arguments`, loaded);\r\n});\r\n\r\ni18n.on(\"failedLoading\", function (lng, ns, msg) {\r\n  const log = i18nLogger.sub(false, `onfailedLoading`);\r\n  log.pause = true;\r\n  log.log(`failedLoading arguments`, lng, ns, msg);\r\n});\r\n\r\ni18n.on(\"added\", function () {\r\n  console.log('added', arguments)\r\n});   \r\n\r\nexport default i18n;","import { createContext } from \"react\";\r\nimport { storeUtils } from \"./store-utils\";\r\n// import { storeUtils } from \"./store\";\r\nconst s = storeUtils.namespace('store-page-context')\r\n\r\nexport interface IPageScrollPosition{\r\n    x:number\r\n    y:number\r\n}\r\n\r\nfunction create(){\r\n    return createContext(s)\r\n}\r\nexport const StorePageContext = createContext<any>(s)\r\n\r\nexport const StorePageDynamicContext = createContext<Record<string, any>>({})","'use client'\r\nimport { i18n, i18nInit, IPageScrollPosition, StorePageContext, StorePageDynamicContext, toProxy, watchUpdates, storeUtils } from \"@fanfanlo\";\r\nimport { useRouter } from \"next/router\";\r\nimport getConfig from \"node_modules/next/config\";\r\nimport { PropsWithChildren, useEffect } from \"react\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\n\r\ncheckReloadPage();\r\ni18nInit()\r\n\r\n\r\nfunction checkReloadPage(){\r\n  if(typeof window === 'undefined')return\r\n  if(getConfig().publicRuntimeConfig.isDevelopment){\r\n    return\r\n  }\r\n  if(window.location.href.indexOf('qiniu') == -1)return;\r\n  // 帮我检测url中是否包含_htmlRefreshTime的参数\r\n  // 如果没有，则添加_htmlRefresTime的参数，值为当前时间的毫秒数\r\n  const searchParams = new URL(window.location.href).searchParams\r\n  const htmlRefreshTime = searchParams.get('_htmlRefreshTime')\r\n  if (!htmlRefreshTime) {\r\n    const newUrl = new URL(window.location.href)\r\n    newUrl.searchParams.set('_htmlRefreshTime', String(Date.now()))\r\n    window.location.href = newUrl.toString()\r\n    return\r\n  }\r\n\r\n  const refreshTime = Number(htmlRefreshTime)\r\n  if (refreshTime + 2 * 60 * 1000 < Date.now()) {\r\n    const newUrl = new URL(window.location.href)\r\n    newUrl.searchParams.set('_htmlRefreshTime', String(Date.now()))\r\n    window.location.href = newUrl.toString()\r\n  }\r\n}\r\nexport function AppShell({ children }: PropsWithChildren) {\r\n  const router = useRouter();\r\n  const scrollKey = 'scrollPositionInfo'\r\n  const href = window.location.href.split(\"#\")[0]\r\n  const dynamicKey = `dynamic-${href}`\r\n  const s = storeUtils.namespace(dynamicKey);\r\n  let o: Record<string, unknown>|undefined = s.read(dynamicKey)\r\n  if (!o) {\r\n    o = {}\r\n    s.write(dynamicKey, o)\r\n  }\r\n  o = toProxy(o)\r\n  useEffect(() => {\r\n\r\n    router.beforePopState((state) => {\r\n      s.clearAll()\r\n      return true\r\n    })\r\n  })\r\n  useEffect(() => {\r\n    s.write(dynamicKey, o)\r\n    return watchUpdates(o, () => {\r\n      s.write(dynamicKey, o)\r\n    })\r\n  }, [])\r\n  useEffect(() => {\r\n    const info = (s.read(scrollKey) || { x: 0, y: 0 }) as IPageScrollPosition\r\n    // console.log('app shell scroll info info = ', info)\r\n    if (info.x == 0 && info.y == 0) {\r\n      listenScroll()\r\n    } else {\r\n      window.requestAnimationFrame(() => {\r\n        window.scrollTo(info.x, info.y)\r\n        listenScroll()\r\n      })\r\n    }\r\n    function onScroll(e: Event) {\r\n      // console.log('app shell on scroll', { x: window.scrollX, y: window.scrollY })\r\n      s.write(scrollKey, { x: window.scrollX, y: window.scrollY })\r\n    }\r\n    function listenScroll() {\r\n      window.addEventListener('scroll', onScroll)\r\n    }\r\n\r\n    function unsub() {\r\n      window.removeEventListener('scroll', onScroll)\r\n    }\r\n    return unsub\r\n  });\r\n  return (\r\n    <StorePageContext value={s}>\r\n      <StorePageDynamicContext value={o}>\r\n\r\n        <I18nextProvider i18n={i18n}>\r\n          {children}\r\n        </I18nextProvider>\r\n      </StorePageDynamicContext>\r\n    </StorePageContext>\r\n  )\r\n}","import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 会议用户信息\n */\nexport interface IMeetingUserInfo {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n}\n\n/**\n * @description 可参与的会议信息\n */\nexport interface IAvailableMeeting {\n    event_uuid: string;\n    short_code: string;\n    role: 'initiator' | 'responder';\n    status: string;\n    created_at: number;\n    initiator_info: IMeetingUserInfo;\n    livekit_room_name: string;\n    access_mode: string;\n}\n\n/**\n * @description 获取可参与会议的请求参数\n */\nexport interface IEventCallListAvailableMeetingsParams extends IRequestParams {\n    // 这个API不需要请求参数\n}\n\n/**\n * @description 获取可参与会议的响应结果\n */\nexport interface IEventCallListAvailableMeetingsResult extends IResultContent {\n    data: {\n        is_ok: boolean;\n        msg: string;\n        meetings: IAvailableMeeting[];\n    };\n}\n\n/**\n * @description 获取用户可参与的音视频会议列表\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEventCallListAvailableMeetings(opts: IRequestOptions<IEventCallListAvailableMeetingsParams>) {\n    const res = await request<IEventCallListAvailableMeetingsResult>(\n        tms.TEventCall, \n        tms.MEventCallListAvailableMeetings, \n        opts.params, \n        opts.gateway, \n        opts.handler\n    );\n    return res;\n}","import { \n  tmsEventCallListAvailableMeetings,\n  IAvailableMeeting,\n  IMeetingUserInfo\n} from '@app/model';\n\n// 重新导出类型供组件使用\nexport type AvailableMeeting = IAvailableMeeting;\nexport type MeetingUserInfo = IMeetingUserInfo;\n\n/**\n * 获取用户可参与的音视频会议列表\n */\nexport async function getAvailableMeetings(): Promise<AvailableMeeting[]> {\n  try {\n    const response = await tmsEventCallListAvailableMeetings({\n      params: {}, // 空参数对象\n      handler: { printLog: true }\n    });\n\n    console.log('📺 Meeting API response:', response);\n\n    // 检查响应状态\n    if (response.err || !response.shellIsOk || !response.dataIsOk) {\n      const errorMessage = response.err?.message || 'Failed to fetch available meetings';\n      throw new Error(errorMessage);\n    }\n\n    if(!response.data?.data) {\n\n    }\n    // 检查业务逻辑状态\n    if (!response.data?.is_ok) {\n      throw new Error(response.data?.data.msg || 'Business logic error');\n    }\n\n    return response.data.meetings;\n  } catch (error) {\n    console.error('📺 Error fetching available meetings:', error);\n    throw error;\n  }\n}\n\n/**\n * 根据shortcode构建会议URL\n */\nexport function buildMeetingUrl(shortCode: string, role: 'initiator' | 'responder'): string {\n  const baseUrl = '/join-call';\n  return `${baseUrl}?code=${shortCode}&role=${role}`;\n}\n\n/**\n * 格式化会议创建时间\n */\nexport function formatMeetingTime(timestamp: number): string {\n  const date = new Date(timestamp * 1000);\n  const now = new Date();\n  const diffMs = now.getTime() - date.getTime();\n  const diffMins = Math.floor(diffMs / (1000 * 60));\n  const diffHours = Math.floor(diffMins / 60);\n\n  if (diffMins < 1) {\n    return '刚刚';\n  } else if (diffMins < 60) {\n    return `${diffMins}分钟前`;\n  } else if (diffHours < 24) {\n    return `${diffHours}小时前`;\n  } else {\n    return date.toLocaleDateString('zh-CN', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n}\n\n/**\n * 获取会议角色的显示文本\n */\nexport function getRoleDisplayText(role: 'initiator' | 'responder'): string {\n  return role === 'initiator' ? '发起者' : '受邀者';\n}\n\n/**\n * 获取会议状态的显示文本和颜色\n */\nexport function getMeetingStatusInfo(status: string): { text: string; color: string } {\n  switch (status.toLowerCase()) {\n    case 'active':\n    case 'in_progress':\n      return { text: '进行中', color: '#4caf50' };\n    case 'waiting':\n      return { text: '等待中', color: '#ff9800' };\n    case 'ended':\n      return { text: '已结束', color: '#757575' };\n    default:\n      return { text: status, color: '#757575' };\n  }\n}","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  Avatar,\n  Chip,\n  IconButton,\n  List,\n  ListItem,\n  Alert,\n  CircularProgress,\n  Divider,\n  Stack\n} from '@mui/material';\nimport {\n  Refresh as RefreshIcon,\n  VideocamOutlined as VideoIcon,\n  Person as PersonIcon,\n  AccessTime as TimeIcon\n} from '@mui/icons-material';\nimport {\n  AvailableMeeting,\n  getAvailableMeetings,\n  buildMeetingUrl,\n  formatMeetingTime,\n  getRoleDisplayText,\n  getMeetingStatusInfo\n} from '../../services/meetingService';\nimport { useProxyWatch } from '@fanfanlo';\nimport { user } from '@app/model';\n\ninterface MeetingListProps {\n  className?: string;\n  onMeetingJoin?: (meeting: AvailableMeeting) => void;\n}\n\nconst MeetingList: React.FC<MeetingListProps> = ({ className, onMeetingJoin }) => {\n  const [meetings, setMeetings] = useState<AvailableMeeting[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n    const [token] = useProxyWatch(user, 'data.storeData.user_token', user.data.storeData.user_token);\n  // 加载会议列表\n  const loadMeetings = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const meetingList = await getAvailableMeetings();\n      setMeetings(meetingList);\n      console.log('📺 Loaded meetings:', meetingList);\n    } catch (err) {\n      const errorMsg = err instanceof Error ? err.message : '加载会议列表失败';\n      setError(errorMsg);\n      console.error('📺 Failed to load meetings:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 初始加载\n  useEffect(() => {\n    if(!token)return;\n    loadMeetings();\n  }, [token]);\n\n  // 加入会议\n  const handleJoinMeeting = (meeting: AvailableMeeting) => {\n    console.log('📺 Joining meeting:', meeting);\n    \n    if (onMeetingJoin) {\n      onMeetingJoin(meeting);\n    } else {\n      // 默认行为：跳转到会议页面\n      const meetingUrl = buildMeetingUrl(meeting.short_code, meeting.role);\n      window.location.href = meetingUrl;\n    }\n  };\n\n  // 渲染单个会议项\n  const renderMeetingItem = (meeting: AvailableMeeting) => {\n    const statusInfo = getMeetingStatusInfo(meeting.status);\n    const roleText = getRoleDisplayText(meeting.role);\n    const timeText = formatMeetingTime(meeting.created_at);\n    return (\n      <Card \n        key={meeting.event_uuid} \n        sx={{ \n          mb: 2, \n          cursor: 'pointer',\n          transition: 'all 0.2s ease',\n          '&:hover': {\n            boxShadow: 3,\n            transform: 'translateY(-2px)'\n          }\n        }}\n        onClick={() => handleJoinMeeting(meeting)}\n      >\n        <CardContent>\n          <Box sx={{ display: 'flex', alignItems: 'flex-start', gap: 2 }}>\n            {/* 发起者头像 */}\n            <Avatar \n              src={meeting.initiator_info.avatar_url} \n              sx={{ width: 48, height: 48 }}\n            >\n              {meeting.initiator_info.display_name.charAt(0)}\n            </Avatar>\n\n            {/* 会议信息 */}\n            <Box sx={{ flex: 1 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n                <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: 600 }}>\n                  {meeting.initiator_info.display_name}\n                </Typography>\n                <Chip \n                  label={roleText}\n                  size=\"small\"\n                  color={meeting.role === 'initiator' ? 'primary' : 'secondary'}\n                  sx={{ fontSize: '0.75rem' }}\n                />\n                <Chip \n                  label={statusInfo.text}\n                  size=\"small\"\n                  sx={{ \n                    fontSize: '0.75rem',\n                    backgroundColor: statusInfo.color,\n                    color: 'white'\n                  }}\n                />\n              </Box>\n\n              <Stack direction=\"row\" spacing={2} sx={{ mb: 1 }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n                  <VideoIcon sx={{ fontSize: 16, color: 'text.secondary' }} />\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {meeting.short_code}\n                  </Typography>\n                </Box>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n                  <TimeIcon sx={{ fontSize: 16, color: 'text.secondary' }} />\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {timeText}\n                  </Typography>\n                </Box>\n              </Stack>\n\n              {meeting.access_mode && (\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                  访问模式: {meeting.access_mode}\n                </Typography>\n              )}\n            </Box>\n\n            {/* 加入按钮 */}\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              startIcon={<VideoIcon />}\n              sx={{ minWidth: 100 }}\n              onClick={(e) => {\n                e.stopPropagation();\n                handleJoinMeeting(meeting);\n              }}\n            >\n              加入会议\n            </Button>\n          </Box>\n        </CardContent>\n      </Card>\n    );\n  };\n\n if(!token){\n  return <></>\n }\n  return (\n    <Box className={className} sx={{ width: '100%', maxWidth: 800, mx: 'auto', p: 2 }}>\n      {/* 标题和刷新按钮 */}\n      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h5\" component=\"h1\" sx={{ fontWeight: 600 }}>\n          可参与的音视频会议\n        </Typography>\n        <IconButton \n          onClick={loadMeetings} \n          disabled={loading}\n          sx={{ \n            backgroundColor: 'primary.main',\n            color: 'white',\n            '&:hover': { backgroundColor: 'primary.dark' }\n          }}\n        >\n          <RefreshIcon />\n        </IconButton>\n      </Box>\n\n      {/* 错误信息 */}\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n          <Button \n            size=\"small\" \n            onClick={loadMeetings} \n            sx={{ ml: 1 }}\n          >\n            重试\n          </Button>\n        </Alert>\n      )}\n\n      {/* 加载状态 */}\n      {loading && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\n          <CircularProgress />\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\n            加载会议列表中...\n          </Typography>\n        </Box>\n      )}\n\n      {/* 会议列表 */}\n      {!loading && !error && (\n        <>\n          {meetings.length === 0 ? (\n            <Box sx={{ textAlign: 'center', py: 6 }}>\n              {/* <VideoIcon sx={{ fontSize: 64, color: 'text.secondary', mb: 2 }} /> */}\n              {/* <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n                暂无可参与的会议\n              </Typography> */}\n              {/* <Typography variant=\"body2\" color=\"text.secondary\">\n                发起新的紧急呼救或等待他人邀请您参与会议\n              </Typography> */}\n            </Box>\n          ) : (\n            <Box>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                共找到 {meetings.length} 个可参与的会议\n              </Typography>\n              {meetings.map(renderMeetingItem)}\n            </Box>\n          )}\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default MeetingList;","import { Box, Button, Container } from '@mui/material';\r\nimport { createContext, PropsWithChildren, useContext, useEffect } from 'react';\r\nimport { ITitleI18nConf, ITitleI18nNsConf, ITitleI18nTitleConf } from '.';\r\nimport { isBuild, isDev, isServer, loadI18nValue, publicRuntimeConfig } from '@fanfanlo';\r\nimport { read } from 'fs';\r\nimport { useTranslation } from '@fanfanlo';\r\n\r\n\r\nfunction Reload(){\r\n  if(!isDev)return <>  </>\r\n  const {t} = useTranslation(\"app-ui/components/page/content\")\r\n  return(\r\n    <Box>\r\n      <Button onClick={() => {window.location.reload()}}>{t(\"PageContent.refresh\")}</Button>\r\n      {new Date().toLocaleString()}\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst ScrollP = createContext({ x: 0, y: 0 });\r\nlet index = 0;\r\nexport default function PageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren) {\r\n  index++;\r\n  const scroll = useContext(ScrollP);\r\n  const clazz = `${Date.now() + Math.random() * Date.now()}`;\r\n  useEffect(()=>{\r\n    async function loadTitle(){\r\n      if(!titleConf)return\r\n      let title = titleConf.title\r\n      if(titleConf.ns){\r\n        title = await loadI18nValue(titleConf.ns, titleConf.key || \"content.title\")\r\n      }\r\n      if(!title)return\r\n      document.title = title\r\n    }\r\n    loadTitle()\r\n  }, [])\r\n  useEffect(() => {\r\n    const container = document.getElementsByClassName(clazz)[0];\r\n    if (!container) return;\r\n    container.scrollTop = scroll.y;\r\n    const onScroll = () => {\r\n      var scrollTop = container.scrollTop;\r\n      scroll.y = scrollTop;\r\n    };\r\n    container.removeEventListener('scroll', onScroll);\r\n    container.addEventListener('scroll', onScroll, { passive: true });\r\n    return () => container.removeEventListener('scroll', onScroll);\r\n  }, [clazz, scroll]);\r\n  return (\r\n\r\n    <Container className={clazz} sx={{ flexGrow: 1, overflow: 'auto', padding: \"0px\" }}>\r\n      <Box>\r\n        {(reload || (reload == undefined)) && <Reload />}\r\n        \r\n        {children}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { PropsWithChildren } from \"react\";\r\nimport PageContent from \"./PageContent\";\r\nimport { ITitleI18nConf } from \".\";\r\nexport default function AndroidPageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren)  {\r\n    return (\r\n        <PageContent titleConf={titleConf} reload={reload}>\r\n            {children}\r\n        </PageContent>\r\n    )\r\n}\r\n","import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { IRequestHandler, request } from \"@fanfanlo\";\n\n/**\n * 获取所有邀请的请求参数\n */\nexport interface IParamsListAllInvitations {\n  // 可以添加分页等参数\n  page?: number;\n  page_size?: number;\n}\n\n/**\n * 用户信息\n */\nexport interface IInvitationUserInfo {\n  user_id: string;\n  display_name: string;\n  avatar_url?: string;\n}\n\n// 邀请状态类型\nexport type InviteStatus = 'pending' | 'accepted' | 'declined' | 'expired' | 'cancelled';\n\n// 邀请记录详情\nexport interface IInvitationDetails {\n  invitation_id: string;\n  user_info: {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n  };\n  status: InviteStatus;\n  message: string;\n  created_at: number;\n  expires_at: number;\n}\n\n/**\n * 获取所有邀请的响应结果\n */\nexport interface IResultListAllInvitations {\n  is_ok: boolean;\n  msg?: string;\n  sent_invitations: IInvitationDetails[];\n  received_invitations: IInvitationDetails[];\n}\n\n/**\n * 响应邀请的请求参数\n */\nexport interface IParamsRespondToInvite {\n  invitation_id: string;\n  action: 'accept' | 'decline' | 'cancel' | 'remove';\n}\n\n/**\n * 获取所有邀请（发送和接收的）\n */\nexport async function tmsEmergencyCallListAllInvitations(\n  opts: IRequestOptions<IParamsListAllInvitations>\n) {\n  return request<IResultListAllInvitations, IParamsListAllInvitations>(\n    tms.TEmc,\n    tms.MEmcListAllInvitations,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n/**\n * 取消或删除邀请\n * @param invitationId 邀请ID\n * @param isReceived 是否是接收的邀请\n * @returns Promise\n */\nexport async function cancelOrRemoveInvitation(\n  invitationId: string,\n  isReceived: boolean\n) {\n  const action = isReceived ? 'remove' : 'cancel';\n  return emergencyCallInvitationService.respondToInvite({\n    params: {\n      invitation_id: invitationId,\n      action\n    }\n  } as any);\n}\n\n/**\n * 响应邀请\n */\nexport async function tmsEmergencyCallRespondToInvite(\n  opts: IRequestOptions<IParamsRespondToInvite>\n) {\n  return request<{ is_ok: boolean; msg?: string }, IParamsRespondToInvite>(\n    tms.TEmc,\n    tms.MEmcRespondToInvite,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出所有接口\nexport const emergencyCallInvitationService = {\n  listAllInvitations: tmsEmergencyCallListAllInvitations,\n  respondToInvite: tmsEmergencyCallRespondToInvite,\n};\n\nexport default emergencyCallInvitationService;\n","'use client';\r\nimport { BottomNavigation, BottomNavigationAction, Box, CssBaseline, Paper, Stack } from '@mui/material';\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport StorefrontIcon from '@mui/icons-material/Storefront';\r\nimport { useRouter } from 'next/router';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ITitleI18nConf } from '../page';\r\nimport AndroidPageContent from '../page/AndroidPageContent';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\n// interface TabInfoType {\r\n//   label: string;\r\n//   value: string;\r\n//   icon: React.ReactNode;\r\n// }\r\n\r\nfunction BottomBar({navBar}:{navBar?:React.ReactNode}) {\r\n  return <Paper\r\n    id=\"bottom-navigation\"\r\n    sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }}\r\n    elevation={3}>\r\n    {/* <NavBar /> */}\r\n    {navBar}\r\n  </Paper>;\r\n}\r\n// function NavBar() {\r\n//   const router = useRouter();\r\n//   const { pathname } = router;\r\n//   const { t } = useTranslation('app-ui/components/tabbar/content');\r\n//   const tabInfoList: TabInfoType[] = [\r\n//     { label: t('content.home'), value: '/', icon: <HomeIcon /> },\r\n//     // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n//     // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n//     { label: t('content.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n//   ];\r\n//   return (\r\n\r\n//     <BottomNavigation showLabels value={pathname}>\r\n//       {tabInfoList.map(e => (\r\n//         <BottomNavigationAction\r\n//           key={e.value}\r\n//           label={e.label}\r\n//           icon={e.icon}\r\n//           data-id={`tabbar-${e.value}`}\r\n//           className={pathname === e.value ? 'Mui-selected' : ''}\r\n//           onClick={() => {\r\n//             if (pathname === e.value) return;\r\n//             router.push(e.value);\r\n//           }}\r\n//         />\r\n//       ))}\r\n//     </BottomNavigation>\r\n//   );\r\n// }\r\n\r\n\r\n// testWatchUpdates()\r\nexport function TabbarContainer({ children, titleConf, navBar }: {titleConf?:ITitleI18nConf, navBar:React.ReactNode} & PropsWithChildren)  {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', height2: '100vh' }}>\r\n      <CssBaseline />\r\n      <Stack direction={\"column\"} spacing={3}\r\n      \r\n      >\r\n        <AndroidPageContent titleConf={titleConf}>\r\n          {children}\r\n        </AndroidPageContent>\r\n        <BottomBar navBar={navBar} />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\n"],"names":["React","useCallback","useEffect","useRef","useState","forwardRef","Room","RoomEvent","RemoteParticipant","RemoteTrack","Track","createLocalAudioTrack","createLocalVideoTrack","Box","Button","Typography","Alert","IconButton","CircularProgress","Grid","Mic","MicIcon","MicOff","MicOffIcon","Videocam","VideoIcon","VideocamOff","VideoOffIcon","CallEnd","CallEndIcon","VolumeUp","VolumeUpIcon","VolumeOff","VolumeOffIcon","Refresh","RefreshIcon","Visibility","VisibilityIcon","VisibilityOff","VisibilityOffIcon","Log","logger","uiLogger","sub","VIDEO_PRESET","width","height","frameRate","maxBitrate","MeetingRoomComponent","ref","livekitConfig","roomName","userName","onDisconnect","onError","className","style","sx","directly","globalMediaState","setGlobalMediaState","isAudioEnabled","isVideoEnabled","remoteMediaState","setRemoteMediaState","isAudioSubscribed","isVideoSubscribed","toggleRemoteAudio","newState","log","prev","from","to","roomRef","current","participantCount","remoteParticipants","size","forEach","participant","identity","audioTrackCount","trackPublications","publication","kind","Kind","Audio","trackSid","isSubscribed","setSubscribed","toggleRemoteVideo","videoTrackCount","Video","handleParticipantConnected","audioSubscribed","videoSubscribed","audioTracksProcessed","videoTracksProcessed","isAudio","shouldSubscribe","audioTracks","videoTracks","setParticipants","exists","some","p","localTracksRef","videoElements","audioElements","participantStates","setParticipantStates","isUnmountedRef","isConnecting","setIsConnecting","hasConnected","setHasConnected","error","setError","isMuted","setIsMuted","setIsVideoEnabled","participants","fetchToken","response","fetch","jwt","method","headers","body","JSON","stringify","room_name","ok","Error","data","json","token","connectToRoom","audioTrack","videoTrack","createLocalTracks","room","adaptiveStream","dynacast","videoCaptureDefaults","resolution","publishDefaults","dtx","red","forceStereo","simulcast","setupRoomListeners","connect","wsUrl","autoSubscribe","Promise","all","localParticipant","publishTrack","publishError","Array","values","updateParticipantState","initParticipantState","getTrackPublications","track","handleTrackSubscribed","cleanupTracks","disconnect","e","echoCancellation","noiseSuppression","autoGainControl","tracks","stop","detach","trackElementsRef","videoElementsRef","audioElementsRef","state","isAudioEnabledGlobal","isVideoEnabledGlobal","isVideoTrack","updateTrackState","stateUpdate","on","participantExists","off","eventHandlers","participantConnected","handleTrackPublished","once","participantDisconnected","newParticipants","filter","map","trackSubscribed","disconnected","reason","reasonStr","toString","reconnecting","reconnected","Disconnected","Reconnecting","Reconnected","ParticipantConnected","ParticipantDisconnected","TrackSubscribed","undefined","leaveMeeting","Object","el","remove","cleanup","isUnmounting","find","t","updateGlobalMediaState","audioEnabled","videoEnabled","toggleMute","newGlobalAudioState","unmute","mute","toggleVideo","newGlobalVideoState","handleLocalMuteToggle","newMutedState","handleLocalVideoToggle","newVideoState","getParticipantState","pub","handleToggleAudio","currentState","handleToggleVideo","getEffectiveMediaState","participantId","ParticipantVideo","memo","isLocal","videoRef","setVideoTrack","videoPublication","handleTrackUnsubscribed","TrackUnsubscribed","videoElement","firstChild","removeChild","attach","aspectRatio","bgcolor","display","alignItems","justifyContent","position","video","autoPlay","playsInline","muted","objectFit","top","left","right","bottom","borderRadius","color","fontSize","fontWeight","charAt","toUpperCase","ParticipantAudio","audioRef","setAudioTrack","audioPublication","audioElement","audio","renderParticipant","effectiveState","overflow","boxShadow","container","gap","item","onClick","variant","title","renderControlButtons","renderMainContent","flexDirection","flex","spacing","xs","md","length","borderTop","borderColor","gutterBottom","disabled","startIcon","mt","ml","content","severity","m","MeetingRoom5","displayName","request","tms","tmsEmcInviteContacts","opts","res","TEmc","MEmcInviteContacts","params","gateway","handler","tmsEmcGetContactTypes","MEmcGetContactTypes","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Autocomplete","user","toast","matrixUser","authService","useProxyWatch","fileLogger","isValidIdentity","text","test","is11DigitNumber","InviteContactDialog","open","onClose","onInviteSent","contacts","setContacts","remark","setRemark","callType","setCallType","availableCallTypes","setAvailableCallTypes","console","message","setMessage","isLoading","setIsLoading","isTypesLoading","setIsTypesLoading","pendingParams","setPendingParams","executionLock","accessToken","userData","userInfo","loginResponse","access_token","isUserLoggedIn","sessionData","global_user_info","userToken","storeData","user_token","finalParams","matrix_access_token","type","executeApiCall","responseData","printLog","err","shellIsOk","dataIsOk","errorMessage","results","msg","successResults","r","result_code","infoResults","errorResults","success","infoMessages","Boolean","join","errorMessages","fetchCallTypes","types","formattedTypes","id","uuid","name","is_system","defaultType","warn","handleSendInvitation","contactInputs","split","c","trim","contactIdentities","input","push","identityType","appLoggedIn","showLoginDialog","currentAccessToken","apiParams","maxWidth","fullWidth","component","autoFocus","margin","label","multiline","rows","placeholder","value","onChange","target","freeSolo","options","option","event","newValue","inputValue","onInputChange","newInputValue","disablePortal","disableClearable","forcePopupIcon","mb","renderInput","InputProps","endAdornment","ListboxProps","maxHeight","autoWebViewJs","JpushIsInitialized","isInitialized","setIsInitialized","refresh","script","javaResultData","callScript","span","tmsEmergencyCallListPendingReceivedInvitations","MEmcListPendingReceivedInvitations","emergencyCallPendingInvitationService","listPendingReceivedInvitations","Card","CardContent","CardActions","Avatar","Chip","Stack","Check","CheckIcon","Close","CloseIcon","AccessTime","AccessTimeIcon","Notifications","NotificationsIcon","formatDistanceToNow","zhCN","emergencyCallInvitationService","AppModelEvent","appModel","PendingInvitationCard","invitation","onRespond","isProcessing","isProcessingAction","setIsProcessingAction","handleRespond","action","isExpired","Date","expires_at","opacity","src","user_info","avatar_url","alt","display_name","mr","flexGrow","created_at","addSuffix","locale","textAlign","icon","pt","PendingInvitationsList","invitations","setInvitations","setIsProcessing","loadPendingInvitations","is_ok","handleRespondToInvite","invitationId","respondToInvite","invitation_id","invite","dispatcher","emit","InviteListUpdated","unsubscribe","addListener","Switch","Paper","Collapse","Divider","FormControlLabel","Tooltip","FormControl","MenuItem","InputLabel","Select","DragIndicator","DragIndicatorIcon","ExpandLess","Settings","Delete","PlayArrow","Stop","Vibration","VibrationIcon","DndContext","closestCenter","KeyboardSensor","PointerSensor","TouchSensor","useSensor","useSensors","arrayMove","SortableContext","sortableKeyboardCoordinates","useSortable","verticalListSortingStrategy","CSS","debounce","autoJsStoreUtils","PRE_ALARM_CONFIG_KEY","defaultSoundResources","SortableActionItem","isPlaying","onUpdate","onRemove","onPreview","onStopPreview","attributes","listeners","setNodeRef","transform","transition","isDragging","Transform","zIndex","elevation","userSelect","cursor","touchAction","duration","parseInt","resourceId","startAdornment","sound","PreAlarmConfig2","config","setConfig","expanded","setExpanded","playingSoundId","setPlayingSoundId","debouncedWrite","newConfig","write","sensors","activationConstraint","distance","delay","tolerance","coordinateGetter","loadConfig","storedConfig","read","actionsWithIds","actions","Math","random","substr","enabled","maxWaitDuration","updateConfig","updates","handleToggleEnabled","checked","handleAddAction","newAction","now","handleUpdateAction","handleRemoveAction","handleDragEnd","active","over","oldIndex","findIndex","a","newIndex","handlePreviewSound","handleStopSound","window","SoundManager","previewSound","stopPreview","control","in","border","my","direction","collisionDetection","onDragEnd","items","strategy","MedicalServices","MedicalIcon","Security","SecurityIcon","Shortcut","ShortcutIcon","ShortcutConfig","medicalName","setMedicalName","securityName","setSecurityName","isCreating","setIsCreating","handleCreateMedicalShortcut","supportScript","javaResultString","supportResult","handleCreateSecurityShortcut","handleCheckSupport","brandScript","guideScript","brandResult","guideResult","supportInfo","handleRequestPermission","result","startsWith","fallbackScript","fallbackResult","brand","brandName","guideText","fallbackError","pre","whiteSpace","flexWrap","ul","paddingLeft","li","strong","isRealInAndroid","PrivacyDialog","area","url","iframeSrc","setIframeSrc","setOpen","def","agree","disagreeTime","handleMessage","iframeRef","source","contentWindow","sender","s","addEventListener","removeEventListener","PaperProps","aria-label","theme","palette","grey","padding","iframe","ListenShowPrivacyContent","SensorMonitor","threshold","setThreshold","isMonitoring","setIsMonitoring","thresholdValue","parseFloat","readIsMonitoring","handleSetThreshold","isNaN","alert","handleToggleMonitoring","marginBottom","TestEmergencyCall","AppShell","TabbarContainer","IMOpenPageLink","Grid2","NavBar","mainModel","Link","MeetingList","Content","openInviteDialog","setOpenInviteDialog","href","textDecoration","substring","appConfig","livekit","Home","titleConf","ns","key","navBar","useRouter","useTranslation","HomeIcon","SettingsIcon","BottomNavigation","BottomNavigationAction","router","pathname","tabInfoList","showLabels","data-id","initReactI18next","LanguageDetector","Backend","i18next","isServer","fileMapUtils","fileDateVersion","i18nLogger","windowHref","u","URL","location","parent","origin","backendOptions","loadPath","lngs","namespaces","pause","lng","ps","splice","getFile","parse","languages","l","print","backend","init","i18n","i18nInit","_fileDateVersion","use","load","fallbackLng","partialBundledLanguages","debug","interpolation","escapeValue","detection","caches","namespace","loaded","arguments","createContext","storeUtils","create","StorePageContext","StorePageDynamicContext","toProxy","watchUpdates","getConfig","I18nextProvider","checkReloadPage","publicRuntimeConfig","isDevelopment","indexOf","searchParams","htmlRefreshTime","get","newUrl","set","String","refreshTime","Number","children","scrollKey","dynamicKey","o","beforePopState","clearAll","info","x","y","listenScroll","requestAnimationFrame","scrollTo","onScroll","scrollX","scrollY","unsub","tmsEventCallListAvailableMeetings","TEventCall","MEventCallListAvailableMeetings","getAvailableMeetings","meetings","buildMeetingUrl","shortCode","role","baseUrl","formatMeetingTime","timestamp","date","diffMs","getTime","diffMins","floor","diffHours","toLocaleDateString","month","day","hour","minute","getRoleDisplayText","getMeetingStatusInfo","status","toLowerCase","VideocamOutlined","TimeIcon","onMeetingJoin","setMeetings","loading","setLoading","loadMeetings","meetingList","errorMsg","handleJoinMeeting","meeting","meetingUrl","short_code","renderMeetingItem","statusInfo","roleText","timeText","initiator_info","backgroundColor","access_mode","minWidth","stopPropagation","event_uuid","mx","py","Container","useContext","isDev","loadI18nValue","Reload","reload","toLocaleString","ScrollP","index","PageContent","scroll","clazz","loadTitle","document","getElementsByClassName","scrollTop","passive","AndroidPageContent","tmsEmergencyCallListAllInvitations","MEmcListAllInvitations","cancelOrRemoveInvitation","isReceived","tmsEmergencyCallRespondToInvite","MEmcRespondToInvite","listAllInvitations","CssBaseline","BottomBar","height2"],"sourceRoot":"","ignoreList":[7,16]}