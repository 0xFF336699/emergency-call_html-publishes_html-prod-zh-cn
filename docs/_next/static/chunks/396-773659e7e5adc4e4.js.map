{"version":3,"file":"static/chunks/396-773659e7e5adc4e4.js","mappings":"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","sources":["webpack://_N_E/../../libs/im/livekit/src/livekit-meeting/MeetingRoom5.tsx","webpack://_N_E/../../libs/app/model/src/remote/emc/inviteContacts.ts","webpack://_N_E/../../libs/app/model/src/remote/emc/tmsEmcGetContactTypes.ts","webpack://_N_E/./src/components/dialogs/InviteContactDialog.tsx","webpack://_N_E/./src/components/jpush/IsInitialized.tsx","webpack://_N_E/./src/components/privacies/PrivacyDialog.tsx","webpack://_N_E/./src/components/privacies/ListenShowPrivacyContent.tsx","webpack://_N_E/./src/components/sensor-monitor/SensorMonitor.tsx","webpack://_N_E/./src/components/test/TestEmergencyCall.tsx","webpack://_N_E/./src/pages/home/index.tsx","webpack://_N_E/./src/components/navbar/NavBar.tsx","webpack://_N_E/../../node_modules/.pnpm/react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3/node_modules/react-i18next/dist/es/index.js","webpack://_N_E/../../libs/fanfanlo/src/i18n/i18n-init.ts","webpack://_N_E/../../libs/fanfanlo/src/storage/store-page-context.tsx","webpack://_N_E/../../libs/app/ui/src/components/app/AppShell.tsx","webpack://_N_E/../../libs/app/ui/src/components/page/PageContent.tsx","webpack://_N_E/../../libs/app/ui/src/components/page/AndroidPageContent.tsx","webpack://_N_E/../../libs/app/ui/src/components/tabbar/Tabbar.tsx"],"sourcesContent":["import React, {\r\n    useCallback,\r\n    useEffect,\r\n    useRef,\r\n    useState,\r\n    forwardRef,\r\n    ForwardedRef\r\n} from 'react';\r\nimport {\r\n    Room,\r\n    RoomEvent,\r\n    Participant,\r\n    RemoteParticipant,\r\n    RemoteTrack,\r\n    Track,\r\n    LocalTrack,\r\n    LocalVideoTrack,\r\n    LocalAudioTrack,\r\n    createLocalAudioTrack,\r\n    createLocalVideoTrack,\r\n    VideoPreset,\r\n    VideoPresets,\r\n    TrackPublication,\r\n    LocalParticipant\r\n} from 'livekit-client';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    Alert,\r\n    IconButton,\r\n    CircularProgress,\r\n    Stack,\r\n    SxProps,\r\n    Theme\r\n} from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport {\r\n    Mic as MicIcon,\r\n    MicOff as MicOffIcon,\r\n    ScreenShare as ScreenShareIcon,\r\n    StopScreenShare as StopScreenShareIcon,\r\n    Videocam as VideoIcon,\r\n    VideocamOff as VideoOffIcon,\r\n    CallEnd as CallEndIcon,\r\n    Settings as SettingsIcon,\r\n    VolumeUp as VolumeUpIcon,\r\n    VolumeOff as VolumeOffIcon,\r\n    Fullscreen as FullscreenIcon,\r\n    FullscreenExit as FullscreenExitIcon,\r\n    Refresh as RefreshIcon,\r\n    Visibility as VisibilityIcon,\r\n    VisibilityOff as VisibilityOffIcon\r\n} from '@mui/icons-material';\r\nimport { Log } from '@fanfanlo';\r\n// import { mainModel } from '@src/libs/mc/main/MainModel';\r\nimport { MeetingRoomProps, VideoPresetConfig, ExtendedParticipantState, ParticipantState } from './meeting-room.intf';\r\n\r\n// 日志记录器\r\nconst logger = new Log(false, 'livekit-meeting.MeetingRoom');\r\nconst uiLogger = logger.sub(false, 'MeetingRoom_ui');\r\n\r\n// 视频预设\r\nconst VIDEO_PRESET: VideoPresetConfig = {\r\n    width: 1280,\r\n    height: 720,\r\n    // @ts-ignore - frameRate is used by LiveKit internally\r\n    frameRate: 24,\r\n    maxBitrate: 3000 * 1000, // 3Mbps\r\n};\r\n\r\n// 类型定义已移至 meetint-room.intf.ts\r\n\r\n\r\n// function getTokenEndpoint(): string {\r\n//     if (!mainModel.appConfig?.livekit?.jwt) {\r\n//         throw new Error('LiveKit JWT endpoint is not configured');\r\n//     }\r\n//     return `${mainModel.appConfig.livekit.jwt}/token`;\r\n// }\r\n// 主组件实现\r\nfunction MeetingRoomComponent(\r\n    {\r\n        livekitConfig,\r\n        roomName,\r\n        userName,\r\n        onDisconnect,\r\n        onError,\r\n        className = '',\r\n        style,\r\n        sx,\r\n        directly = false,\r\n    }: MeetingRoomProps,\r\n    ref: ForwardedRef<HTMLDivElement>\r\n) {\r\n    // 全局音视频控制状态\r\n    const [globalMediaState, setGlobalMediaState] = useState<{\r\n        isAudioEnabled: boolean;\r\n        isVideoEnabled: boolean;\r\n    }>({\r\n        isAudioEnabled: true,\r\n        isVideoEnabled: true,\r\n    });\r\n\r\n    // 远程参与者媒体订阅状态\r\n    const [remoteMediaState, setRemoteMediaState] = useState({\r\n        isAudioSubscribed: true,\r\n        isVideoSubscribed: true\r\n    });\r\n\r\n    // 切换全局远程音频订阅状态\r\n    const toggleRemoteAudio = useCallback(() => {\r\n        const newState = !remoteMediaState.isAudioSubscribed;\r\n        logger.log('Toggling remote audio subscription to:', newState);\r\n        \r\n        // 更新状态\r\n        setRemoteMediaState(prev => {\r\n            logger.log('Remote audio subscription state changed:', { \r\n                from: prev.isAudioSubscribed, \r\n                to: newState \r\n            });\r\n            return {\r\n                ...prev,\r\n                isAudioSubscribed: newState\r\n            };\r\n        });\r\n        \r\n        // 更新所有远程参与者的音频订阅状态\r\n        if (roomRef.current) {\r\n            const participantCount = roomRef.current.remoteParticipants.size;\r\n            logger.log(`Updating audio subscription for ${participantCount} remote participants`);\r\n            \r\n            roomRef.current.remoteParticipants.forEach((participant, identity) => {\r\n                let audioTrackCount = 0;\r\n                participant.trackPublications.forEach(publication => {\r\n                    if (publication.kind === Track.Kind.Audio) {\r\n                        audioTrackCount++;\r\n                        logger.log(`Setting audio subscription for ${identity} to ${newState}`, {\r\n                            trackSid: publication.trackSid,\r\n                            isSubscribed: publication.isSubscribed\r\n                        });\r\n                        publication.setSubscribed(newState);\r\n                    }\r\n                });\r\n                logger.log(`Processed ${audioTrackCount} audio tracks for participant: ${identity}`);\r\n            });\r\n        }\r\n    }, [remoteMediaState.isAudioSubscribed]);\r\n\r\n    // 切换全局远程视频订阅状态\r\n    const toggleRemoteVideo = useCallback(() => {\r\n        const newState = !remoteMediaState.isVideoSubscribed;\r\n        logger.log('Toggling remote video subscription to:', newState);\r\n        \r\n        // 更新状态\r\n        setRemoteMediaState(prev => {\r\n            logger.log('Remote video subscription state changed:', { \r\n                from: prev.isVideoSubscribed, \r\n                to: newState \r\n            });\r\n            return {\r\n                ...prev,\r\n                isVideoSubscribed: newState\r\n            };\r\n        });\r\n        \r\n        // 更新所有远程参与者的视频订阅状态\r\n        if (roomRef.current) {\r\n            const participantCount = roomRef.current.remoteParticipants.size;\r\n            logger.log(`Updating video subscription for ${participantCount} remote participants`);\r\n            \r\n            roomRef.current.remoteParticipants.forEach((participant, identity) => {\r\n                let videoTrackCount = 0;\r\n                participant.trackPublications.forEach(publication => {\r\n                    if (publication.kind === Track.Kind.Video) {\r\n                        videoTrackCount++;\r\n                        logger.log(`Setting video subscription for ${identity} to ${newState}`, {\r\n                            trackSid: publication.trackSid,\r\n                            isSubscribed: publication.isSubscribed\r\n                        });\r\n                        publication.setSubscribed(newState);\r\n                    }\r\n                });\r\n                logger.log(`Processed ${videoTrackCount} video tracks for participant: ${identity}`);\r\n            });\r\n        }\r\n    }, [remoteMediaState.isVideoSubscribed]);\r\n\r\n    // 处理参与者连接\r\n    const handleParticipantConnected = useCallback((participant: RemoteParticipant) => {\r\n        logger.log('Participant connected:', participant.identity, {\r\n            audioSubscribed: remoteMediaState.isAudioSubscribed,\r\n            videoSubscribed: remoteMediaState.isVideoSubscribed\r\n        });\r\n        \r\n        // 应用当前的全局订阅设置\r\n        let audioTracksProcessed = 0;\r\n        let videoTracksProcessed = 0;\r\n        \r\n        participant.trackPublications.forEach(publication => {\r\n            if (publication.kind === Track.Kind.Audio || publication.kind === Track.Kind.Video) {\r\n                const isAudio = publication.kind === Track.Kind.Audio;\r\n                const shouldSubscribe = isAudio ? \r\n                    remoteMediaState.isAudioSubscribed : \r\n                    remoteMediaState.isVideoSubscribed;\r\n                \r\n                logger.log(`Setting ${isAudio ? 'audio' : 'video'} subscription for new participant ${participant.identity} to ${shouldSubscribe}`, {\r\n                    trackSid: publication.trackSid,\r\n                    isSubscribed: publication.isSubscribed\r\n                });\r\n                \r\n                publication.setSubscribed(shouldSubscribe);\r\n                \r\n                if (isAudio) audioTracksProcessed++;\r\n                else videoTracksProcessed++;\r\n            }\r\n        });\r\n        \r\n        logger.log(`Processed tracks for new participant ${participant.identity}:`, {\r\n            audioTracks: audioTracksProcessed,\r\n            videoTracks: videoTracksProcessed\r\n        });\r\n        \r\n        // 添加参与者到状态\r\n        setParticipants(prev => {\r\n            const exists = prev.some(p => p.identity === participant.identity);\r\n            if (!exists) {\r\n                logger.log('Adding participant to state:', participant.identity);\r\n                return [...prev, participant];\r\n            }\r\n            logger.log('Participant already in state, not adding again:', participant.identity);\r\n            return prev;\r\n        });\r\n    }, [remoteMediaState]);\r\n\r\n    // Refs\r\n    const roomRef = useRef<Room | null>(null);\r\n    const localTracksRef = useRef<LocalTrack[]>([]);\r\n    const videoElements = useRef<Record<string, HTMLVideoElement>>({});\r\n    const audioElements = useRef<Record<string, HTMLAudioElement>>({});\r\n    const [participantStates, setParticipantStates] = useState<Record<string, ExtendedParticipantState>>({});\r\n    const isUnmountedRef = useRef(false);\r\n\r\n    // State\r\n    const [isConnecting, setIsConnecting] = useState(false);\r\n    const [hasConnected, setHasConnected] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [isMuted, setIsMuted] = useState(false);\r\n    const [isVideoEnabled, setIsVideoEnabled] = useState(true);\r\n    const [participants, setParticipants] = useState<RemoteParticipant[]>([]);\r\n\r\n    // 获取 token\r\n    const fetchToken = useCallback(async (roomName: string, identity: string) => {\r\n        try {\r\n            const response = await fetch(`${livekitConfig.jwt}/token`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    room_name: roomName,\r\n                    identity,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('获取 token 失败');\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data.token;\r\n        } catch (error) {\r\n            uiLogger.error('获取 token 失败:', error);\r\n            throw error;\r\n        }\r\n    }, []);\r\n\r\n    // 连接到房间\r\n    const connectToRoom = useCallback(async () => {\r\n        if (isConnecting || hasConnected) return;\r\n\r\n        setIsConnecting(true);\r\n        setError(null);\r\n\r\n        try {\r\n            // 1. 获取 token\r\n            const token = await fetchToken(roomName, userName);\r\n            uiLogger.log('token:', token);\r\n\r\n            // 2. 创建本地轨道\r\n            const { audioTrack, videoTrack } = await createLocalTracks();\r\n            localTracksRef.current = [audioTrack, videoTrack];\r\n            uiLogger.log('audioTrack:', audioTrack);\r\n            uiLogger.log('videoTrack:', videoTrack);\r\n            // 3. 创建房间连接\r\n            const room = new Room({\r\n                adaptiveStream: true,\r\n                dynacast: true,\r\n                videoCaptureDefaults: {\r\n                    resolution: VIDEO_PRESET,\r\n                },\r\n                // @ts-ignore - publishDefaults is a valid option\r\n                publishDefaults: {\r\n                    dtx: true,\r\n                    red: true,\r\n                    forceStereo: false,\r\n                    simulcast: true,\r\n                } as any, // Type assertion to bypass type checking for now\r\n            });\r\n            uiLogger.log('room:', room);\r\n            // 4. 设置事件监听\r\n            setupRoomListeners(room);\r\n\r\n            // 5. 连接到房间\r\n            await room.connect(\r\n                livekitConfig.wsUrl,\r\n                token,\r\n                {\r\n                    autoSubscribe: true,\r\n                }\r\n            );\r\n            uiLogger.log('room connected');\r\n            // 6. 发布本地轨道\r\n            try {\r\n                await Promise.all([\r\n                    room.localParticipant.publishTrack(audioTrack),\r\n                    room.localParticipant.publishTrack(videoTrack)\r\n                ]);\r\n            } catch (publishError) {\r\n                uiLogger.error('发布轨道失败:', publishError);\r\n                // 即使发布失败也继续，因为可能已经有其他参与者发布了相同的轨道\r\n            }\r\n\r\n            // 7. 更新引用和状态\r\n            roomRef.current = room;\r\n            setHasConnected(true);\r\n\r\n            // 8. 添加现有远程参与者到状态\r\n            const remoteParticipants = Array.from(room.remoteParticipants.values());\r\n            setParticipants(remoteParticipants);\r\n\r\n            // 9. 更新本地参与者状态\r\n            updateParticipantState(room.localParticipant.identity, {\r\n                isAudioEnabled: true,\r\n                isVideoEnabled: true,\r\n                audioTrack,\r\n                videoTrack,\r\n            });\r\n\r\n            // 10. 为现有远程参与者设置轨道\r\n            remoteParticipants.forEach(participant => {\r\n                // 初始化远程参与者状态\r\n                initParticipantState(participant);\r\n                uiLogger.log('已初始化远程参与者状态:', participant.identity);\r\n                \r\n                // 使用 getTrackPublications 获取所有轨道发布\r\n                participant.getTrackPublications().forEach(publication => {\r\n                    if (publication.track && publication.track instanceof RemoteTrack) {\r\n                        handleTrackSubscribed(publication.track, publication, participant);\r\n                    }\r\n                });\r\n            });\r\n            \r\n            // 初始化本地参与者状态\r\n            if (room.localParticipant) {\r\n                initParticipantState(room.localParticipant);\r\n                uiLogger.log('已初始化本地参与者状态:', room.localParticipant.identity);\r\n            }\r\n\r\n            uiLogger.log('成功加入会议');\r\n\r\n        } catch (error) {\r\n            uiLogger.error('连接房间失败啦:', error);\r\n            setError('加入会议失败，请检查网络和权限设置');\r\n            // 发生错误时清理资源\r\n            cleanupTracks(localTracksRef.current);\r\n            localTracksRef.current = [];\r\n\r\n            if (roomRef.current) {\r\n                try {\r\n                    await roomRef.current.disconnect();\r\n                } catch (e) {\r\n                    uiLogger.error('断开连接时出错:', e);\r\n                }\r\n                roomRef.current = null;\r\n            }\r\n        } finally {\r\n            setIsConnecting(false);\r\n        }\r\n    }, [roomName, userName, isConnecting, hasConnected, fetchToken]);\r\n\r\n    // 创建本地音视频轨道\r\n    const createLocalTracks = useCallback(async () => {\r\n        try {\r\n            const [audioTrack, videoTrack] = await Promise.all([\r\n                createLocalAudioTrack({\r\n                    echoCancellation: true,\r\n                    noiseSuppression: true,\r\n                    autoGainControl: true,\r\n                }),\r\n                createLocalVideoTrack({\r\n                    resolution: {\r\n                        width: 1280,\r\n                        height: 720,\r\n                        frameRate: 24,\r\n                    },\r\n                }),\r\n            ]);\r\n            return { audioTrack, videoTrack };\r\n        } catch (error) {\r\n            uiLogger.error('创建本地轨道失败:', error);\r\n            throw error;\r\n        }\r\n    }, []);\r\n\r\n    // 清理轨道\r\n    const cleanupTracks = useCallback((tracks: LocalTrack[]) => {\r\n        tracks.forEach(track => {\r\n            track.stop();\r\n            track.detach();\r\n        });\r\n    }, []);\r\n\r\n    // 跟踪已处理的轨道元素\r\n    const trackElementsRef = useRef<Record<string, boolean>>({});\r\n    const videoElementsRef = useRef<Record<string, HTMLVideoElement>>({});\r\n    const audioElementsRef = useRef<Record<string, HTMLAudioElement>>({});\r\n\r\n    // 更新参与者状态\r\n    const updateParticipantState = useCallback((identity: string, state: Partial<ParticipantState>) => {\r\n        setParticipantStates(prev => ({\r\n            ...prev,\r\n            [identity]: {\r\n                ...(prev[identity] || {\r\n                    isAudioEnabled: true,\r\n                    isVideoEnabled: true,\r\n                    isAudioEnabledGlobal: true,\r\n                    isVideoEnabledGlobal: true,\r\n                }),\r\n                ...state,\r\n            },\r\n        }));\r\n    }, []);\r\n    // 处理轨道订阅\r\n    const handleTrackSubscribed = useCallback((\r\n        track: RemoteTrack,\r\n        publication: TrackPublication,\r\n        participant: Participant\r\n    ) => {\r\n        if (!track) return () => { };\r\n\r\n        const { identity } = participant;\r\n        const isVideoTrack = track.kind === Track.Kind.Video;\r\n\r\n        uiLogger.log(`处理 ${track.kind} 轨道订阅:`, identity, track);\r\n\r\n        // 更新轨道状态的函数\r\n        const updateTrackState = () => {\r\n            const isMuted = track.isMuted;\r\n            const stateUpdate: Partial<ParticipantState> = {};\r\n\r\n            if (track.kind === Track.Kind.Audio) {\r\n                stateUpdate.isAudioEnabled = !isMuted;\r\n            } else if (track.kind === Track.Kind.Video) {\r\n                stateUpdate.isVideoEnabled = !isMuted;\r\n            }\r\n\r\n            updateParticipantState(identity, stateUpdate);\r\n\r\n            // 强制触发重新渲染以确保 ParticipantVideo 组件更新\r\n            if (isVideoTrack) {\r\n                setParticipants(prev => [...prev]);\r\n            }\r\n        };\r\n\r\n        // 监听轨道静音/取消静音事件\r\n        track.on('muted', updateTrackState);\r\n        track.on('unmuted', updateTrackState);\r\n\r\n        // 初始状态更新\r\n        updateTrackState();\r\n\r\n        // 强制更新参与者列表以触发重新渲染\r\n        // 这确保了即使没有状态变化，组件也会检查新的轨道\r\n        setParticipants(prev => {\r\n            const participantExists = prev.some(p => p.identity === identity);\r\n            if (!participantExists) {\r\n                return [...prev, participant as RemoteParticipant];\r\n            }\r\n            return [...prev];\r\n        });\r\n\r\n\r\n        // 清理函数\r\n        return () => {\r\n            track.off('muted', updateTrackState);\r\n            track.off('unmuted', updateTrackState);\r\n        };\r\n    }, [updateParticipantState]);\r\n\r\n    // 设置房间事件监听\r\n    const setupRoomListeners = useCallback((room: Room) => {\r\n        // 保存所有事件处理函数引用，以便后续清理\r\n        type EventHandler = (...args: any[]) => void;\r\n        const eventHandlers: Record<string, EventHandler> = {\r\n            // 处理远程参与者连接\r\n            participantConnected: (participant: RemoteParticipant) => {\r\n                if (!(participant instanceof RemoteParticipant)) return;\r\n\r\n                uiLogger.log('远程参与者已连接:', participant.identity);\r\n\r\n                // 添加新参与者到状态（使用函数式更新确保不重复添加）\r\n                setParticipants(prev => {\r\n                    // 如果已经存在该参与者，则返回原数组\r\n                    if (prev.some(p => p.identity === participant.identity)) {\r\n                        return prev;\r\n                    }\r\n                    return [...prev, participant];\r\n                });\r\n\r\n                // 监听参与者的轨道发布\r\n                const handleTrackPublished = (publication: TrackPublication) => {\r\n                    uiLogger.log('远程参与者发布轨道:', publication.kind, participant.identity);\r\n                    if (publication.track) {\r\n                        handleTrackSubscribed(publication.track as RemoteTrack, publication, participant);\r\n                    } else {\r\n                        publication.once('subscribed', (track: RemoteTrack) => {\r\n                            handleTrackSubscribed(track, publication, participant);\r\n                        });\r\n                    }\r\n                };\r\n\r\n                // 添加轨道发布监听\r\n                participant.on('trackPublished', handleTrackPublished);\r\n\r\n                // 处理已经发布的轨道\r\n                participant.trackPublications.forEach(publication => {\r\n                    if (publication.track) {\r\n                        handleTrackSubscribed(publication.track as RemoteTrack, publication, participant);\r\n                    }\r\n                });\r\n\r\n                // 返回清理函数\r\n                return () => {\r\n                    participant.off('trackPublished', handleTrackPublished);\r\n                };\r\n            },\r\n\r\n            // 处理参与者断开连接\r\n            participantDisconnected: (participant: RemoteParticipant) => {\r\n                uiLogger.log('远程参与者已断开连接:', participant.identity);\r\n                setParticipants(prev => {\r\n                    const newParticipants = prev.filter(p => p.identity !== participant.identity);\r\n                    uiLogger.log('更新后的参与者列表:', newParticipants.map(p => p.identity));\r\n                    return newParticipants;\r\n                });\r\n            },\r\n\r\n            // 处理轨道订阅\r\n            trackSubscribed: (track: RemoteTrack, publication: TrackPublication, participant: Participant) => {\r\n                if (!track) return;\r\n                uiLogger.log('轨道订阅成功:', track.kind, participant.identity);\r\n                // 处理远程轨道订阅\r\n                handleTrackSubscribed(track, publication, participant as RemoteParticipant);\r\n            },\r\n\r\n            disconnected: (reason?: any) => {\r\n                const reasonStr = reason?.toString?.() || '未知原因';\r\n                uiLogger.log('已从房间断开连接，原因:', reasonStr);\r\n                // 更新状态但不调用 handleDisconnect，因为可能是我们主动断开的\r\n                setHasConnected(false);\r\n                setParticipants([]);\r\n                setError(null);\r\n            },\r\n\r\n            reconnecting: () => {\r\n                uiLogger.log('正在重新连接到房间...');\r\n                setError('正在重新连接...');\r\n            },\r\n\r\n            reconnected: () => {\r\n                uiLogger.log('已重新连接到房间');\r\n                setError(null);\r\n            }\r\n        };\r\n\r\n        // 添加事件监听\r\n        room\r\n            .on(RoomEvent.Disconnected, eventHandlers.disconnected)\r\n            .on(RoomEvent.Reconnecting, eventHandlers.reconnecting)\r\n            .on(RoomEvent.Reconnected, eventHandlers.reconnected)\r\n            .on(RoomEvent.ParticipantConnected, handleParticipantConnected) // 使用新的处理函数\r\n            .on(RoomEvent.ParticipantDisconnected, eventHandlers.participantDisconnected)\r\n            .on(RoomEvent.TrackSubscribed, eventHandlers.trackSubscribed);\r\n\r\n        // 返回清理函数\r\n        return () => {\r\n            if (!room) return;\r\n            room\r\n                .off(RoomEvent.Disconnected, eventHandlers.disconnected)\r\n                .off(RoomEvent.Reconnecting, eventHandlers.reconnecting)\r\n                .off(RoomEvent.Reconnected, eventHandlers.reconnected)\r\n                .off(RoomEvent.ParticipantConnected, eventHandlers.participantConnected)\r\n                .off(RoomEvent.ParticipantDisconnected, eventHandlers.participantDisconnected)\r\n                .off(RoomEvent.TrackSubscribed, eventHandlers.trackSubscribed);\r\n\r\n            // 确保返回 void\r\n            return undefined;\r\n        };\r\n    }, [handleTrackSubscribed]);\r\n\r\n    // 离开会议\r\n    const leaveMeeting = useCallback(async () => {\r\n        uiLogger.log('正在离开会议...');\r\n        try {\r\n            // 停止所有本地轨道\r\n            cleanupTracks(localTracksRef.current);\r\n\r\n            // 断开房间连接\r\n            if (roomRef.current) {\r\n                await roomRef.current.disconnect();\r\n                roomRef.current = null;\r\n            }\r\n\r\n            // 更新状态\r\n            setHasConnected(false);\r\n            setParticipants([]);\r\n            setError(null);\r\n\r\n            // 清除所有媒体元素\r\n            Object.values(videoElements.current).forEach(el => el && el.remove());\r\n            Object.values(audioElements.current).forEach(el => el && el.remove());\r\n            videoElements.current = {};\r\n            audioElements.current = {};\r\n\r\n            // 调用断开连接回调\r\n            if (onDisconnect) {\r\n                onDisconnect();\r\n            }\r\n\r\n            uiLogger.log('已成功离开会议');\r\n        } catch (error) {\r\n            uiLogger.error('离开会议时出错:', error);\r\n            setError('离开会议时出错，请重试');\r\n        }\r\n    }, [onDisconnect]);\r\n\r\n    // 清理函数\r\n    const cleanup = useCallback(async (isUnmounting = false) => {\r\n        // 如果是组件卸载，设置卸载标志\r\n        if (isUnmounting) {\r\n            isUnmountedRef.current = true;\r\n        }\r\n\r\n        uiLogger.log('执行清理...');\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const audioTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Audio\r\n        ) as LocalAudioTrack | undefined;\r\n        const videoTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Video\r\n        ) as LocalVideoTrack | undefined;\r\n\r\n        try {\r\n            if (audioTrack) {\r\n                await audioTrack.stop();\r\n            }\r\n            if (videoTrack) {\r\n                await videoTrack.stop();\r\n            }\r\n        } catch (error) {\r\n            uiLogger.error('停止轨道失败:', error);\r\n        }\r\n\r\n        // 清理轨道\r\n        cleanupTracks(localTracksRef.current);\r\n        localTracksRef.current = [];\r\n\r\n        // 清理房间\r\n        if (roomRef.current) {\r\n            roomRef.current.disconnect();\r\n            roomRef.current = null;\r\n        }\r\n\r\n        // 清理状态\r\n        setHasConnected(false);\r\n        setParticipants([]);\r\n        setParticipantStates({});\r\n    }, []);\r\n\r\n    // 更新全局媒体状态\r\n    const updateGlobalMediaState = useCallback((audioEnabled: boolean, videoEnabled: boolean) => {\r\n        setGlobalMediaState(prev => ({\r\n            ...prev,\r\n            isAudioEnabled: audioEnabled,\r\n            isVideoEnabled: videoEnabled,\r\n        }));\r\n    }, []);\r\n\r\n    // 切换静音状态（全局控制）\r\n    const toggleMute = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const audioTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Audio\r\n        ) as LocalAudioTrack | undefined;\r\n\r\n        if (!audioTrack) return;\r\n\r\n        try {\r\n            // 全局按钮基于全局状态进行切换\r\n            const newGlobalAudioState = !globalMediaState.isAudioEnabled;\r\n\r\n            // 同步更新本地麦克风的物理状态\r\n            if (newGlobalAudioState) {\r\n                await audioTrack.unmute();\r\n            } else {\r\n                await audioTrack.mute();\r\n            }\r\n\r\n            // 更新本地UI状态\r\n            setIsMuted(!newGlobalAudioState);\r\n            updateParticipantState(localParticipant.identity, { isAudioEnabled: newGlobalAudioState });\r\n\r\n            // 更新全局音频状态，这将影响所有参与者的有效状态\r\n            updateGlobalMediaState(newGlobalAudioState, globalMediaState.isVideoEnabled);\r\n        } catch (error) {\r\n            uiLogger.error('切换静音状态失败:', error);\r\n            setError('切换麦克风状态失败');\r\n        }\r\n    }, [globalMediaState, updateParticipantState, updateGlobalMediaState]);\r\n\r\n    // 切换视频状态（全局控制）\r\n    const toggleVideo = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const videoTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Video\r\n        ) as LocalVideoTrack | undefined;\r\n\r\n        if (!videoTrack) return;\r\n\r\n        try {\r\n            // 全局按钮基于全局状态进行切换\r\n            const newGlobalVideoState = !globalMediaState.isVideoEnabled;\r\n\r\n            // 同步更新本地摄像头的物理状态\r\n            if (newGlobalVideoState) {\r\n                await videoTrack.unmute();\r\n            } else {\r\n                await videoTrack.mute();\r\n            }\r\n\r\n            // 更新本地UI状态\r\n            setIsVideoEnabled(newGlobalVideoState);\r\n            updateParticipantState(localParticipant.identity, { isVideoEnabled: newGlobalVideoState });\r\n\r\n            // 更新全局视频状态，这将影响所有参与者的有效状态\r\n            updateGlobalMediaState(globalMediaState.isAudioEnabled, newGlobalVideoState);\r\n        } catch (error) {\r\n            uiLogger.error('切换视频状态失败:', error);\r\n            setError('切换摄像头状态失败');\r\n        }\r\n    }, [globalMediaState, updateParticipantState, updateGlobalMediaState]);\r\n\r\n    // 切换本地静音状态（仅本地tile）\r\n    const handleLocalMuteToggle = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const audioTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Audio\r\n        ) as LocalAudioTrack | undefined;\r\n\r\n        if (!audioTrack) return;\r\n\r\n        try {\r\n            const newMutedState = !isMuted;\r\n            if (newMutedState) {\r\n                await audioTrack.mute();\r\n            } else {\r\n                await audioTrack.unmute();\r\n            }\r\n\r\n            setIsMuted(newMutedState);\r\n            updateParticipantState(localParticipant.identity, { isAudioEnabled: !newMutedState });\r\n        } catch (error) {\r\n            uiLogger.error('切换本地静音状态失败:', error);\r\n            setError('切换麦克风状态失败');\r\n        }\r\n    }, [isMuted, updateParticipantState]);\r\n\r\n    // 切换本地视频状态（仅本地tile）\r\n    const handleLocalVideoToggle = useCallback(async () => {\r\n        if (!roomRef.current) return;\r\n\r\n        const localParticipant = roomRef.current.localParticipant;\r\n        const videoTrack = localTracksRef.current.find(\r\n            t => t.kind === Track.Kind.Video\r\n        ) as LocalVideoTrack | undefined;\r\n\r\n        if (!videoTrack) return;\r\n\r\n        try {\r\n            const newVideoState = !isVideoEnabled;\r\n            if (newVideoState) {\r\n                await videoTrack.unmute();\r\n            } else {\r\n                await videoTrack.mute();\r\n            }\r\n\r\n            setIsVideoEnabled(newVideoState);\r\n            updateParticipantState(localParticipant.identity, { isVideoEnabled: newVideoState });\r\n        } catch (error) {\r\n            uiLogger.error('切换本地视频状态失败:', error);\r\n            setError('切换摄像头状态失败');\r\n        }\r\n    }, [isVideoEnabled, updateParticipantState]);\r\n\r\n    // 组件卸载时清理资源\r\n    useEffect(() => {\r\n        return () => {\r\n            // 清理资源\r\n            cleanup(true);\r\n        };\r\n    }, []);\r\n\r\n    // 获取参与者状态\r\n    const getParticipantState = useCallback((identity: string): ParticipantState => {\r\n        return participantStates[identity] || {\r\n            isAudioEnabled: true,\r\n            isVideoEnabled: true,\r\n            isAudioEnabledGlobal: true,\r\n            isVideoEnabledGlobal: true,\r\n        };\r\n    }, [participantStates]);\r\n\r\n    // 初始化参与者状态\r\n    const initParticipantState = useCallback((participant: Participant) => {\r\n        const state = getParticipantState(participant.identity);\r\n\r\n        // 更新音频状态\r\n        const audioTrack = participant.getTrackPublications().find(\r\n            pub => pub.kind === Track.Kind.Audio\r\n        )?.track as LocalAudioTrack | undefined;\r\n\r\n        // 更新视频状态\r\n        const videoTrack = participant.getTrackPublications().find(\r\n            pub => pub.kind === Track.Kind.Video\r\n        )?.track as LocalVideoTrack | undefined;\r\n\r\n        updateParticipantState(participant.identity, {\r\n            ...state,\r\n            isAudioEnabled: audioTrack ? !audioTrack.isMuted : false,\r\n            isVideoEnabled: videoTrack ? !videoTrack.isMuted : false\r\n        });\r\n    }, [getParticipantState, updateParticipantState]);\r\n\r\n    // 切换参与者的音频状态\r\n    const handleToggleAudio = useCallback((participant: Participant) => {\r\n        const currentState = participantStates[participant.identity] || {\r\n            isAudioEnabled: true,\r\n            isVideoEnabled: true,\r\n            isAudioEnabledGlobal: true,\r\n            isVideoEnabledGlobal: true,\r\n        };\r\n\r\n        updateParticipantState(participant.identity, {\r\n            ...currentState,\r\n            isAudioEnabled: !currentState.isAudioEnabled\r\n        });\r\n    }, [participantStates, updateParticipantState]);\r\n\r\n    // 切换参与者的视频状态\r\n    const handleToggleVideo = useCallback((participant: Participant) => {\r\n        const currentState = participantStates[participant.identity] || {\r\n            isAudioEnabled: true,\r\n            isVideoEnabled: true,\r\n            isAudioEnabledGlobal: true,\r\n            isVideoEnabledGlobal: true,\r\n        };\r\n\r\n        updateParticipantState(participant.identity, {\r\n            ...currentState,\r\n            isVideoEnabled: !currentState.isVideoEnabled\r\n        });\r\n    }, [participantStates, updateParticipantState]);\r\n\r\n    // 获取参与者的实际媒体状态（考虑全局覆盖）\r\n    const getEffectiveMediaState = useCallback((participantId: string) => {\r\n        const state = participantStates[participantId];\r\n        if (!state) return { isAudioEnabled: true, isVideoEnabled: true };\r\n\r\n        return {\r\n            isAudioEnabled: globalMediaState.isAudioEnabled ? state.isAudioEnabled : false,\r\n            isVideoEnabled: globalMediaState.isVideoEnabled ? state.isVideoEnabled : false,\r\n        };\r\n    }, [globalMediaState, participantStates]);\r\n\r\n    // 参与者视频组件\r\n    const ParticipantVideo = React.memo(({\r\n        participant,\r\n        isLocal,\r\n        isVideoEnabled\r\n    }: {\r\n        participant: Participant;\r\n        isLocal: boolean;\r\n        isVideoEnabled: boolean;\r\n    }) => {\r\n        const videoRef = useRef<HTMLVideoElement>(null);\r\n        const [videoTrack, setVideoTrack] = useState<RemoteTrack | LocalVideoTrack | Track | null>(null);\r\n\r\n        // 处理视频轨道变化\r\n        useEffect(() => {\r\n            if (!participant) return;\r\n\r\n            // 查找现有的视频轨道发布\r\n            const videoPublication = Array.from(participant.trackPublications.values())\r\n                .find(pub => pub.kind === Track.Kind.Video);\r\n\r\n            // 如果轨道已存在，则直接设置\r\n            if (videoPublication && videoPublication.track) {\r\n                setVideoTrack(videoPublication.track);\r\n            }\r\n\r\n            // 当订阅轨道时处理\r\n            const handleTrackSubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Video) {\r\n                    setVideoTrack(track as RemoteTrack | LocalVideoTrack);\r\n                }\r\n            };\r\n\r\n            // 当取消订阅轨道时处理\r\n            const handleTrackUnsubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Video) {\r\n                    setVideoTrack(null);\r\n                }\r\n            };\r\n\r\n            // 添加事件监听\r\n            participant.on(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n            participant.on(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n\r\n            // 清理函数\r\n            return () => {\r\n                participant.off(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n                participant.off(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n            };\r\n        }, [participant]);\r\n\r\n        // 处理视频元素附加/分离\r\n        useEffect(() => {\r\n            const videoElement = videoRef.current;\r\n            if (!videoElement || !videoTrack) return;\r\n\r\n            // 清理现有视频源\r\n            while (videoElement.firstChild) {\r\n                videoElement.removeChild(videoElement.firstChild);\r\n            }\r\n\r\n            // 附加视频轨道\r\n            if (isVideoEnabled) {\r\n                videoTrack.attach(videoElement);\r\n            }\r\n\r\n            return () => {\r\n                if (videoTrack) {\r\n                    videoTrack.detach(videoElement);\r\n                }\r\n            };\r\n        }, [videoTrack, isVideoEnabled]);\r\n\r\n        return (\r\n            <Box\r\n                sx={{\r\n                    width: '100%',\r\n                    aspectRatio: '16/9',\r\n                    bgcolor: 'grey.800',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    position: 'relative',\r\n                }}\r\n            >\r\n                <video\r\n                    ref={videoRef}\r\n                    autoPlay\r\n                    playsInline\r\n                    muted={isLocal}\r\n                    style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        objectFit: 'cover',\r\n                        display: isVideoEnabled ? 'block' : 'none'\r\n                    }}\r\n                />\r\n                {!isVideoEnabled && (\r\n                    <Box\r\n                        sx={{\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                            bottom: 0,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            bgcolor: 'grey.900',\r\n                        }}\r\n                    >\r\n                        <Box\r\n                            sx={{\r\n                                width: 80,\r\n                                height: 80,\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                bgcolor: 'primary.main',\r\n                                color: 'white',\r\n                                fontSize: 32,\r\n                                fontWeight: 'bold',\r\n                            }}\r\n                        >\r\n                            {participant.identity.charAt(0).toUpperCase()}\r\n                        </Box>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        );\r\n    });\r\n\r\n    // 参与者音频组件\r\n    const ParticipantAudio = React.memo(({\r\n        participant,\r\n        isMuted,\r\n    }: {\r\n        participant: Participant;\r\n        isMuted: boolean;\r\n    }) => {\r\n        const audioRef = useRef<HTMLAudioElement>(null);\r\n        const [audioTrack, setAudioTrack] = useState<RemoteTrack | LocalAudioTrack | Track | null>(null);\r\n\r\n        useEffect(() => {\r\n            if (!participant) return;\r\n\r\n            const handleTrackSubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Audio) {\r\n                    setAudioTrack(track as RemoteTrack | LocalAudioTrack);\r\n                }\r\n            };\r\n\r\n            const handleTrackUnsubscribed = (track: Track) => {\r\n                if (track.kind === Track.Kind.Audio) {\r\n                    setAudioTrack(null);\r\n                }\r\n            };\r\n\r\n            // 查找现有的音频轨道\r\n            const audioPublication = Array.from(participant.trackPublications.values())\r\n                .find(pub => pub.kind === Track.Kind.Audio);\r\n\r\n            if (audioPublication && audioPublication.track) {\r\n                setAudioTrack(audioPublication.track);\r\n            }\r\n\r\n            participant.on(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n            participant.on(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n\r\n            return () => {\r\n                participant.off(RoomEvent.TrackSubscribed, handleTrackSubscribed);\r\n                participant.off(RoomEvent.TrackUnsubscribed, handleTrackUnsubscribed);\r\n            };\r\n        }, [participant]);\r\n\r\n        useEffect(() => {\r\n            const audioElement = audioRef.current;\r\n            if (audioElement && audioTrack) {\r\n                audioTrack.attach(audioElement);\r\n                // 远程音频默认静音，除非用户手动取消\r\n                audioElement.muted = isMuted;\r\n                return () => {\r\n                    audioTrack.detach(audioElement);\r\n                };\r\n            }\r\n        }, [audioTrack, isMuted]);\r\n\r\n        return <audio ref={audioRef} autoPlay playsInline />;\r\n    });\r\n\r\n    // 渲染参与者\r\n    const renderParticipant = useCallback((participant: Participant, isLocal: boolean) => {\r\n        const effectiveState = getEffectiveMediaState(participant.identity);\r\n\r\n        return (\r\n            <Box\r\n                key={participant.identity}\r\n                sx={{\r\n                    position: 'relative',\r\n                    borderRadius: 2,\r\n                    overflow: 'hidden',\r\n                    bgcolor: 'background.paper',\r\n                    boxShadow: 1,\r\n                }}\r\n            >\r\n                {/* 视频元素 */}\r\n                <ParticipantVideo\r\n                    participant={participant}\r\n                    isLocal={isLocal}\r\n                    isVideoEnabled={effectiveState.isVideoEnabled}\r\n                />\r\n\r\n                {/* 音频元素 */}\r\n                {!isLocal && (\r\n                    <ParticipantAudio\r\n                        participant={participant}\r\n                        isMuted={!effectiveState.isAudioEnabled}\r\n                    />\r\n                )}\r\n\r\n                {/* 控制栏 */}\r\n                <Grid container\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        p: 1,\r\n                        bgcolor: 'rgba(0, 0, 0, 0.6)',\r\n                        justifyContent: 'center',\r\n                        gap: 1,\r\n                    }}\r\n                >\r\n                    <Grid item>\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            color={effectiveState.isAudioEnabled ? 'primary' : 'error'}\r\n                            onClick={() => handleToggleAudio(participant)}\r\n                        >\r\n                            {effectiveState.isAudioEnabled ? <VolumeUpIcon /> : <VolumeOffIcon />}\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            color={effectiveState.isVideoEnabled ? 'primary' : 'error'}\r\n                            onClick={() => handleToggleVideo(participant)}\r\n                        >\r\n                            {effectiveState.isVideoEnabled ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"caption\" color=\"white\">\r\n                            {participant.identity} {isLocal && '(你)'}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    {/* 本地麦克风控制 */}\r\n                    {isLocal && (\r\n                        <Grid item>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={handleLocalMuteToggle}\r\n                                color={isMuted ? 'error' : 'primary'}\r\n                                sx={{ color: 'white' }}\r\n                                title={isMuted ? '取消静音' : '静音'}\r\n                            >\r\n                                {isMuted ? <MicOffIcon /> : <MicIcon />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                    )}\r\n\r\n                    {/* 本地视频控制 */}\r\n                    {isLocal && (\r\n                        <Grid item>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={handleLocalVideoToggle}\r\n                                color={isVideoEnabled ? 'primary' : 'error'}\r\n                                sx={{ color: 'white' }}\r\n                                title={isVideoEnabled ? '关闭摄像头' : '开启摄像头'}\r\n                            >\r\n                                {isVideoEnabled ? <VideoIcon /> : <VideoOffIcon />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n        );\r\n    }, [isMuted, isVideoEnabled, getEffectiveMediaState, handleToggleAudio, handleToggleVideo, handleLocalMuteToggle, handleLocalVideoToggle]);\r\n\r\n    // 渲染控制按钮\r\n    function renderControlButtons() {\r\n        return (\r\n            <Box sx={{ display: 'flex', gap: 1, p: 1, bgcolor: 'background.paper' }}>\r\n                {/* 本地音频控制 */}\r\n                <IconButton\r\n                    color={isMuted ? 'error' : 'primary'}\r\n                    onClick={toggleMute}\r\n                    title={isMuted ? '取消静音' : '静音'}\r\n                >\r\n                    {isMuted ? <MicOffIcon /> : <MicIcon />}\r\n                </IconButton>\r\n\r\n                {/* 本地视频控制 */}\r\n                <IconButton\r\n                    color={isVideoEnabled ? 'primary' : 'error'}\r\n                    onClick={toggleVideo}\r\n                    title={isVideoEnabled ? '关闭摄像头' : '开启摄像头'}\r\n                >\r\n                    {isVideoEnabled ? <VideoIcon /> : <VideoOffIcon />}\r\n                </IconButton>\r\n\r\n                {/* 全局远程音频控制 */}\r\n                <IconButton\r\n                    color={remoteMediaState.isAudioSubscribed ? 'primary' : 'error'}\r\n                    onClick={toggleRemoteAudio}\r\n                    title={remoteMediaState.isAudioSubscribed ? '关闭所有远程音频' : '开启所有远程音频'}\r\n                >\r\n                    {remoteMediaState.isAudioSubscribed ? <VolumeUpIcon /> : <VolumeOffIcon />}\r\n                </IconButton>\r\n\r\n                {/* 全局远程视频控制 */}\r\n                <IconButton\r\n                    color={remoteMediaState.isVideoSubscribed ? 'primary' : 'error'}\r\n                    onClick={toggleRemoteVideo}\r\n                    title={remoteMediaState.isVideoSubscribed ? '关闭所有远程视频' : '开启所有远程视频'}\r\n                >\r\n                    {remoteMediaState.isVideoSubscribed ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                </IconButton>\r\n\r\n                {/* 离开会议按钮 */}\r\n                <IconButton\r\n                    color=\"error\"\r\n                    onClick={leaveMeeting}\r\n                    title=\"离开会议\"\r\n                >\r\n                    <CallEndIcon />\r\n                </IconButton>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    // 渲染主界面\r\n    function renderMainContent() {\r\n        // 如果已经连接，显示会议界面\r\n        if (hasConnected && roomRef.current) {\r\n            return (\r\n                <Box className={className} sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n                    <Box sx={{ flex: 1, overflow: 'auto', p: 2 }}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} md={participants.length === 0 ? 12 : 6}>\r\n                                {renderParticipant(roomRef.current.localParticipant, true)}\r\n                            </Grid>\r\n                            {participants.map(function (participant) {\r\n                                return (\r\n                                    <Grid item xs={12} md={6} key={participant.identity}>\r\n                                        {renderParticipant(participant, false)}\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                        </Grid>\r\n                    </Box>\r\n                    {/* 底部控制栏 */}\r\n                    <Box sx={{ p: 1, borderTop: '1px solid', borderColor: 'divider' }}>\r\n                        {renderControlButtons()}\r\n                    </Box>\r\n                </Box>\r\n            );\r\n        }\r\n\r\n        // 未连接时显示连接界面\r\n        return (\r\n            <Box className={className} sx={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                p: 3\r\n            }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    准备加入会议\r\n                </Typography>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={connectToRoom}\r\n                    disabled={isConnecting}\r\n                    startIcon={<VideoIcon />}\r\n                    sx={{ mt: 2 }}\r\n                >\r\n                    加入会议\r\n                    {isConnecting && (\r\n                        <CircularProgress\r\n                            size={16}\r\n                            sx={{\r\n                                color: 'inherit',\r\n                                ml: 1\r\n                            }}\r\n                        />\r\n                    )}\r\n                </Button>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    // 统一渲染内容，避免提前 return 导致 hooks 数量不一致\r\n    let content: React.ReactNode;\r\n    if (isConnecting) {\r\n        content = (\r\n            <Box sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                height: '100%',\r\n                p: 3\r\n            }}>\r\n                <CircularProgress />\r\n                <Typography variant=\"body1\" sx={{ mt: 2 }}>正在连接会议...</Typography>\r\n            </Box>\r\n        );\r\n    } else if (error) {\r\n        content = (\r\n            <Alert severity=\"error\" sx={{ m: 2 }}>\r\n                <Typography variant=\"body1\">{error}</Typography>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={connectToRoom}\r\n                    startIcon={<RefreshIcon />}\r\n                    sx={{ mt: 1 }}\r\n                >\r\n                    重试连接\r\n                </Button>\r\n            </Alert>\r\n        );\r\n    } else {\r\n        content = renderMainContent();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(directly){\r\n            connectToRoom();\r\n        }\r\n    }, [directly])\r\n    // 渲染组件\r\n    return (\r\n        <Box ref={ref} sx={sx} style={style}>\r\n            {content}\r\n        </Box>\r\n    );\r\n}\r\n\r\n// 使用 forwardRef 导出组件\r\nconst MeetingRoom5 = forwardRef(MeetingRoomComponent);\r\nMeetingRoom5.displayName = 'MeetingRoom5';\r\n\r\nexport { MeetingRoom5 };","import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 单个联系人的信息，由前端提供\n */\nexport interface IEmcContactIdentity {\n    identity: string;\n    identityType: 'email' | 'mobile';\n}\n\n/**\n * @description 邀请联系人的请求参数\n */\nexport interface IEmcInviteContactsParams extends IRequestParams {\n    contacts: IEmcContactIdentity[];\n    remark?: string;\n    type: string;\n    message?: string;\n    matrix_access_token: string; // 新增：用于创建 Matrix 房间的授权 Token\n}\n\n/**\n * @description 单个邀请的处理结果，由后端返回\n */\nexport interface IEmcInviteResultItem {\n    identity: string;\n    result_code: string; // 使用 ResultCode 的字符串形式\n    msg: string;\n}\n\n/**\n * @description 邀请联系人的完整响应体\n */\n// export interface IEmcInviteContactsResult extends IResultContent {\n//     data: {\n//         data: {\n//             results: IEmcInviteResultItem[];\n//             msg?: string;\n//         };\n//         msg?: string;\n//     };\n//     results?: IEmcInviteResultItem[]; // 保持向后兼容\n// }\n\nexport interface IEmcInviteContactsResult extends IResultContent {\n    data: {\n        is_ok:boolean;\n        results: IEmcInviteResultItem[];\n        msg?: string;\n    };\n}\n\n/**\n * @description 调用邀请联系人接口的函数\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEmcInviteContacts(opts: IRequestOptions<IEmcInviteContactsParams>) {\n    const res = await request<IEmcInviteContactsResult>(tms.TEmc, tms.MEmcInviteContacts, opts.params, opts.gateway, opts.handler);\n    return res;\n}","import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 获取联系人类型的请求参数\n */\nexport interface IEmcGetContactTypesParams extends IRequestParams {\n    // 可能不需要额外参数，但保留结构以备将来扩展\n}\n\n/**\n * @description 单个联系人类型\n */\nexport interface IEmcContactTypeItem {\n    id: string;\n    name: string;\n    // 根据实际需要可以添加更多字段，例如 icon, description 等\n}\n\n/**\n * @description 获取联系人类型的完整响应体\n */\nexport interface IEmcGetContactTypesResult extends IResultContent {\n    data: {\n        types: Array<{\n            uuid: string;\n            name: string;\n            is_system: boolean;\n        }>;\n    };\n}\n\n/**\n * @description 调用获取联系人类型接口的函数\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEmcGetContactTypes(opts: IRequestOptions<IEmcGetContactTypesParams>) {\n    const res = await request<IEmcGetContactTypesResult>(tms.TEmc, tms.MEmcGetContactTypes, opts.params, opts.gateway, opts.handler);\n    return res;\n}\n","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n    Box,\n    CircularProgress,\n    Autocomplete,\n} from '@mui/material';\nimport { useState, useCallback, useEffect, useRef, SyntheticEvent } from 'react';\nimport { \n    IEmcInviteContactsParams, \n    tmsEmcInviteContacts, \n    IEmcContactIdentity, \n    user, \n    tmsEmcGetContactTypes,\n    IEmcGetContactTypesResult,\n    IEmcContactTypeItem,\n    IEmcInviteResultItem,\n} from '@app/model';\nimport toast from 'react-hot-toast';\nimport { matrixUser } from '@im/matrix';\nimport { authService } from '@src/services/authService';\nimport { Log, useProxyWatch,\n    IRequestResult } from '@fanfanlo';\nconst fileLogger = new Log(false, 'InviteContactDialog.tsx');\n\nconst isValidIdentity = (text: string) => /(^\\d{11}$)|(^[a-zA-Z0-9]{32}$)/.test(text);\nconst is11DigitNumber = (text: string) => /^\\d{11}$/.test(text);\n\ninterface InviteContactDialogProps {\n    open: boolean;\n    onClose: () => void;\n    onInviteSent?: () => void;\n}\n\nexport function InviteContactDialog({ open, onClose, onInviteSent }: InviteContactDialogProps) {\n    const uiLogger = fileLogger.sub(false, 'InviteContactDialog_ui');\n\n    const [contacts, setContacts] = useState('');\n    const [remark, setRemark] = useState('');\n    const [callType, setCallType] = useState<string | null>(null);\n    const [availableCallTypes, setAvailableCallTypes] = useState<readonly IEmcContactTypeItem[]>([]);\n    \n    // Debug effect to log availableCallTypes changes\n    useEffect(() => {\n        console.log('availableCallTypes updated:', availableCallTypes);\n    }, [availableCallTypes]);\n    \n    // Debug effect to log callType changes\n    useEffect(() => {\n        console.log('callType updated:', callType);\n    }, [callType]);\n    const [message, setMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isTypesLoading, setIsTypesLoading] = useState(false);\n\n    const [pendingParams, setPendingParams] = useState<Omit<IEmcInviteContactsParams, 'matrix_access_token'> | null>(null);\n    const executionLock = useRef(false);\n    const [accessToken] = useProxyWatch(matrixUser.userData.userInfo, 'loginResponse.access_token', matrixUser.userData.userInfo.loginResponse?.access_token);\n    const [isUserLoggedIn] = useProxyWatch(user.data.sessionData, 'global_user_info', !!user.data.sessionData.global_user_info);\n\n    useEffect(() => {\n        if (accessToken && pendingParams && !executionLock.current) {\n            executionLock.current = true;\n            const finalParams: IEmcInviteContactsParams = {\n                ...pendingParams,\n                matrix_access_token: accessToken,\n                contacts: pendingParams?.contacts || [],\n                type: pendingParams?.type || ''\n            };\n            executeApiCall(finalParams);\n        }\n    }, [accessToken, pendingParams]);\n\n    const executeApiCall = useCallback(async (params: IEmcInviteContactsParams) => {\n        if (!params.contacts || !params.type) {\n            toast.error('请填写联系人和呼叫类型');\n            return;\n        }\n\n        setIsLoading(true);\n        \n        try {\n            const res = await tmsEmcInviteContacts({\n                params,\n                handler: { printLog: true }\n            });\n\n            console.log('Invite response:', res);\n\n            // 处理响应结果\n            if (res.err || !res.shellIsOk || !res.dataIsOk) {\n                const errorMessage = res.err?.message || '邀请失败，请稍后重试';\n                toast.error(errorMessage);\n                return;\n            }\n\n            // 处理嵌套的响应结构\n            const responseData = res.data;\n            if (!responseData?.data?.results) {\n                const errorMessage = responseData?.data?.msg || res.data?.msg || '未返回有效的结果';\n                toast.error(errorMessage);\n                return;\n            }\n            \n            const results: IEmcInviteResultItem[] = responseData.data.results;\n\n            // 统计成功和失败的数量\n            const successResults = results.filter(r => r.result_code === 'SUCCESS');\n            const infoResults = results.filter(r => r.result_code === 'INVITE_ALREADY_SENT' || r.result_code === 'ALREADY_A_CONTACT');\n            const errorResults = results.filter(r => r.result_code !== 'SUCCESS' && r.result_code !== 'INVITE_ALREADY_SENT' && r.result_code !== 'ALREADY_A_CONTACT');\n\n            if (successResults.length > 0) {\n                toast.success(`成功邀请 ${successResults.length} 个联系人`);\n                onInviteSent?.();\n            }\n            \n            if (infoResults.length > 0) {\n                const infoMessages = infoResults.map(r => r.msg).filter(Boolean).join('\\n');\n                if (infoMessages) {\n                    // 使用默认的 toast 替代 toast.info\n                    toast(infoMessages);\n                }\n            }\n            \n            if (errorResults.length > 0) {\n                const errorMessages = errorResults.map(r => r.msg).filter(Boolean).join('\\n');\n                if (errorMessages) {\n                    toast.error(`部分邀请失败：\\n${errorMessages}`);\n                }\n            }\n        } catch (error) {\n            console.error('Error in executeApiCall:', error);\n            toast.error('处理请求时发生错误，请稍后重试');\n        } finally {\n            setIsLoading(false);\n        }\n    }, [onInviteSent]);\n\n    const fetchCallTypes = useCallback(async () => {\n        const logger = uiLogger.sub(false, 'fetchCallTypes_fn');\n        logger.log('Fetching call types...');\n        setIsTypesLoading(true);\n        const res: IRequestResult<IEmcGetContactTypesResult, any> = await tmsEmcGetContactTypes({ params: {}, handler: { printLog: true } });\n        logger.log('Call types response:', JSON.stringify(res));\n        setIsTypesLoading(false);\n\n        if (res.err || !res.shellIsOk || !res.dataIsOk) {\n            const errorMessage = res.err?.message || '加载呼叫类型失败。';\n            toast.error(errorMessage);\n            setAvailableCallTypes([]);\n            logger.error('Failed to load call types:', errorMessage);\n        } else {\n            // 从 res.data.data.types 获取数据\n            const types = res.data?.data?.types || [];\n            logger.log('Setting availableCallTypes:', JSON.stringify(types));\n            \n            // 转换为 IEmcContactTypeItem[] 格式\n            const formattedTypes = types.map(type => ({\n                id: type.uuid,\n                name: type.name,\n                is_system: type.is_system\n            }));\n            \n            setAvailableCallTypes(formattedTypes);\n            \n            // 只在 callType 为空时设置默认值\n            if (formattedTypes.length > 0 && !callType) {\n                const defaultType = formattedTypes[0].name;\n                logger.log('Setting default call type:', defaultType);\n                setCallType(defaultType);\n            } else if (formattedTypes.length === 0) {\n                logger.warn('No call types available');\n            }\n        }\n    }, []); // 移除了 callType 依赖\n\n    useEffect(() => {\n        if (open) {\n            fetchCallTypes();\n        } else {\n            setContacts('');\n            setRemark('');\n            setCallType(null);\n            setAvailableCallTypes([]);\n            setMessage('');\n            setIsLoading(false);\n            setPendingParams(null);\n            executionLock.current = false;\n        }\n    }, [open, fetchCallTypes]);\n\n    const handleSendInvitation = useCallback(async () => {\n        const contactInputs = contacts.split('\\n').map(c => c.trim()).filter(c => c);\n        if (contactInputs.length === 0) {\n            toast.error('请输入至少一个联系人。');\n            return;\n        }\n\n        const contactIdentities: IEmcContactIdentity[] = [];\n        for (const input of contactInputs) {\n            if (isValidIdentity(input)) {\n                const type = is11DigitNumber(input) ? 'mobile' : 'email';\n                contactIdentities.push({ identity: input, identityType: type });\n            } else {\n                toast.error(`联系人格式无效: ${input}。必须是11位手机号或32位字符串。`);\n                return;\n            }\n        }\n\n        if (!callType || callType.trim() === '') {\n            toast.error('请选择或输入一个呼叫类型。');\n            return;\n        }\n\n        setIsLoading(true);\n\n        if (!isUserLoggedIn) {\n            const appLoggedIn = await authService.showLoginDialog();\n            if (!appLoggedIn) {\n                setIsLoading(false);\n                return; \n            }\n        }\n\n        const currentAccessToken = matrixUser.userData.userInfo.loginResponse?.access_token;\n        const params: Omit<IEmcInviteContactsParams, 'matrix_access_token'> = {\n            contacts: contactIdentities,\n            type: callType.trim(),\n            remark: remark.trim(),\n            message: message.trim(),\n        };\n\n        if (currentAccessToken) {\n            executionLock.current = true;\n            const apiParams: IEmcInviteContactsParams = {\n                ...params,\n                matrix_access_token: currentAccessToken,\n                contacts: params.contacts || [],\n                type: params.type || ''\n            };\n            executeApiCall(apiParams);\n        } else {\n            toast('等待登录...');\n            setPendingParams(params);\n        }\n\n    }, [contacts, remark, callType, message, executeApiCall, isUserLoggedIn]);\n\n    return (\n        <Dialog open={open} onClose={() => onClose()} maxWidth=\"sm\" fullWidth>\n            <DialogTitle>邀请紧急联系人</DialogTitle>\n            <DialogContent>\n                <Box component=\"form\" sx={{ mt: 2 }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"contacts\"\n                        label=\"联系人 (11位手机号或32位ID)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                        placeholder=\"13800138000&#10;550e8400e29b41d4a716446655440000\"\n                        value={contacts}\n                        onChange={(e) => setContacts(e.target.value)}\n                        disabled={isLoading}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"remark\"\n                        label=\"备注名 (可选)\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"outlined\"\n                        value={remark}\n                        onChange={(e) => setRemark(e.target.value)}\n                        disabled={isLoading}\n                    />\n                    <Autocomplete\n                        freeSolo\n                        id=\"call-type-autocomplete\"\n                        options={availableCallTypes.map((option) => option.name)}\n                        value={callType || ''}\n                        onChange={(event: SyntheticEvent, newValue: string | null) => {\n                            console.log('Call type changed to:', newValue);\n                            setCallType(newValue);\n                        }}\n                        inputValue={callType || ''}\n                        onInputChange={(event, newInputValue, reason) => {\n                            // Only update when the user is typing, not when an option is selected\n                            if (reason === 'input') {\n                                console.log('Input value changed to:', newInputValue);\n                                setCallType(newInputValue);\n                            }\n                        }}\n                        disablePortal\n                        disableClearable\n                        forcePopupIcon={!isTypesLoading}\n                        sx={{ mt: 1, mb: 1, width: '100%' }}\n                        renderInput={(params) => (\n                            <TextField\n                                {...params}\n                                label=\"呼叫类型\"\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{\n                                    ...params.InputProps,\n                                    endAdornment: (\n                                        <>\n                                            {isTypesLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                            {params.InputProps.endAdornment}\n                                        </>\n                                    ),\n                                }}\n                            />\n                        )}\n                        ListboxProps={{\n                            style: {\n                                maxHeight: '200px',\n                                overflow: 'auto',\n                            },\n                        }}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"message\"\n                        label=\"邀请信息 (可选)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        rows={3}\n                        variant=\"outlined\"\n                        placeholder=\"我已将您添加为我的紧急联系人，请接受邀请。\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        disabled={isLoading}\n                    />\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => onClose()} disabled={isLoading}>关闭</Button>\n                <Button onClick={handleSendInvitation} variant=\"contained\" disabled={isLoading}>\n                    {isLoading ? <CircularProgress size={24} /> : '发送邀请'}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","import { autoWebViewJs } from \"@droid/android\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nexport function JpushIsInitialized(){\r\n    const [isInitialized, setIsInitialized] = useState(false);\r\n    function refresh(){\r\n        const script = `var bl = com.fanfanlo.emergencycall.jpush.JpushManager.readIsJpushInitialized();\r\n        bl;`\r\n        const {javaResultData} = autoWebViewJs.callScript<boolean>(script);\r\n        setIsInitialized(typeof javaResultData == \"undefined\" ? false : javaResultData);\r\n    }\r\n    useEffect(() => {\r\n        refresh();\r\n    }, []);\r\n\r\n    return(\r\n        <Box>\r\n            <span>消息推送初始:</span><span>{isInitialized ? \"是\" : \"否\"}</span>\r\n            <span><Button onClick={refresh}>刷新</Button></span>\r\n        </Box>\r\n    )\r\n}","import { Dialog, DialogContent, IconButton } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\n\n// Add a React import for useRef\nimport React from 'react';\nimport { autoJsStoreUtils, autoWebViewJs, isRealInAndroid } from '@droid/android';\n\ninterface PrivacyDialogProps {\n  // open: boolean;\n  // onClose: () => void;\n  // onResult: (agree: boolean) => void;\n  type: string;\n  area: string;\n}\n\ninterface IPrivacyInfo{\n  agree:boolean;\n  disagreeTime:number;\n}\n\nexport function PrivacyDialog({ type, area }: PrivacyDialogProps) {\n  const url = `/privacies/${type}/${area}.html`;\n  const [iframeSrc, setIframeSrc] = useState(url);\n\n  const [open, setOpen] = useState(false);\n  function onClose() {\n    setOpen(false);\n  }\n\n  useEffect(()=>{\n    setIframeSrc(`/privacies/${type}/${area}.html`)\n  }, [type, area]);\n\n  useEffect(() => {\n    const def:IPrivacyInfo = {agree:false, disagreeTime:0}\n    const res = autoJsStoreUtils.read<IPrivacyInfo>(`privacy_${type}`, def);\n    const value:IPrivacyInfo = res && 'agree' in res ? res : def;\n    if(!isRealInAndroid){\n      return;\n    }\n    if(value.agree){\n      return\n    }\n    if(value.disagreeTime && value.disagreeTime != 0 &&  value.disagreeTime + 3 * 24 * 60 * 60 * 1000 > Date.now()){\n      return;\n    }\n    setOpen(true)\n  }, []);\n\n  useEffect(() => {\n    const handleMessage = (event: MessageEvent) => {\n      // Basic security check: ensure the message is from a trusted source if possible\n      // For now, we check the data structure.\n      if (event.source !== iframeRef.current?.contentWindow) {\n        return;\n      }\n\n      const { sender, agree } = event.data;\n\n      if (sender === 'privacy_page') {\n        console.log(`Received privacy decision: ${agree ? 'Agreed' : 'Disagreed'}`);\n\n        const value:IPrivacyInfo = {\n          agree,\n          disagreeTime: agree ? 0 : Date.now()\n        }\n        autoJsStoreUtils.write(`privacy_${type}`, value);\n        const s = `\n        var data = new com.fanfanlo.emergencycall.data.PrivacyData(${value.agree}, ${value.disagreeTime});\n        com.fanfanlo.emergencycall.data.PrivacyStateHolder.updateMainPrivacyByJs(data);\n        `\n        autoWebViewJs.callScript(s);\n\n        // onResult(agree);\n        onClose();\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n\n  const iframeRef = React.useRef<HTMLIFrameElement>(null);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          width: '80%',\n          height: '80%',\n          maxWidth: 'none',\n        },\n      }}>\n      <IconButton\n        aria-label=\"close\"\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 8,\n          color: theme => theme.palette.grey[500],\n        }}>\n        <CloseIcon />\n      </IconButton>\n      <DialogContent sx={{ padding: 0, overflow: 'hidden' }}>\n        {iframeSrc && (\n          <iframe\n            ref={iframeRef}\n            src={iframeSrc}\n            style={{ width: '100%', height: '100%', border: 'none' }}\n            title={`Privacy Policy - ${type}/${area}`}\n          />\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n\n","import { useEffect, useState } from \"react\";\r\nimport { PrivacyDialog } from \"./PrivacyDialog\";\r\nimport { autoJsStoreUtils } from \"@droid/android\";\r\n\r\n\r\nexport function ListenShowPrivacyContent({type}:{type:string}){\r\n\r\n    const [open, setOpen] = useState(false);\r\n    function onClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const value = autoJsStoreUtils.read(`privacy_${type}`, false)\r\n        console.log('privacy value is', value, typeof value);\r\n    }, [])\r\n    return(\r\n        <PrivacyDialog type={type} area=\"zh-cn\" />\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport { Box, TextField, Button, Typography, Paper } from '@mui/material';\nimport { autoWebViewJs } from '@droid/android';\n\n\n\nexport const SensorMonitor: React.FC = () => {\n  const [threshold, setThreshold] = useState<string>('15.0');\n  const [isMonitoring, setIsMonitoring] = useState<boolean>(false);\n\n  // Effect to fetch the initial monitoring state from Android\n  useEffect(() => {\n    try {\n      const script = `\n      var isMonitoring = com.fanfanlo.emergencycall.manager.SensorManager.isMonitoring();\n      isMonitoring;`;\n      const result = autoWebViewJs.callScript(script);\n      if (typeof result === 'boolean') {\n        setIsMonitoring(result);\n      }\n    } catch (error) {\n      console.error('Error fetching initial monitoring state:', error);\n    }\n  }, []);\n\n  const handleSetThreshold = () => {\n    const thresholdValue = parseFloat(threshold);\n    if (isNaN(thresholdValue)) {\n      alert('请输入一个有效的数字作为阈值。');\n      return;\n    }\n    try {\n      // This script now ONLY updates the threshold.\n      const script = `com.fanfanlo.emergencycall.manager.SensorManager.updateThreshold(${thresholdValue});`;\n      autoWebViewJs.callScript(script);\n      alert(`阈值已设置为: ${thresholdValue}`);\n    } catch (error) {\n      console.error('Error calling updateThreshold:', error);\n      alert('设置阈值失败。请确保您在安卓应用中。');\n    }\n  };\n\n  const handleToggleMonitoring = () => {\n    try {\n      if (isMonitoring) {\n        const script = `com.fanfanlo.emergencycall.manager.SensorManager.stopMonitoring();`;\n        autoWebViewJs.callScript(script);\n        setIsMonitoring(false);\n      } else {\n        const script = `com.fanfanlo.emergencycall.manager.SensorManager.startMonitoring();`;\n        autoWebViewJs.callScript(script);\n        setIsMonitoring(true);\n      }\n    } catch (error) {\n      console.error('Error toggling monitoring:', error);\n      alert('切换监控状态失败。请确保您在安卓应用中。');\n    }\n  };\n\n  return (\n    <Paper elevation={3} sx={{ padding: 2, margin: 2 }}>\n      <Typography variant=\"h6\" gutterBottom>\n        传感器监控控制\n      </Typography>\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, marginBottom: 2 }}>\n        <TextField\n          label=\"震动阈值\"\n          variant=\"outlined\"\n          type=\"number\"\n          value={threshold}\n          onChange={(e) => setThreshold(e.target.value)}\n          size=\"small\"\n        />\n        <Button variant=\"contained\" onClick={handleSetThreshold}>\n          设置\n        </Button>\n      </Box>\n      <Button\n        variant=\"contained\"\n        color={isMonitoring ? 'error' : 'primary'}\n        onClick={handleToggleMonitoring}\n        fullWidth\n      >\n        {isMonitoring ? '停止监控' : '开始监控'}\n      </Button>\n    </Paper>\n  );\n};\n\nexport default SensorMonitor;\n\n\n","import { autoWebViewJs } from \"@droid/android\";\r\nimport { Box, Button } from \"@mui/material\";\r\n\r\n\r\nexport function TestEmergencyCall() {\r\n    function onClick(){\r\n        const script = `\r\n        var instance = com.fanfanlo.emergencycall.service.SensorMonitoringService.instance;\r\n        if(instance){\r\n            instance.triggerEmergencyCall();\r\n        }\r\n        `\r\n        autoWebViewJs.callScript(script);\r\n    }\r\n    return(\r\n        <Box sx={{mt:\"10px\", mb:\"10px\"\r\n        }}>\r\n            <Button onClick={onClick}>\r\n                测试医疗呼救\r\n            </Button>\r\n        </Box>  \r\n    )\r\n}","import { AppShell, TabbarContainer } from '@app/ui';\nimport { MeetingRoom5 } from '@im/livekit';\nimport { IMOpenPageLink } from '@im/matrix';\nimport { Box, Button } from '@mui/material';\nimport { InviteContactDialog } from '@src/components/dialogs/InviteContactDialog';\nimport { JpushIsInitialized } from '@src/components/jpush/IsInitialized';\nimport { NavBar } from '@src/components/navbar/NavBar';\nimport { ListenShowPrivacyContent } from '@src/components/privacies/ListenShowPrivacyContent';\nimport { SensorMonitor } from '@src/components/sensor-monitor/SensorMonitor';\nimport { TestEmergencyCall } from '@src/components/test/TestEmergencyCall';\nimport { mainModel } from '@src/libs/mc/main/MainModel';\nimport { useState } from 'react';\n\nfunction Content() {\n  const [openInviteDialog, setOpenInviteDialog] = useState(false);\n\n  return (\n    <Box sx={{ my: 2, p: 2 }}>\n        <ListenShowPrivacyContent type=\"main\" />\n      \n      <JpushIsInitialized />\n      <TestEmergencyCall />\n      <Button variant=\"contained\" onClick={() => setOpenInviteDialog(true)}>\n        邀请紧急联系人\n      </Button>\n      <SensorMonitor />\n      {openInviteDialog && (\n        <InviteContactDialog \n          open={openInviteDialog} \n          onClose={() => setOpenInviteDialog(false)} \n        />\n      )}\n\n      <MeetingRoom5\n        roomName=\"test-room\"\n        userName={`user-${Math.random().toString(36).substring(2, 8)}`}\n        livekitConfig={mainModel.appConfig.livekit}\n        // role=\"initiator\" // Add role for testing\n      />\n      <IMOpenPageLink />\n    </Box>\n  );\n}\n\nexport default function Home() {\n  return (\n    <AppShell>\n      <TabbarContainer titleConf={{ ns: 'emergency-call/pages/home/content', key: 'home.title' }} navBar={<NavBar />}>\n        <Content />\n      </TabbarContainer>\n    </AppShell>\n  );\n}\n\n","import { useRouter } from \"next/router\";\r\nimport { useTranslation } from \"@fanfanlo\";\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { BottomNavigation, BottomNavigationAction } from \"@mui/material\";\r\ninterface TabInfoType {\r\n  label: string;\r\n  value: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nexport function NavBar() {\r\n  const router = useRouter();\r\n  const { pathname } = router;\r\n  const { t } = useTranslation('emergency-call/components/navbar/content');\r\n  const tabInfoList: TabInfoType[] = [\r\n    { label: t('NavBar.home'), value: '/', icon: <HomeIcon /> },\r\n    // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n    // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n    { label: t('NavBar.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n  ];\r\n  return (\r\n\r\n    <BottomNavigation showLabels value={pathname}>\r\n      {tabInfoList.map(e => (\r\n        <BottomNavigationAction\r\n          key={e.value}\r\n          label={e.label}\r\n          icon={e.icon}\r\n          data-id={`tabbar-${e.value}`}\r\n          className={pathname === e.value ? 'Mui-selected' : ''}\r\n          onClick={() => {\r\n            if (pathname === e.value) return;\r\n            router.push(e.value);\r\n          }}\r\n        />\r\n      ))}\r\n    </BottomNavigation>\r\n  );\r\n}","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3\\\\node_modules\\\\react-i18next\\\\dist\\\\es\\\\index.js\"","\"use client\";\r\n// 现在用的是这个文件\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport Backend, { type HttpBackendOptions } from \"i18next-http-backend\";\r\n\r\nimport i18next from \"i18next\";\r\nimport { Log } from \"../log/Log\";\r\nimport { getBuildTime, isServer } from \"../nextjs/env/env\";\r\n;\r\nexport { useTranslation } from 'react-i18next';\r\nlet fileDateVersion:string = ''// = getConfig().publicRuntimeConfig?.version\r\nexport const i18nLogger = new Log(false, `i18n`);\r\nconst windowHref = (()=>{\r\n  if(typeof window === 'undefined')return ''\r\n  const u = new URL(window.location.href || window.parent?.location.href);\r\n  // 同域文本iframe里的页面会获取不到href，所以判断一下直接用父级的就行.\r\n  return u.origin == null || u.origin == 'null' ? '' : u.origin\r\n})()\r\nconst backendOptions = {\r\n  loadPath: function (lngs: string[], namespaces: string[]) {\r\n    const log = i18nLogger.sub(false, `i18n loadpath`);\r\n    log.pause = true;\r\n    const lng = lngs[0]\r\n    let p = ``\r\n    // p = `/options/_locales/${lngs[0].replace(\"-\", \"_\")}/messages.json`;\r\n    // p = `/locales/zh-CN/ns1/content.json`;\r\n    // p = `locales/${lng}/${namespaces[0]}.json?v=${fileDateVersion}`\r\n    const ps = namespaces[0].split('/')\r\n    ps.splice(ps.length - 1, 0, lng)\r\n    // p = `locales/${ps.join('/')}.json?v=${fileDateVersion}`\r\n    p = `locales/${ps.join('/')}.json?v=${getBuildTime()}`\r\n    log.log(`lngs=`, lngs);\r\n    log.log(`namespaces=`, namespaces);\r\n    log.log(\"p=\", p);\r\n    p = `${windowHref}/${p}`\r\n    log.log('windowHref p=', p)\r\n    return p;\r\n\r\n  },\r\n  parse: function (\r\n    data: string,\r\n    languages?: string | string[],\r\n    namespaces?: string | string[]\r\n  ) {\r\n    const log = i18nLogger.sub(false, `i18n backend parse`);\r\n    log.pause = true;\r\n    // log.log(`parrrse`, data, languages, namespaces);\r\n    const l = JSON.parse(data);\r\n    log.print(`before set i18ndata`);\r\n    // i18nData = l as II18n;\r\n    // log.log(`i18nData.rule.scripts.sys.rules`, i18nData.rule.scripts.sys.rules);\r\n    log.log(`parrrse`, languages, namespaces);\r\n    return l;\r\n  },\r\n};\r\nconst backend = new Backend();\r\nbackend.init(null, backendOptions);\r\nexport const i18n = i18next;\r\n// export const resources: Resource = {\r\n//   // 'zh-CN': {\r\n//   //   translation: _.merge({}, zhCN),\r\n//   // },\r\n//   // en: {\r\n//   //   translation: _.merge({}, en),\r\n//   // },\r\n// };\r\n\r\n\r\ni18n.on(\"languageChanged\", async function (lng) {\r\n  const log = i18nLogger.sub(false, `onlanguageChanged`);\r\n  log.pause = true;\r\n  log.log(`lllllng`, lng);\r\n  // lng = \"en\";\r\n  // const p = `/options/_locales/${lng.replace(\"-\", \"_\")}/messages.json`;\r\n});\r\n\r\n\r\n\r\n\r\nexport function i18nInit(_fileDateVersion:string=''){\r\n  fileDateVersion = _fileDateVersion\r\n  i18n\r\n  .use(LanguageDetector)\r\n  .use(backend)\r\n  .use(initReactI18next)\r\n  .init<HttpBackendOptions>({\r\n    load: \"currentOnly\",\r\n    // load: \"all\",\r\n    // supportedLngs: ['zh-CN', 'zh-TW', 'en', 'en-GB', 'ja'],\r\n    // resources,\r\n    fallbackLng: isServer ? \"en\" : \"zh-CN\",\r\n    // fallbackLng: \"zh-CN\",\r\n    // lng: \"zh-CN\",\r\n    partialBundledLanguages:true,\r\n    ns:[],\r\n    \r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    detection: {\r\n      caches: [\"localStorage\"],\r\n    },\r\n  });\r\n}\r\ni18n.on(\"missingKey\", function (lngs, namespace, key, res) {\r\n  console.error(\r\n    \"i18n mssing key, lngs=%s, namespace=%s, key=%s, res=%s\",\r\n    lngs,\r\n    namespace,\r\n    key,\r\n    res\r\n  );\r\n});\r\n\r\ni18n.on(\"loaded\", function (loaded) {\r\n  const log = i18nLogger.sub(false, `onloaded`);\r\n  log.pause = true;\r\n  log.log(`onloaded arguments`, loaded);\r\n});\r\n\r\ni18n.on(\"failedLoading\", function (lng, ns, msg) {\r\n  const log = i18nLogger.sub(false, `onfailedLoading`);\r\n  log.pause = true;\r\n  log.log(`failedLoading arguments`, lng, ns, msg);\r\n});\r\n\r\ni18n.on(\"added\", function () {\r\n  console.log('added', arguments)\r\n});   \r\n\r\nexport default i18n;","import { createContext } from \"react\";\r\nimport { storeUtils } from \"./store-utils\";\r\n// import { storeUtils } from \"./store\";\r\nconst s = storeUtils.namespace('store-page-context')\r\n\r\nexport interface IPageScrollPosition{\r\n    x:number\r\n    y:number\r\n}\r\n\r\nfunction create(){\r\n    return createContext(s)\r\n}\r\nexport const StorePageContext = createContext<any>(s)\r\n\r\nexport const StorePageDynamicContext = createContext<Record<string, any>>({})","'use client'\r\nimport { i18n, i18nInit, IPageScrollPosition, StorePageContext, StorePageDynamicContext, toProxy, watchUpdates, storeUtils } from \"@fanfanlo\";\r\nimport { useRouter } from \"next/router\";\r\nimport getConfig from \"node_modules/next/config\";\r\nimport { PropsWithChildren, useEffect } from \"react\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\n\r\ncheckReloadPage();\r\ni18nInit()\r\n\r\n\r\nfunction checkReloadPage(){\r\n  if(typeof window === 'undefined')return\r\n  if(getConfig().publicRuntimeConfig.isDevelopment){\r\n    return\r\n  }\r\n  // 帮我检测url中是否包含_htmlRefreshTime的参数\r\n  // 如果没有，则添加_htmlRefresTime的参数，值为当前时间的毫秒数\r\n  const searchParams = new URL(window.location.href).searchParams\r\n  const htmlRefreshTime = searchParams.get('_htmlRefreshTime')\r\n  if (!htmlRefreshTime) {\r\n    const newUrl = new URL(window.location.href)\r\n    newUrl.searchParams.set('_htmlRefreshTime', String(Date.now()))\r\n    window.location.href = newUrl.toString()\r\n    return\r\n  }\r\n\r\n  const refreshTime = Number(htmlRefreshTime)\r\n  if (refreshTime + 2 * 60 * 1000 < Date.now()) {\r\n    const newUrl = new URL(window.location.href)\r\n    newUrl.searchParams.set('_htmlRefreshTime', String(Date.now()))\r\n    window.location.href = newUrl.toString()\r\n  }\r\n}\r\nexport function AppShell({ children }: PropsWithChildren) {\r\n  const router = useRouter();\r\n  const scrollKey = 'scrollPositionInfo'\r\n  const href = window.location.href.split(\"#\")[0]\r\n  const dynamicKey = `dynamic-${href}`\r\n  const s = storeUtils.namespace(dynamicKey);\r\n  let o: Record<string, unknown>|undefined = s.read(dynamicKey)\r\n  if (!o) {\r\n    o = {}\r\n    s.write(dynamicKey, o)\r\n  }\r\n  o = toProxy(o)\r\n  useEffect(() => {\r\n\r\n    router.beforePopState((state) => {\r\n      s.clearAll()\r\n      return true\r\n    })\r\n  })\r\n  useEffect(() => {\r\n    s.write(dynamicKey, o)\r\n    return watchUpdates(o, () => {\r\n      s.write(dynamicKey, o)\r\n    })\r\n  }, [])\r\n  useEffect(() => {\r\n    const info = (s.read(scrollKey) || { x: 0, y: 0 }) as IPageScrollPosition\r\n    // console.log('app shell scroll info info = ', info)\r\n    if (info.x == 0 && info.y == 0) {\r\n      listenScroll()\r\n    } else {\r\n      window.requestAnimationFrame(() => {\r\n        window.scrollTo(info.x, info.y)\r\n        listenScroll()\r\n      })\r\n    }\r\n    function onScroll(e: Event) {\r\n      // console.log('app shell on scroll', { x: window.scrollX, y: window.scrollY })\r\n      s.write(scrollKey, { x: window.scrollX, y: window.scrollY })\r\n    }\r\n    function listenScroll() {\r\n      window.addEventListener('scroll', onScroll)\r\n    }\r\n\r\n    function unsub() {\r\n      window.removeEventListener('scroll', onScroll)\r\n    }\r\n    return unsub\r\n  });\r\n  return (\r\n    <StorePageContext value={s}>\r\n      <StorePageDynamicContext value={o}>\r\n\r\n        <I18nextProvider i18n={i18n}>\r\n          {children}\r\n        </I18nextProvider>\r\n      </StorePageDynamicContext>\r\n    </StorePageContext>\r\n  )\r\n}","import { Box, Button, Container } from '@mui/material';\r\nimport { createContext, PropsWithChildren, useContext, useEffect } from 'react';\r\nimport { ITitleI18nConf, ITitleI18nNsConf, ITitleI18nTitleConf } from '.';\r\nimport { isBuild, isDev, isServer, loadI18nValue, publicRuntimeConfig } from '@fanfanlo';\r\nimport { read } from 'fs';\r\nimport { useTranslation } from '@fanfanlo';\r\n\r\n\r\nfunction Reload(){\r\n  if(!isDev)return <>  </>\r\n  const {t} = useTranslation(\"app-ui/components/page/content\")\r\n  return(\r\n    <Box>\r\n      <Button onClick={() => {window.location.reload()}}>{t(\"PageContent.refresh\")}</Button>\r\n      {new Date().toLocaleString()}\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst ScrollP = createContext({ x: 0, y: 0 });\r\nlet index = 0;\r\nexport default function PageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren) {\r\n  index++;\r\n  const scroll = useContext(ScrollP);\r\n  const clazz = `${Date.now() + Math.random() * Date.now()}`;\r\n  useEffect(()=>{\r\n    async function loadTitle(){\r\n      if(!titleConf)return\r\n      let title = titleConf.title\r\n      if(titleConf.ns){\r\n        title = await loadI18nValue(titleConf.ns, titleConf.key || \"content.title\")\r\n      }\r\n      if(!title)return\r\n      document.title = title\r\n    }\r\n    loadTitle()\r\n  }, [])\r\n  useEffect(() => {\r\n    const container = document.getElementsByClassName(clazz)[0];\r\n    if (!container) return;\r\n    container.scrollTop = scroll.y;\r\n    const onScroll = () => {\r\n      var scrollTop = container.scrollTop;\r\n      scroll.y = scrollTop;\r\n    };\r\n    container.removeEventListener('scroll', onScroll);\r\n    container.addEventListener('scroll', onScroll, { passive: true });\r\n    return () => container.removeEventListener('scroll', onScroll);\r\n  }, [clazz, scroll]);\r\n  return (\r\n\r\n    <Container className={clazz} sx={{ flexGrow: 1, overflow: 'auto', padding: \"0px\" }}>\r\n      <Box>\r\n        {(reload || (reload == undefined)) && <Reload />}\r\n        \r\n        {children}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { PropsWithChildren } from \"react\";\r\nimport PageContent from \"./PageContent\";\r\nimport { ITitleI18nConf } from \".\";\r\nexport default function AndroidPageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren)  {\r\n    return (\r\n        <PageContent titleConf={titleConf} reload={reload}>\r\n            {children}\r\n        </PageContent>\r\n    )\r\n}\r\n","'use client';\r\nimport { BottomNavigation, BottomNavigationAction, Box, CssBaseline, Paper, Stack } from '@mui/material';\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport StorefrontIcon from '@mui/icons-material/Storefront';\r\nimport { useRouter } from 'next/router';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ITitleI18nConf } from '../page';\r\nimport AndroidPageContent from '../page/AndroidPageContent';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\n// interface TabInfoType {\r\n//   label: string;\r\n//   value: string;\r\n//   icon: React.ReactNode;\r\n// }\r\n\r\nfunction BottomBar({navBar}:{navBar?:React.ReactNode}) {\r\n  return <Paper\r\n    id=\"bottom-navigation\"\r\n    sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }}\r\n    elevation={3}>\r\n    {/* <NavBar /> */}\r\n    {navBar}\r\n  </Paper>;\r\n}\r\n// function NavBar() {\r\n//   const router = useRouter();\r\n//   const { pathname } = router;\r\n//   const { t } = useTranslation('app-ui/components/tabbar/content');\r\n//   const tabInfoList: TabInfoType[] = [\r\n//     { label: t('content.home'), value: '/', icon: <HomeIcon /> },\r\n//     // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n//     // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n//     { label: t('content.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n//   ];\r\n//   return (\r\n\r\n//     <BottomNavigation showLabels value={pathname}>\r\n//       {tabInfoList.map(e => (\r\n//         <BottomNavigationAction\r\n//           key={e.value}\r\n//           label={e.label}\r\n//           icon={e.icon}\r\n//           data-id={`tabbar-${e.value}`}\r\n//           className={pathname === e.value ? 'Mui-selected' : ''}\r\n//           onClick={() => {\r\n//             if (pathname === e.value) return;\r\n//             router.push(e.value);\r\n//           }}\r\n//         />\r\n//       ))}\r\n//     </BottomNavigation>\r\n//   );\r\n// }\r\n\r\n\r\n// testWatchUpdates()\r\nexport function TabbarContainer({ children, titleConf, navBar }: {titleConf?:ITitleI18nConf, navBar:React.ReactNode} & PropsWithChildren)  {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', height2: '100vh' }}>\r\n      <CssBaseline />\r\n      <Stack direction={\"column\"} spacing={3}\r\n      \r\n      >\r\n        <AndroidPageContent titleConf={titleConf}>\r\n          {children}\r\n        </AndroidPageContent>\r\n        <BottomBar navBar={navBar} />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\n"],"names":["React","useCallback","useEffect","useRef","useState","forwardRef","Room","RoomEvent","RemoteParticipant","RemoteTrack","Track","createLocalAudioTrack","createLocalVideoTrack","Box","Button","Typography","Alert","IconButton","CircularProgress","Grid","Mic","MicIcon","MicOff","MicOffIcon","Videocam","VideoIcon","VideocamOff","VideoOffIcon","CallEnd","CallEndIcon","VolumeUp","VolumeUpIcon","VolumeOff","VolumeOffIcon","Refresh","RefreshIcon","Visibility","VisibilityIcon","VisibilityOff","VisibilityOffIcon","Log","logger","uiLogger","sub","VIDEO_PRESET","width","height","frameRate","maxBitrate","MeetingRoomComponent","ref","livekitConfig","roomName","userName","onDisconnect","onError","className","style","sx","directly","globalMediaState","setGlobalMediaState","isAudioEnabled","isVideoEnabled","remoteMediaState","setRemoteMediaState","isAudioSubscribed","isVideoSubscribed","toggleRemoteAudio","newState","log","prev","from","to","roomRef","current","participantCount","remoteParticipants","size","forEach","participant","identity","audioTrackCount","trackPublications","publication","kind","Kind","Audio","trackSid","isSubscribed","setSubscribed","toggleRemoteVideo","videoTrackCount","Video","handleParticipantConnected","audioSubscribed","videoSubscribed","audioTracksProcessed","videoTracksProcessed","isAudio","shouldSubscribe","audioTracks","videoTracks","setParticipants","exists","some","p","localTracksRef","videoElements","audioElements","participantStates","setParticipantStates","isUnmountedRef","isConnecting","setIsConnecting","hasConnected","setHasConnected","error","setError","isMuted","setIsMuted","setIsVideoEnabled","participants","fetchToken","response","fetch","jwt","method","headers","body","JSON","stringify","room_name","ok","Error","data","json","token","connectToRoom","audioTrack","videoTrack","createLocalTracks","room","adaptiveStream","dynacast","videoCaptureDefaults","resolution","publishDefaults","dtx","red","forceStereo","simulcast","setupRoomListeners","connect","wsUrl","autoSubscribe","Promise","all","localParticipant","publishTrack","publishError","Array","values","updateParticipantState","initParticipantState","getTrackPublications","track","handleTrackSubscribed","cleanupTracks","disconnect","e","echoCancellation","noiseSuppression","autoGainControl","tracks","stop","detach","trackElementsRef","videoElementsRef","audioElementsRef","state","isAudioEnabledGlobal","isVideoEnabledGlobal","isVideoTrack","updateTrackState","stateUpdate","on","participantExists","off","eventHandlers","participantConnected","handleTrackPublished","once","participantDisconnected","newParticipants","filter","map","trackSubscribed","disconnected","reason","reasonStr","toString","reconnecting","reconnected","Disconnected","Reconnecting","Reconnected","ParticipantConnected","ParticipantDisconnected","TrackSubscribed","undefined","leaveMeeting","Object","el","remove","cleanup","isUnmounting","find","t","updateGlobalMediaState","audioEnabled","videoEnabled","toggleMute","newGlobalAudioState","unmute","mute","toggleVideo","newGlobalVideoState","handleLocalMuteToggle","newMutedState","handleLocalVideoToggle","newVideoState","getParticipantState","pub","handleToggleAudio","currentState","handleToggleVideo","getEffectiveMediaState","participantId","ParticipantVideo","memo","isLocal","videoRef","setVideoTrack","videoPublication","handleTrackUnsubscribed","TrackUnsubscribed","videoElement","firstChild","removeChild","attach","aspectRatio","bgcolor","display","alignItems","justifyContent","position","video","autoPlay","playsInline","muted","objectFit","top","left","right","bottom","borderRadius","color","fontSize","fontWeight","charAt","toUpperCase","ParticipantAudio","audioRef","setAudioTrack","audioPublication","audioElement","audio","renderParticipant","effectiveState","overflow","boxShadow","container","gap","item","onClick","variant","title","renderControlButtons","renderMainContent","flexDirection","flex","spacing","xs","md","length","borderTop","borderColor","gutterBottom","disabled","startIcon","mt","ml","content","severity","m","MeetingRoom5","displayName","request","tms","tmsEmcInviteContacts","opts","res","TEmc","MEmcInviteContacts","params","gateway","handler","tmsEmcGetContactTypes","MEmcGetContactTypes","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Autocomplete","user","toast","matrixUser","authService","useProxyWatch","fileLogger","isValidIdentity","text","test","is11DigitNumber","InviteContactDialog","open","onClose","onInviteSent","contacts","setContacts","remark","setRemark","callType","setCallType","availableCallTypes","setAvailableCallTypes","console","message","setMessage","isLoading","setIsLoading","isTypesLoading","setIsTypesLoading","pendingParams","setPendingParams","executionLock","accessToken","userData","userInfo","loginResponse","access_token","isUserLoggedIn","sessionData","global_user_info","finalParams","matrix_access_token","type","executeApiCall","responseData","printLog","err","shellIsOk","dataIsOk","errorMessage","results","msg","successResults","r","result_code","infoResults","errorResults","success","infoMessages","Boolean","join","errorMessages","fetchCallTypes","types","formattedTypes","id","uuid","name","is_system","defaultType","warn","handleSendInvitation","contactInputs","split","c","trim","contactIdentities","input","push","identityType","appLoggedIn","showLoginDialog","currentAccessToken","apiParams","maxWidth","fullWidth","component","autoFocus","margin","label","multiline","rows","placeholder","value","onChange","target","freeSolo","options","option","event","newValue","inputValue","onInputChange","newInputValue","disablePortal","disableClearable","forcePopupIcon","mb","renderInput","InputProps","endAdornment","ListboxProps","maxHeight","autoWebViewJs","JpushIsInitialized","isInitialized","setIsInitialized","refresh","script","javaResultData","callScript","span","CloseIcon","autoJsStoreUtils","isRealInAndroid","PrivacyDialog","area","url","iframeSrc","setIframeSrc","setOpen","def","agree","disagreeTime","read","Date","now","handleMessage","iframeRef","source","contentWindow","sender","write","s","window","addEventListener","removeEventListener","PaperProps","aria-label","theme","palette","grey","padding","iframe","src","border","ListenShowPrivacyContent","Paper","SensorMonitor","threshold","setThreshold","isMonitoring","setIsMonitoring","result","handleSetThreshold","thresholdValue","parseFloat","isNaN","alert","handleToggleMonitoring","elevation","marginBottom","TestEmergencyCall","AppShell","TabbarContainer","IMOpenPageLink","NavBar","mainModel","Content","openInviteDialog","setOpenInviteDialog","my","Math","random","substring","appConfig","livekit","Home","titleConf","ns","key","navBar","useRouter","useTranslation","HomeIcon","SettingsIcon","BottomNavigation","BottomNavigationAction","router","pathname","tabInfoList","icon","showLabels","data-id","initReactI18next","LanguageDetector","Backend","i18next","getBuildTime","isServer","fileDateVersion","i18nLogger","windowHref","u","URL","location","href","parent","origin","backendOptions","loadPath","lngs","namespaces","pause","lng","ps","splice","parse","languages","l","print","backend","init","i18n","i18nInit","_fileDateVersion","use","load","fallbackLng","partialBundledLanguages","debug","interpolation","escapeValue","detection","caches","namespace","loaded","arguments","createContext","storeUtils","create","StorePageContext","StorePageDynamicContext","toProxy","watchUpdates","getConfig","I18nextProvider","checkReloadPage","publicRuntimeConfig","isDevelopment","searchParams","htmlRefreshTime","get","newUrl","set","String","refreshTime","Number","children","scrollKey","dynamicKey","o","beforePopState","clearAll","info","x","y","listenScroll","requestAnimationFrame","scrollTo","onScroll","scrollX","scrollY","unsub","Container","useContext","isDev","loadI18nValue","Reload","reload","toLocaleString","ScrollP","index","PageContent","scroll","clazz","loadTitle","document","getElementsByClassName","scrollTop","passive","flexGrow","AndroidPageContent","CssBaseline","Stack","BottomBar","height2","direction"],"sourceRoot":"","ignoreList":[11]}