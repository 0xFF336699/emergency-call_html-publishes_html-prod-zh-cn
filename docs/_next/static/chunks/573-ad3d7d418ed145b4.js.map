{"version":3,"file":"static/chunks/573-ad3d7d418ed145b4.js","mappings":"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","sources":["webpack://_N_E/../../libs/app/model/src/remote/emc/inviteContacts.ts","webpack://_N_E/../../libs/app/model/src/remote/emc/tmsEmcGetContactTypes.ts","webpack://_N_E/./src/components/dialogs/InviteContactDialog.tsx","webpack://_N_E/../../libs/app/model/src/remote/emergency-call/list_pending_received_invitations.ts","webpack://_N_E/./src/components/PendingInvitationsList/PendingInvitationsList.tsx","webpack://_N_E/../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/lodash.js","webpack://_N_E/./src/components/pre-alarm-config2/index.tsx","webpack://_N_E/./src/components/shortcut-config/ShortcutConfig.tsx","webpack://_N_E/./src/components/privacies/ListenShowPrivacyContent.tsx","webpack://_N_E/../../libs/app/model/src/remote/permission/status.ts","webpack://_N_E/./src/components/unified-monitoring-control/UnifiedMonitoringControl.tsx","webpack://_N_E/./src/components/unified-monitoring-control/index.ts","webpack://_N_E/./src/components/test/TestEmergencyCall.tsx","webpack://_N_E/./src/components/emergency-audio-control/stopAllHandler.ts","webpack://_N_E/./src/components/emergency-audio-control/EmergencyStopButton.tsx","webpack://_N_E/./src/components/emergency-tts-settings/EmergencyTTSSettings.tsx","webpack://_N_E/./src/components/emergency-tts-settings/index.ts","webpack://_N_E/./src/pages/home/index.tsx","webpack://_N_E/./src/components/privacies/PrivacyDialogAuto.tsx","webpack://_N_E/./src/components/navbar/NavBar.tsx","webpack://_N_E/../../libs/app/model/src/remote/emergency-call/list_all_invitations.ts","webpack://_N_E/./src/components/privacies/PrivacyDialogDisplay.tsx","webpack://_N_E/../../libs/app/ui/src/components/tabbar/Tabbar.tsx"],"sourcesContent":["import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 单个联系人的信息，由前端提供\n */\nexport interface IEmcContactIdentity {\n    identity: string;\n    identityType: 'email' | 'mobile';\n}\n\n/**\n * @description 邀请联系人的请求参数\n */\nexport interface IEmcInviteContactsParams extends IRequestParams {\n    contacts: IEmcContactIdentity[];\n    remark?: string;\n    type: string;\n    message?: string;\n    matrix_access_token: string; // 新增：用于创建 Matrix 房间的授权 Token\n}\n\n/**\n * @description 单个邀请的处理结果，由后端返回\n */\nexport interface IEmcInviteResultItem {\n    identity: string;\n    result_code: string; // 使用 ResultCode 的字符串形式\n    msg: string;\n}\n\n/**\n * @description 邀请联系人的完整响应体\n */\n// export interface IEmcInviteContactsResult extends IResultContent {\n//     data: {\n//         data: {\n//             results: IEmcInviteResultItem[];\n//             msg?: string;\n//         };\n//         msg?: string;\n//     };\n//     results?: IEmcInviteResultItem[]; // 保持向后兼容\n// }\n\nexport interface IEmcInviteContactsResult extends IResultContent {\n    data: {\n        is_ok:boolean;\n        results: IEmcInviteResultItem[];\n        msg?: string;\n    };\n}\n\n/**\n * @description 调用邀请联系人接口的函数\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEmcInviteContacts(opts: IRequestOptions<IEmcInviteContactsParams>) {\n    const res = await request<IEmcInviteContactsResult>(tms.TEmc, tms.MEmcInviteContacts, opts.params, opts.gateway, opts.handler);\n    return res;\n}","import { IRequestParams, IResultContent, request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\nimport { IRequestOptions } from \"../IRequestOptions\";\n\n/**\n * @description 获取联系人类型的请求参数\n */\nexport interface IEmcGetContactTypesParams extends IRequestParams {\n    // 可能不需要额外参数，但保留结构以备将来扩展\n}\n\n/**\n * @description 单个联系人类型\n */\nexport interface IEmcContactTypeItem {\n    id: string;\n    name: string;\n    // 根据实际需要可以添加更多字段，例如 icon, description 等\n}\n\n/**\n * @description 获取联系人类型的完整响应体\n */\nexport interface IEmcGetContactTypesResult extends IResultContent {\n    data: {\n        types: Array<{\n            uuid: string;\n            name: string;\n            is_system: boolean;\n        }>;\n    };\n}\n\n/**\n * @description 调用获取联系人类型接口的函数\n * @param opts 包含 params, gateway, handler 的请求选项\n */\nexport async function tmsEmcGetContactTypes(opts: IRequestOptions<IEmcGetContactTypesParams>) {\n    const res = await request<IEmcGetContactTypesResult>(tms.TEmc, tms.MEmcGetContactTypes, opts.params, opts.gateway, opts.handler);\n    return res;\n}\n","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n    Box,\n    CircularProgress,\n    Autocomplete,\n} from '@mui/material';\nimport { useState, useCallback, useEffect, useRef, SyntheticEvent } from 'react';\nimport { \n    IEmcInviteContactsParams, \n    tmsEmcInviteContacts, \n    IEmcContactIdentity, \n    user, \n    tmsEmcGetContactTypes,\n    IEmcGetContactTypesResult,\n    IEmcContactTypeItem,\n    IEmcInviteResultItem,\n} from '@app/model';\nimport toast from 'react-hot-toast';\nimport { matrixUser } from '@im/matrix';\nimport { authService } from '@src/services/authService';\nimport { Log, useProxyWatch,\n    IRequestResult } from '@fanfanlo';\nconst fileLogger = new Log(false, 'InviteContactDialog.tsx');\n\nconst isValidIdentity = (text: string) => /(^\\d{11}$)|(^[a-zA-Z0-9]{32}$)/.test(text);\nconst is11DigitNumber = (text: string) => /^\\d{11}$/.test(text);\n\ninterface InviteContactDialogProps {\n    open: boolean;\n    onClose: () => void;\n    onInviteSent?: () => void;\n}\n\nexport function InviteContactDialog({ open, onClose, onInviteSent }: InviteContactDialogProps) {\n    const uiLogger = fileLogger.sub(false, 'InviteContactDialog_ui');\n\n    const [contacts, setContacts] = useState('');\n    const [remark, setRemark] = useState('');\n    const [callType, setCallType] = useState<string | null>(null);\n    const [availableCallTypes, setAvailableCallTypes] = useState<readonly IEmcContactTypeItem[]>([]);\n    \n    // Debug effect to log availableCallTypes changes\n    useEffect(() => {\n        console.log('availableCallTypes updated:', availableCallTypes);\n    }, [availableCallTypes]);\n    \n    // Debug effect to log callType changes\n    useEffect(() => {\n        console.log('callType updated:', callType);\n    }, [callType]);\n    const [message, setMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isTypesLoading, setIsTypesLoading] = useState(false);\n\n    const [pendingParams, setPendingParams] = useState<Omit<IEmcInviteContactsParams, 'matrix_access_token'> | null>(null);\n    const executionLock = useRef(false);\n    const [accessToken] = useProxyWatch(matrixUser.userData.userInfo, 'loginResponse.access_token', matrixUser.userData.userInfo.loginResponse?.access_token);\n    const [isUserLoggedIn] = useProxyWatch(user.data.sessionData, 'global_user_info', !!user.data.sessionData.global_user_info);\n    const [userToken] = useProxyWatch(user, 'data.storeData.user_token', user.data.storeData.user_token);\n    useEffect(() => {\n        if (accessToken && pendingParams && !executionLock.current) {\n            executionLock.current = true;\n            const finalParams: IEmcInviteContactsParams = {\n                ...pendingParams,\n                matrix_access_token: accessToken,\n                contacts: pendingParams?.contacts || [],\n                type: pendingParams?.type || ''\n            };\n            executeApiCall(finalParams);\n        }\n    }, [accessToken, pendingParams]);\n\n    const executeApiCall = useCallback(async (params: IEmcInviteContactsParams) => {\n        if (!params.contacts || !params.type) {\n            toast.error('请填写联系人和呼叫类型');\n            return;\n        }\n\n        setIsLoading(true);\n        \n        try {\n            const res = await tmsEmcInviteContacts({\n                params,\n                handler: { printLog: true }\n            });\n\n            console.log('Invite response:', res);\n\n            // 处理响应结果\n            if (res.err || !res.shellIsOk || !res.dataIsOk) {\n                const errorMessage = res.err?.message || '邀请失败，请稍后重试';\n                toast.error(errorMessage);\n                return;\n            }\n\n            // 处理嵌套的响应结构\n            const responseData = res.data;\n            if (!responseData?.data?.results) {\n                const errorMessage = responseData?.data?.msg || res.data?.msg || '未返回有效的结果';\n                toast.error(errorMessage);\n                return;\n            }\n            \n            const results: IEmcInviteResultItem[] = responseData.data.results;\n\n            // 统计成功和失败的数量\n            const successResults = results.filter(r => r.result_code === 'SUCCESS');\n            const infoResults = results.filter(r => r.result_code === 'INVITE_ALREADY_SENT' || r.result_code === 'ALREADY_A_CONTACT');\n            const errorResults = results.filter(r => r.result_code !== 'SUCCESS' && r.result_code !== 'INVITE_ALREADY_SENT' && r.result_code !== 'ALREADY_A_CONTACT');\n\n            if (successResults.length > 0) {\n                toast.success(`成功邀请 ${successResults.length} 个联系人`);\n                onInviteSent?.();\n            }\n            \n            if (infoResults.length > 0) {\n                const infoMessages = infoResults.map(r => r.msg).filter(Boolean).join('\\n');\n                if (infoMessages) {\n                    // 使用默认的 toast 替代 toast.info\n                    toast(infoMessages);\n                }\n            }\n            \n            if (errorResults.length > 0) {\n                const errorMessages = errorResults.map(r => r.msg).filter(Boolean).join('\\n');\n                if (errorMessages) {\n                    toast.error(`部分邀请失败：\\n${errorMessages}`);\n                }\n            }\n        } catch (error) {\n            console.error('Error in executeApiCall:', error);\n            toast.error('处理请求时发生错误，请稍后重试');\n        } finally {\n            setIsLoading(false);\n        }\n    }, [onInviteSent]);\n\n    const fetchCallTypes = useCallback(async () => {\n        const logger = uiLogger.sub(false, 'fetchCallTypes_fn');\n        logger.log('Fetching call types...');\n        setIsTypesLoading(true);\n        const res: IRequestResult<IEmcGetContactTypesResult, any> = await tmsEmcGetContactTypes({ params: {}, handler: { printLog: true } });\n        logger.log('Call types response:', JSON.stringify(res));\n        setIsTypesLoading(false);\n\n        if (res.err || !res.shellIsOk || !res.dataIsOk) {\n            const errorMessage = res.err?.message || '加载呼叫类型失败。';\n            toast.error(errorMessage);\n            setAvailableCallTypes([]);\n            logger.error('Failed to load call types:', errorMessage);\n        } else {\n            // 从 res.data.data.types 获取数据\n            const types = res.data?.data?.types || [];\n            logger.log('Setting availableCallTypes:', JSON.stringify(types));\n            \n            // 转换为 IEmcContactTypeItem[] 格式\n            const formattedTypes = types.map(type => ({\n                id: type.uuid,\n                name: type.name,\n                is_system: type.is_system\n            }));\n            \n            setAvailableCallTypes(formattedTypes);\n            \n            // 只在 callType 为空时设置默认值\n            if (formattedTypes.length > 0 && !callType) {\n                const defaultType = formattedTypes[0].name;\n                logger.log('Setting default call type:', defaultType);\n                setCallType(defaultType);\n            } else if (formattedTypes.length === 0) {\n                logger.warn('No call types available');\n            }\n        }\n    }, []); // 移除了 callType 依赖\n\n    useEffect(() => {\n        if (open) {\n            fetchCallTypes();\n        } else {\n            setContacts('');\n            setRemark('');\n            setCallType(null);\n            setAvailableCallTypes([]);\n            setMessage('');\n            setIsLoading(false);\n            setPendingParams(null);\n            executionLock.current = false;\n        }\n    }, [open, fetchCallTypes]);\n\n    const handleSendInvitation = useCallback(async () => {\n        const contactInputs = contacts.split('\\n').map(c => c.trim()).filter(c => c);\n        if (contactInputs.length === 0) {\n            toast.error('请输入至少一个联系人。');\n            return;\n        }\n\n        const contactIdentities: IEmcContactIdentity[] = [];\n        for (const input of contactInputs) {\n            if (isValidIdentity(input)) {\n                const type = is11DigitNumber(input) ? 'mobile' : 'email';\n                contactIdentities.push({ identity: input, identityType: type });\n            } else {\n                toast.error(`联系人格式无效: ${input}。必须是11位手机号或32位字符串。`);\n                return;\n            }\n        }\n\n        if (!callType || callType.trim() === '') {\n            toast.error('请选择或输入一个呼叫类型。');\n            return;\n        }\n\n        setIsLoading(true);\n\n        if (!userToken) {\n            const appLoggedIn = await authService.showLoginDialog();\n            if (!appLoggedIn) {\n                setIsLoading(false);\n                return; \n            }\n        }\n\n        const currentAccessToken = matrixUser.userData.userInfo.loginResponse?.access_token;\n        const params: Omit<IEmcInviteContactsParams, 'matrix_access_token'> = {\n            contacts: contactIdentities,\n            type: callType.trim(),\n            remark: remark.trim(),\n            message: message.trim(),\n        };\n\n        if (currentAccessToken) {\n            executionLock.current = true;\n            const apiParams: IEmcInviteContactsParams = {\n                ...params,\n                matrix_access_token: currentAccessToken,\n                contacts: params.contacts || [],\n                type: params.type || ''\n            };\n            executeApiCall(apiParams);\n        } else {\n            toast('等待登录...');\n            setPendingParams(params);\n        }\n\n    }, [contacts, remark, callType, message, executeApiCall, isUserLoggedIn]);\n\n    return (\n        <Dialog open={open} onClose={() => onClose()} maxWidth=\"sm\" fullWidth>\n            <DialogTitle>邀请紧急联系人</DialogTitle>\n            <DialogContent>\n                <Box component=\"form\" sx={{ mt: 2 }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"contacts\"\n                        label=\"联系人 (11位手机号或32位ID)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                        placeholder=\"13800138000&#10;550e8400e29b41d4a716446655440000\"\n                        value={contacts}\n                        onChange={(e) => setContacts(e.target.value)}\n                        disabled={isLoading}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"remark\"\n                        label=\"备注名 (可选)\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"outlined\"\n                        value={remark}\n                        onChange={(e) => setRemark(e.target.value)}\n                        disabled={isLoading}\n                    />\n                    <Autocomplete\n                        freeSolo\n                        id=\"call-type-autocomplete\"\n                        options={availableCallTypes.map((option) => option.name)}\n                        value={callType || ''}\n                        onChange={(event: SyntheticEvent, newValue: string | null) => {\n                            console.log('Call type changed to:', newValue);\n                            setCallType(newValue);\n                        }}\n                        inputValue={callType || ''}\n                        onInputChange={(event, newInputValue, reason) => {\n                            // Only update when the user is typing, not when an option is selected\n                            if (reason === 'input') {\n                                console.log('Input value changed to:', newInputValue);\n                                setCallType(newInputValue);\n                            }\n                        }}\n                        disablePortal\n                        disableClearable\n                        forcePopupIcon={!isTypesLoading}\n                        sx={{ mt: 1, mb: 1, width: '100%' }}\n                        renderInput={(params) => (\n                            <TextField\n                                {...params}\n                                label=\"呼叫类型\"\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{\n                                    ...params.InputProps,\n                                    endAdornment: (\n                                        <>\n                                            {isTypesLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                            {params.InputProps.endAdornment}\n                                        </>\n                                    ),\n                                }}\n                            />\n                        )}\n                        ListboxProps={{\n                            style: {\n                                maxHeight: '200px',\n                                overflow: 'auto',\n                            },\n                        }}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"message\"\n                        label=\"邀请信息 (可选)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        rows={3}\n                        variant=\"outlined\"\n                        placeholder=\"我已将您添加为我的紧急联系人，请接受邀请。\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        disabled={isLoading}\n                    />\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => onClose()} disabled={isLoading}>关闭</Button>\n                <Button onClick={handleSendInvitation} variant=\"contained\" disabled={isLoading}>\n                    {isLoading ? <CircularProgress size={24} /> : '发送邀请'}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { request } from \"@fanfanlo\";\n\n/**\n * 获取未处理被邀请信息的请求参数\n */\nexport interface IParamsListPendingReceivedInvitations {\n  // 可以添加分页等参数\n  page?: number;\n  page_size?: number;\n}\n\n/**\n * 未处理的被邀请信息\n */\nexport interface IPendingInvitationInfo {\n  invitation_id: string;\n  user_info: {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n  };\n  status: 'pending';\n  message: string;\n  created_at: number;\n  expires_at: number;\n}\n\n/**\n * 获取未处理被邀请信息的响应结果\n */\nexport interface IResultListPendingReceivedInvitations {\n  is_ok: boolean;\n  msg?: string;\n  invitations: IPendingInvitationInfo[];\n}\n\n/**\n * 获取未处理的被邀请信息\n */\nexport async function tmsEmergencyCallListPendingReceivedInvitations(\n  opts: IRequestOptions<IParamsListPendingReceivedInvitations>\n) {\n  return request<IResultListPendingReceivedInvitations, IParamsListPendingReceivedInvitations>(\n    tms.TEmc,\n    tms.MEmcListPendingReceivedInvitations,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出服务\nexport const emergencyCallPendingInvitationService = {\n  listPendingReceivedInvitations: tmsEmergencyCallListPendingReceivedInvitations,\n};\n\nexport default emergencyCallPendingInvitationService;","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  CircularProgress,\n  Avatar,\n  Chip,\n  Alert,\n  Stack,\n} from '@mui/material';\nimport {\n  Check as CheckIcon,\n  Close as CloseIcon,\n  AccessTime as AccessTimeIcon,\n  Person as PersonIcon,\n  Notifications as NotificationsIcon,\n} from '@mui/icons-material';\nimport { formatDistanceToNow } from 'date-fns';\nimport { zhCN } from 'date-fns/locale';\nimport { \n  emergencyCallPendingInvitationService,\n  emergencyCallInvitationService,\n  IPendingInvitationInfo,\n  user,\n  AppModelEvent,\n  appModel\n} from '@app/model';\nimport { useProxyWatch } from '@fanfanlo';\n\n// 邀请卡片组件\nfunction PendingInvitationCard({ \n  invitation,\n  onRespond,\n  isProcessing = false,\n}: { \n  invitation: IPendingInvitationInfo;\n  onRespond?: (action: 'accept' | 'decline') => Promise<void>;\n  isProcessing?: boolean;\n}) {\n  const [isProcessingAction, setIsProcessingAction] = useState(false);\n\n  const handleRespond = async (action: 'accept' | 'decline') => {\n    if (!onRespond) return;\n    \n    try {\n      setIsProcessingAction(true);\n      await onRespond(action);\n    } finally {\n      setIsProcessingAction(false);\n    }\n  };\n\n  const isExpired = new Date(invitation.expires_at * 1000) < new Date();\n\n  return (\n    <Card variant=\"outlined\" sx={{ mb: 2, opacity: isProcessing ? 0.7 : 1 }}>\n      <CardContent>\n        <Box display=\"flex\" alignItems=\"center\" mb={2}>\n          <Avatar \n            src={invitation.user_info.avatar_url} \n            alt={invitation.user_info.display_name}\n            sx={{ width: 50, height: 50, mr: 2 }}\n          >\n            {invitation.user_info.display_name?.[0]?.toUpperCase() || '?'}\n          </Avatar>\n          <Box flexGrow={1}>\n            <Typography variant=\"h6\">\n              {invitation.user_info.display_name || '未知用户'}\n            </Typography>\n            {/* <Typography variant=\"body2\" color=\"text.secondary\">\n              ID: {invitation.user_info.user_id}\n            </Typography> */}\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 0.5 }}>\n              {formatDistanceToNow(invitation.created_at * 1000, { \n                addSuffix: true, \n                locale: zhCN \n              })}\n            </Typography>\n          </Box>\n          <Box textAlign=\"right\">\n            <Chip \n              size=\"small\"\n              icon={<AccessTimeIcon fontSize=\"small\" />}\n              label={isExpired ? '已过期' : `${formatDistanceToNow(invitation.expires_at * 1000, { \n                addSuffix: true, \n                locale: zhCN \n              })}`}\n              color={isExpired ? 'error' : 'primary'}\n              variant=\"outlined\"\n            />\n          </Box>\n        </Box>\n        \n        {invitation.message && (\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1, mb: 1 }}>\n            邀请信息: {invitation.message}\n          </Typography>\n        )}\n\n        <Typography variant=\"body2\" color=\"primary\" sx={{ fontWeight: 'medium' }}>\n          邀请您成为紧急联系人\n        </Typography>\n      </CardContent>\n      \n      {!isExpired && (\n        <CardActions sx={{ justifyContent: 'flex-end', pt: 0 }}>\n          <Button \n            size=\"small\" \n            color=\"error\"\n            startIcon={<CloseIcon />}\n            onClick={() => handleRespond('decline')}\n            disabled={isProcessing || isProcessingAction}\n          >\n            拒绝\n          </Button>\n          <Button \n            size=\"small\" \n            color=\"primary\"\n            variant=\"contained\"\n            startIcon={<CheckIcon />}\n            onClick={() => handleRespond('accept')}\n            disabled={isProcessing || isProcessingAction}\n          >\n            接受\n          </Button>\n        </CardActions>\n      )}\n    </Card>\n  );\n}\n\nconst PendingInvitationsList: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [invitations, setInvitations] = useState<IPendingInvitationInfo[]>([]);\n  const [isProcessing, setIsProcessing] = useState<boolean>(false);\n\n  // 监听用户登录状态\n  const [userToken] = useProxyWatch(user, 'data.storeData.user_token', user.data.storeData.user_token);\n\n  // 加载未处理的被邀请信息\n  const loadPendingInvitations = useCallback(async () => {\n    if (!userToken) {\n      setInvitations([]);\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const res = await emergencyCallPendingInvitationService.listPendingReceivedInvitations({\n        params: {},\n      } as any);\n      \n      if (res.shellIsOk && res.dataIsOk && res.data?.is_ok) {\n        setInvitations(res.data.invitations || []);\n      } else {\n        setError(res.data?.msg || '加载邀请列表失败');\n      }\n    } catch (err) {\n      console.error('加载未处理邀请列表异常:', err);\n      setError('发生未知错误');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [userToken]); // 现在可以安全地依赖userToken了\n\n  // 响应邀请\n  const handleRespondToInvite = useCallback(async (invitationId: string, action: 'accept' | 'decline'): Promise<void> => {\n    try {\n      setIsProcessing(true);\n\n      const res = await emergencyCallInvitationService.respondToInvite({\n        params: { invitation_id: invitationId, action },\n      } as any);\n\n      if (!res.shellIsOk || !res.dataIsOk || !res.data?.is_ok) {\n        throw new Error(res.data?.msg || '操作失败');\n      }\n      \n      // 从列表中移除已处理的邀请\n      setInvitations(prev => prev.filter(invite => invite.invitation_id !== invitationId));\n      \n      // 发送邀请列表更新事件\n      appModel.dispatcher.emit(AppModelEvent.InviteListUpdated);\n      \n    } catch (err) {\n      console.error('处理邀请失败:', err);\n      setError(err instanceof Error ? err.message : '操作失败，请重试');\n    } finally {\n      setIsProcessing(false);\n    }\n  }, []);\n\n  // 监听用户登录状态变化\n  useEffect(() => {\n    console.log('PendingInvitationsList - userToken changed:', userToken);\n    if (userToken) {\n      // 有登录用户了，刷新邀请列表\n      loadPendingInvitations();\n    } else {\n      // 清空邀请信息列表\n      setInvitations([]);\n    }\n  }, [userToken]); // 只依赖userToken\n\n  // 监听邀请列表更新事件\n  useEffect(() => {\n    const unsubscribe = appModel.dispatcher.addListener(AppModelEvent.InviteListUpdated, () => {\n      console.log('AppModelEvent.InviteListUpdated - 刷新未处理邀请列表');\n      loadPendingInvitations();\n    });\n\n    return unsubscribe;\n  }, [loadPendingInvitations]); // 依赖loadPendingInvitations函数\n\n  // 如果没有登录用户，不显示任何内容\n  if (!userToken) {\n    return null;\n  }\n\n  if (isLoading) {\n    return (\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" p={2}>\n        {/* <CircularProgress size={24} />\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n          加载中...\n        </Typography> */}\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box p={2}>\n        <Alert severity=\"error\">\n          {error}\n        </Alert>\n      </Box>\n    );\n  }\n\n  if (invitations.length === 0) {\n    return (\n      <Box \n        display=\"flex\" \n        flexDirection=\"column\" \n        alignItems=\"center\" \n        p={2}\n        textAlign=\"center\"\n      >\n        {/* <NotificationsIcon color=\"disabled\" sx={{ fontSize: 48, mb: 1 }} />\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          暂无未处理的邀请\n        </Typography> */}\n      </Box>\n    );\n  }\n\n  return (\n    <Box p={2}>\n      <Box display=\"flex\" alignItems=\"center\" mb={2}>\n        <NotificationsIcon color=\"primary\" sx={{ mr: 1 }} />\n        <Typography variant=\"h6\" color=\"primary\">\n          未处理的邀请 ({invitations.length})\n        </Typography>\n      </Box>\n\n      <Stack spacing={2}>\n        {invitations.map((invitation) => (\n          <PendingInvitationCard\n            key={invitation.invitation_id}\n            invitation={invitation}\n            onRespond={(action) => handleRespondToInvite(invitation.invitation_id, action)}\n            isProcessing={isProcessing}\n          />\n        ))}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default PendingInvitationsList;","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\lodash@4.17.21\\\\node_modules\\\\lodash\\\\lodash.js\"","import React, { useState, useCallback } from 'react';\nimport {\n    Box,\n    Switch,\n    Button,\n    Typography,\n    Paper,\n    Collapse,\n    Divider,\n    IconButton,\n    TextField,\n    FormControlLabel,\n    Tooltip,\n    Stack,\n    FormControl,\n    MenuItem,\n    InputLabel,\n    Select,\n} from '@mui/material';\nimport {\n    DragIndicator as DragIndicatorIcon,\n    ExpandLess,\n    Settings,\n    Delete,\n    PlayArrow,\n    Stop,\n    VolumeUp as VolumeUpIcon,\n    Vibration as VibrationIcon\n} from '@mui/icons-material';\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, TouchSensor, useSensor, useSensors, DragEndEvent } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, sortableKeyboardCoordinates, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { debounce } from 'lodash';\nimport { autoJsStoreUtils } from '@droid/android';\n\nconst PRE_ALARM_CONFIG_KEY = 'PRE_ALARM_ACTIONS_CONFIG';\n\ninterface PreAlarmAction {\n    id: string;\n    type: 'sound' | 'vibration';\n    duration: number;\n    resourceId?: string;\n}\n\ninterface PreAlarmConfig {\n    enabled: boolean;\n    actions: PreAlarmAction[];\n    maxWaitDuration: number;\n}\n\nconst defaultSoundResources = [\n    { id: 'beep_short', name: '短提示音' },\n    { id: 'siren_gentle', name: '缓和警报' },\n    { id: 'alarm_clock', name: '闹钟' },\n];\n\nconst SortableActionItem: React.FC<{\n    action: PreAlarmAction;\n    isPlaying: boolean;\n    onUpdate: (id: string, updates: Partial<Omit<PreAlarmAction, 'id'>>) => void;\n    onRemove: (id: string) => void;\n    onPreview: (resourceId?: string) => void;\n    onStopPreview: () => void;\n}> = ({ action, isPlaying, onUpdate, onRemove, onPreview, onStopPreview }) => {\n    const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id: action.id });\n\n    const style = {\n        transform: CSS.Transform.toString(transform),\n        transition,\n        opacity: isDragging ? 0.8 : 1,\n        zIndex: isDragging ? 1 : 'auto',\n    };\n\n    return (\n        <Paper\n            ref={setNodeRef}\n            style={style}\n            elevation={isDragging ? 3 : 1}\n            sx={{\n                p: 2,\n                mb: 1,\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2,\n                userSelect: 'none',\n            }}\n        >\n            <Box {...attributes} {...listeners} sx={{ display: 'flex', alignItems: 'center', cursor: 'grab', touchAction: 'none' }}>\n                <DragIndicatorIcon />\n            </Box>\n            \n            <Box sx={{ flexGrow: 1 }}>\n                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', gap: 1.5 }}>\n                    <Typography variant=\"subtitle2\">\n                        {action.type === 'sound' ? '声音' : '震动'}\n                    </Typography>\n                    <TextField\n                        size=\"small\"\n                        type=\"number\"\n                        label=\"持续时间 (ms)\"\n                        value={action.duration}\n                        onChange={(e) => onUpdate(action.id, { duration: parseInt(e.target.value, 10) || 0 })}\n                        sx={{ width: '100%' }}\n                    />\n                    \n                    {action.type === 'sound' && (\n                        <FormControl size=\"small\" sx={{ width: '100%' }}>\n                            <InputLabel>声音类型</InputLabel>\n                            <Select\n                                value={action.resourceId || ''}\n                                label=\"声音类型\"\n                                onChange={(e) => onUpdate(action.id, { resourceId: e.target.value })}\n                                startAdornment={\n                                    <Tooltip title={isPlaying ? \"停止\" : \"试听\"}>\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() => isPlaying ? onStopPreview() : onPreview(action.resourceId)}\n                                            sx={{ mr: 1 }}\n                                        >\n                                            {isPlaying ? <Stop fontSize=\"small\" /> : <PlayArrow fontSize=\"small\" />}\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                            >\n                                {defaultSoundResources.map((sound) => (\n                                    <MenuItem key={sound.id} value={sound.id}>\n                                        {sound.name}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    )}\n                </Box>\n            </Box>\n            \n            <IconButton onClick={() => onRemove(action.id)} size=\"small\" color=\"error\">\n                <Delete />\n            </IconButton>\n        </Paper>\n    );\n};\n\nconst PreAlarmConfig2: React.FC = () => {\n    const [config, setConfig] = useState<PreAlarmConfig | null>(null);\n    const [expanded, setExpanded] = useState(false);\n    const [playingSoundId, setPlayingSoundId] = useState<string | null>(null);\n\n    const debouncedWrite = useCallback(\n        debounce((newConfig: PreAlarmConfig) => {\n            autoJsStoreUtils.write(PRE_ALARM_CONFIG_KEY, newConfig);\n        }, 500),\n        []\n    );\n\n    const sensors = useSensors(\n        useSensor(PointerSensor, {\n            activationConstraint: {\n                distance: 8,\n            },\n        }),\n        useSensor(TouchSensor, {\n            activationConstraint: {\n                delay: 250,\n                tolerance: 5,\n            },\n        }),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: sortableKeyboardCoordinates,\n        })\n    );\n\n    React.useEffect(() => {\n        const loadConfig = async () => {\n            const storedConfig = await autoJsStoreUtils.read<PreAlarmConfig>(PRE_ALARM_CONFIG_KEY);\n            if (storedConfig) {\n                const actionsWithIds = storedConfig.actions.map((action) => ({\n                    ...action,\n                    id: action.id || `action-${Math.random().toString(36).substr(2, 9)}`,\n                }));\n                setConfig({\n                    ...storedConfig,\n                    actions: actionsWithIds,\n                });\n            } else {\n                setConfig({\n                    enabled: true,\n                    actions: [],\n                    maxWaitDuration: 30000,\n                });\n            }\n        };\n        loadConfig();\n    }, []);\n\n    const updateConfig = useCallback(\n        (updates: Partial<PreAlarmConfig>) => {\n            setConfig((prev) => {\n                if (!prev) return null;\n                const newConfig = { ...prev, ...updates };\n                debouncedWrite(newConfig);\n                return newConfig;\n            });\n        },\n        [debouncedWrite]\n    );\n\n    const handleToggleEnabled = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateConfig({ enabled: event.target.checked });\n    };\n\n    const handleAddAction = (type: 'sound' | 'vibration') => {\n        const newAction: PreAlarmAction = {\n            id: `action-${Date.now()}`,\n            type,\n            duration: 3000,\n            ...(type === 'sound' && { resourceId: defaultSoundResources[0].id }),\n        };\n        updateConfig({\n            actions: [...(config?.actions || []), newAction],\n        });\n    };\n\n    const handleUpdateAction = (id: string, updates: Partial<Omit<PreAlarmAction, 'id'>>) => {\n        if (!config) return;\n        updateConfig({\n            actions: config.actions.map((action) =>\n                action.id === id ? { ...action, ...updates } : action\n            ),\n        });\n    };\n\n    const handleRemoveAction = (id: string) => {\n        if (!config) return;\n        updateConfig({\n            actions: config.actions.filter((action) => action.id !== id),\n        });\n    };\n\n    const handleDragEnd = (event: DragEndEvent) => {\n        const { active, over } = event;\n        if (!config || !over || active.id === over.id) return;\n\n        const oldIndex = config.actions.findIndex((a) => a.id === active.id);\n        const newIndex = config.actions.findIndex((a) => a.id === over.id);\n\n        if (oldIndex !== -1 && newIndex !== -1) {\n            updateConfig({\n                actions: arrayMove(config.actions, oldIndex, newIndex),\n            });\n        }\n    };\n\n    const handlePreviewSound = (resourceId?: string) => {\n        if (!resourceId) return;\n        handleStopSound();\n        \n        console.log(`[WebView] Attempting to preview sound. resourceId: ${resourceId}`);\n\n        if ((window as any).SoundManager) {\n            (window as any).SoundManager.previewSound(resourceId);\n            setPlayingSoundId(resourceId);\n        } else {\n            console.warn('SoundManager JavascriptInterface is not available.');\n        }\n    };\n\n    const handleStopSound = () => {\n        if ((window as any).SoundManager) {\n            (window as any).SoundManager.stopPreview();\n        }\n        setPlayingSoundId(null);\n    };\n\n    if (!config) {\n        return <Box sx={{ p: 2, textAlign: 'center' }}>加载中...</Box>;\n    }\n\n    return (\n        <Box sx={{ mb: 3 }}>\n            <Paper \n                elevation={1} \n                sx={{ \n                    p: 2, \n                    display: 'flex', \n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    borderRadius: 1,\n                }}\n            >\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <Typography variant=\"subtitle1\">防误触报警设置</Typography>\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={config.enabled}\n                                onChange={handleToggleEnabled}\n                                color=\"primary\"\n                            />\n                        }\n                        label={config.enabled ? '已启用' : '已禁用'}\n                    />\n                </Box>\n                \n                <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    startIcon={expanded ? <ExpandLess /> : <Settings />}\n                    onClick={() => setExpanded(!expanded)}\n                >\n                    {expanded ? '收起设置' : '设置'}\n                </Button>\n            </Paper>\n\n            <Collapse in={expanded}>\n                <Paper \n                    elevation={0} \n                    sx={{ \n                        mt: 1, \n                        p: 2, \n                        border: '1px solid', \n                        borderColor: 'divider',\n                        borderRadius: 1,\n                    }}\n                >\n                    <Box sx={{ mb: 3 }}>\n                        <Typography variant=\"subtitle2\" gutterBottom>\n                            最大等待时间 (毫秒)\n                        </Typography>\n                        <TextField\n                            fullWidth\n                            type=\"number\"\n                            value={config.maxWaitDuration}\n                            onChange={(e) =>\n                                updateConfig({ maxWaitDuration: parseInt(e.target.value, 10) || 0 })\n                            }\n                            size=\"small\"\n                            InputProps={{\n                                endAdornment: (\n                                    <Typography variant=\"body2\" sx={{ ml: 1 }}>\n                                        毫秒\n                                    </Typography>\n                                ),\n                            }}\n                        />\n                    </Box>\n\n                    <Divider sx={{ my: 2 }} />\n\n                    <Box sx={{ mb: 2 }}>\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                            <Typography variant=\"subtitle2\">\n                                预警动作 ({config.actions.length})\n                            </Typography>\n                            <Stack direction=\"row\" spacing={1}>\n                                <Button\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    startIcon={<VolumeUpIcon />}\n                                    onClick={() => handleAddAction('sound')}\n                                >\n                                    添加声音\n                                </Button>\n                                <Button\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    startIcon={<VibrationIcon />}\n                                    onClick={() => handleAddAction('vibration')}\n                                >\n                                    添加震动\n                                </Button>\n                            </Stack>\n                        </Box>\n\n                        {config.actions.length === 0 ? (\n                            <Paper\n                                variant=\"outlined\"\n                                sx={{\n                                    p: 3,\n                                    textAlign: 'center',\n                                    color: 'text.secondary',\n                                }}\n                            >\n                                <Typography>暂无报警动作，请点击上方按钮添加</Typography>\n                            </Paper>\n                        ) : (\n                            <DndContext\n                                sensors={sensors}\n                                collisionDetection={closestCenter}\n                                onDragEnd={handleDragEnd}\n                            >\n                                <SortableContext\n                                    items={config.actions.map((a) => a.id)}\n                                    strategy={verticalListSortingStrategy}\n                                >\n                                    {config.actions.map((action) => (\n                                        <SortableActionItem\n                                            key={action.id}\n                                            action={action}\n                                            isPlaying={playingSoundId === action.resourceId}\n                                            onUpdate={handleUpdateAction}\n                                            onRemove={handleRemoveAction}\n                                            onPreview={handlePreviewSound}\n                                            onStopPreview={handleStopSound}\n                                        />\n                                    ))}\n                                </SortableContext>\n                            </DndContext>\n                        )}\n                    </Box>\n                </Paper>\n            </Collapse>\n        </Box>\n    );\n};\n\nexport default PreAlarmConfig2;\n","import React, { useState } from 'react';\nimport { \n    Box, \n    Paper, \n    Typography, \n    Button, \n    TextField, \n    Alert,\n    Divider,\n    Grid\n} from '@mui/material';\nimport { \n    MedicalServices as MedicalIcon,\n    Security as SecurityIcon,\n    Shortcut as ShortcutIcon\n} from '@mui/icons-material';\nimport { autoWebViewJs } from '@droid/android';\n\n/**\n * 桌面快捷方式配置组件\n * 用于创建医疗呼救和安全呼救的桌面快捷方式\n */\nconst ShortcutConfig: React.FC = () => {\n    const [medicalName, setMedicalName] = useState('意外呼救');\n    const [securityName, setSecurityName] = useState('安全呼救');\n    const [isCreating, setIsCreating] = useState(false);\n    const [message, setMessage] = useState<{type: 'success' | 'error' | 'info', text: string} | null>(null);\n\n    // 创建医疗呼救快捷方式\n    const handleCreateMedicalShortcut = async () => {\n        if (!medicalName.trim()) {\n            setMessage({type: 'error', text: '请输入快捷方式名称'});\n            return;\n        }\n\n        setIsCreating(true);\n        setMessage(null);\n\n        try {\n            // 检查是否支持快捷方式\n            const supportScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.isShortcutSupported();`;\n            const {javaResultString: supportResult} = autoWebViewJs.callScript(supportScript);\n            \n            if (supportResult !== 'true') {\n                setMessage({type: 'error', text: '当前设备不支持创建桌面快捷方式'});\n                return;\n            }\n\n            // 创建医疗呼救快捷方式\n            const script = `com.fanfanlo.emergencycall.manager.ShortcutManager.createMedicalShortcut(\"${medicalName}\");`;\n            const {javaResultString} = autoWebViewJs.callScript(script);\n            \n            if (javaResultString === 'true') {\n                setMessage({type: 'success', text: '医疗呼救快捷方式创建成功！请检查您的桌面。'});\n            } else {\n                setMessage({type: 'error', text: '快捷方式创建失败，请检查权限设置'});\n            }\n        } catch (error) {\n            console.error('Error creating medical shortcut:', error);\n            setMessage({type: 'error', text: '创建快捷方式时发生错误'});\n        } finally {\n            setIsCreating(false);\n        }\n    };\n\n    // 创建安全呼救快捷方式\n    const handleCreateSecurityShortcut = async () => {\n        if (!securityName.trim()) {\n            setMessage({type: 'error', text: '请输入快捷方式名称'});\n            return;\n        }\n\n        setIsCreating(true);\n        setMessage(null);\n\n        try {\n            // 检查是否支持快捷方式\n            const supportScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.isShortcutSupported();`;\n            const {javaResultString: supportResult} = autoWebViewJs.callScript(supportScript);\n            \n            if (supportResult !== 'true') {\n                setMessage({type: 'error', text: '当前设备不支持创建桌面快捷方式'});\n                return;\n            }\n\n            // 创建安全呼救快捷方式\n            const script = `com.fanfanlo.emergencycall.manager.ShortcutManager.createSecurityShortcut(\"${securityName}\");`;\n            const {javaResultString} = autoWebViewJs.callScript(script);\n            \n            if (javaResultString === 'true') {\n                setMessage({type: 'success', text: '安全呼救快捷方式创建成功！请检查您的桌面。'});\n            } else {\n                setMessage({type: 'error', text: '快捷方式创建失败，请检查权限设置'});\n            }\n        } catch (error) {\n            console.error('Error creating security shortcut:', error);\n            setMessage({type: 'error', text: '创建快捷方式时发生错误'});\n        } finally {\n            setIsCreating(false);\n        }\n    };\n\n    // 检查设备支持情况和权限引导\n    const handleCheckSupport = async () => {\n        try {\n            const supportScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.isShortcutSupported();`;\n            const brandScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.getDeviceBrand();`;\n            const guideScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.getPermissionGuideText();`;\n            \n            const {javaResultString: supportResult} = autoWebViewJs.callScript(supportScript);\n            const {javaResultString: brandResult} = autoWebViewJs.callScript(brandScript);\n            const {javaResultString: guideResult} = autoWebViewJs.callScript(guideScript);\n            \n            const supportInfo = `设备支持情况：\n设备品牌: ${brandResult}\n快捷方式支持: ${supportResult === 'true' ? '支持' : '不支持'}\n\n${guideResult}`;\n            \n            setMessage({type: 'info', text: supportInfo});\n        } catch (error) {\n            console.error('Error checking support:', error);\n            setMessage({type: 'error', text: '检查设备支持情况时发生错误'});\n        }\n    };\n    \n    // 检查并请求权限\n    const handleRequestPermission = async () => {\n        try {\n            console.log('开始调用权限引导方法...');\n            \n            // 先测试基础方法是否工作\n            const brandScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.getDeviceBrand();`;\n            const brandResult = autoWebViewJs.callScript(brandScript);\n            console.log('设备品牌测试:', brandResult);\n            \n            if (!brandResult || brandResult.javaResultString === undefined) {\n                throw new Error('基础方法调用失败，可能需要重新编译应用');\n            }\n            \n            // 尝试新的权限引导方法\n            const script = `com.fanfanlo.emergencycall.manager.ShortcutManager.checkAndRequestPermissionWithResult();`;\n            const {javaResultString: result} = autoWebViewJs.callScript(script);\n            console.log('权限引导结果:', result);\n            \n            if (result && result !== 'undefined') {\n                setMessage({\n                    type: result.startsWith('✅') ? 'success' : result.startsWith('❌') ? 'error' : 'info', \n                    text: result\n                });\n            } else {\n                throw new Error('新方法返回undefined，使用兜底方案');\n            }\n        } catch (error) {\n            console.error('权限引导调用出错:', error);\n            console.log('尝试使用兜底方案...');\n            \n            // 兜底方案：使用旧方法 + 手动指引\n            try {\n                const fallbackScript = `com.fanfanlo.emergencycall.manager.ShortcutManager.checkAndRequestShortcutPermission();`;\n                const fallbackResult = autoWebViewJs.callScript(fallbackScript);\n                \n                const brand = autoWebViewJs.callScript(`com.fanfanlo.emergencycall.manager.ShortcutManager.getDeviceBrand();`);\n                const brandName = brand?.javaResultString || 'UNKNOWN';\n                \n                let guideText = '';\n                if (brandName === 'XIAOMI' || brandName === 'REDMI') {\n                    guideText = `\\n\\n小米/Redmi设备权限设置：\\n1. 打开\"设置\" > \"应用设置\" > \"应用管理\"\\n2. 找到\"紧急呼救\"应用\\n3. 点击\"权限管理\" > \"其他权限\"\\n4. 开启\"创建桌面快捷方式\"权限`;\n                } else {\n                    guideText = `\\n\\n请手动前往：\\n设置 > 应用管理 > 紧急呼救 > 权限管理\\n开启\"创建桌面快捷方式\"权限`;\n                }\n                \n                setMessage({\n                    type: 'warning', \n                    text: `⚠️ 权限引导方法可能需要重新编译应用\\n\\n临时解决方案：${guideText}\\n\\n💡 设置完成后，请返回重新创建快捷方式`\n                });\n            } catch (fallbackError) {\n                console.error('兜底方案也失败:', fallbackError);\n                setMessage({\n                    type: 'error', \n                    text: '❌ 权限方法调用失败\\n\\n可能原因：应用需要重新编译\\n\\n临时解决方案：\\n1. 手动前往：设置 > 应用管理 > 紧急呼救\\n2. 开启\"创建桌面快捷方式\"权限\\n3. 返回重新创建快捷方式'\n                });\n            }\n        }\n    };\n\n    return (\n        <Box sx={{ p: 0,mt:2 }}>\n            <Paper elevation={2} sx={{ p: 1, mb: 0 }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <ShortcutIcon sx={{ mr: 2, color: 'primary.main' }} />\n                    <Typography variant=\"h5\" component=\"h1\">\n                        桌面快捷方式设置\n                    </Typography>\n                </Box>\n                \n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                    创建桌面快捷方式，可以快速触发紧急呼救功能\n                </Typography>\n\n                {message && (\n                    <Alert \n                        severity={message.type} \n                        sx={{ mb: 3 }}\n                        onClose={() => setMessage(null)}\n                    >\n                        <pre style={{ whiteSpace: 'pre-wrap', margin: 0 }}>\n                            {message.text}\n                        </pre>\n                    </Alert>\n                )}\n\n                <Grid container spacing={3}>\n                    {/* 医疗呼救快捷方式 */}\n                    <Grid item xs={12} md={6}>\n                        <Paper variant=\"outlined\" sx={{ p: 3 }}>\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                                <MedicalIcon sx={{ mr: 2, color: 'error.main' }} />\n                                <Typography variant=\"h6\">医疗呼救</Typography>\n                            </Box>\n                            \n                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                                创建医疗紧急呼救快捷方式，点击后直接触发医疗呼救功能\n                            </Typography>\n\n                            <TextField\n                                fullWidth\n                                label=\"快捷方式名称\"\n                                value={medicalName}\n                                onChange={(e) => setMedicalName(e.target.value)}\n                                sx={{ mb: 2 }}\n                                placeholder=\"意外呼救\"\n                            />\n\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"error\"\n                                onClick={handleCreateMedicalShortcut}\n                                disabled={isCreating}\n                                startIcon={<MedicalIcon />}\n                            >\n                                {isCreating ? '创建中...' : '创建医疗呼救快捷方式'}\n                            </Button>\n                        </Paper>\n                    </Grid>\n\n                    {/* 安全呼救快捷方式 */}\n                    <Grid item xs={12} md={6}>\n                        <Paper variant=\"outlined\" sx={{ p: 3 }}>\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                                <SecurityIcon sx={{ mr: 2, color: 'warning.main' }} />\n                                <Typography variant=\"h6\">安全呼救</Typography>\n                            </Box>\n                            \n                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                                创建安全呼救快捷方式（功能开发中，点击显示占位界面）\n                            </Typography>\n\n                            <TextField\n                                fullWidth\n                                label=\"快捷方式名称\"\n                                value={securityName}\n                                onChange={(e) => setSecurityName(e.target.value)}\n                                sx={{ mb: 2 }}\n                                placeholder=\"安全呼救\"\n                            />\n\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"warning\"\n                                onClick={handleCreateSecurityShortcut}\n                                disabled={isCreating}\n                                startIcon={<SecurityIcon />}\n                            >\n                                {isCreating ? '创建中...' : '创建安全呼救快捷方式'}\n                            </Button>\n                        </Paper>\n                    </Grid>\n                </Grid>\n\n                <Divider sx={{ my: 3 }} />\n\n                {/* 工具按钮 */}\n                <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', flexWrap: 'wrap' }}>\n                    <Button\n                        variant=\"outlined\"\n                        onClick={handleCheckSupport}\n                        disabled={isCreating}\n                    >\n                        检查设备支持情况\n                    </Button>\n                    \n                    <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={handleRequestPermission}\n                        disabled={isCreating}\n                    >\n                        打开权限设置\n                    </Button>\n                </Box>\n\n                {/* 使用说明 */}\n                <Box sx={{ mt: 3, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                        使用说明：\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"div\">\n                        <ul style={{ margin: 0, paddingLeft: '20px' }}>\n                            <li>创建快捷方式后，请在桌面查看</li>\n                            <li>医疗呼救快捷方式会直接触发紧急呼救</li>\n                            <li>安全呼救功能正在开发中，明天会完善</li>\n                            <li>支持自定义快捷方式名称</li>\n                            <li><strong>重要：</strong>小米、华为、OPPO、VIVO等设备需要手动开启权限</li>\n                            <li>如果创建失败，请点击“打开权限设置”按钮</li>\n                        </ul>\n                    </Typography>\n                    \n                    <Box sx={{ mt: 2, p: 1.5, bgcolor: 'warning.light', borderRadius: 1, border: '1px solid', borderColor: 'warning.main' }}>\n                        <Typography variant=\"body2\" color=\"warning.dark\">\n                            <strong>ℹ️ 温馨提示：</strong>\n                            如果创建快捷方式时显示“没有权限”错误，请点击上方“打开权限设置”按钮，\n                            系统会自动跳转到对应的权限设置页面。\n                        </Typography>\n                    </Box>\n                </Box>\n            </Paper>\n        </Box>\n    );\n};\n\nexport default ShortcutConfig;","import { useEffect, useState } from \"react\";\r\nimport { PrivacyDialogAuto } from \"./PrivacyDialogAuto\";\r\nimport { autoJsStoreUtils } from \"@droid/android\";\r\n\r\n\r\nexport function ListenShowPrivacyContent({type}:{type:string}){\r\n\r\n    const [open, setOpen] = useState(false);\r\n    function onClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const value = autoJsStoreUtils.read(`privacy_${type}`, false)\r\n        console.log('privacy value is', value, typeof value);\r\n    }, [])\r\n    return(\r\n        <PrivacyDialogAuto type={type} area=\"zh-cn\" />\r\n    )\r\n}","import { request } from \"@fanfanlo\";\nimport { tms } from \"../tms\";\n\n// 权限状态信息\nexport interface PermissionStatusInfo {\n  user_id: string;\n  user_name?: string;\n  device_id: string;\n  camera_status?: string | null;\n  microphone_status?: string | null;\n  location_status?: string | null;\n  overlay_status?: string | null;\n  battery_optimization_status?: string | null;\n  notification_status?: string | null;\n  screen_on_status?: string | null;\n  overall_status: string;\n  last_check_time?: string | null;\n  last_client_timestamp?: number | null;\n}\n\n// 获取相关权限参数\nexport interface IParamsGetRelatedPermissions {\n  page_size?: number;\n  page_offset?: number;\n  include_myself?: boolean;\n  include_contacts?: boolean;\n}\n\n// 获取相关权限返回结果\nexport interface IResultGetRelatedPermissions {\n  is_ok: boolean;\n  msg: string;\n  data?: {\n    permissions: PermissionStatusInfo[];\n    total_count: number;\n    page_info: {\n      current_page: number;\n      page_size: number;\n      total_pages: number;\n    };\n  };\n}\n\n// 获取相关用户权限状态 API 客户端\nexport async function getRelatedPermissions(\n  params: IParamsGetRelatedPermissions = {}\n): Promise<IResultGetRelatedPermissions> {\n  const defaultParams = {\n    page_size: 50,\n    page_offset: 0,\n    include_myself: true,\n    include_contacts: true,\n    ...params,\n  };\n\n  return request({\n    t: tms.TPermission,\n    m: tms.MPermissionGetRelatedPermissions,\n    p: defaultParams,\n  });\n}","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  TextField,\n  Button,\n  Typography,\n  Paper,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Switch,\n  FormControlLabel,\n  Chip,\n  Divider,\n  Alert,\n  Grid2,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  CircularProgress,\n} from '@mui/material';\nimport {\n  Sensors,\n  Security,\n  PlayArrow,\n  Stop,\n  Settings as SettingsIcon,\n  ExpandMore,\n  CheckCircle,\n  Cancel,\n  Help,\n  Person,\n  Groups,\n} from '@mui/icons-material';\nimport { autoJsStoreUtils, autoWebViewJs } from '@droid/android';\nimport { getRelatedPermissions, type PermissionStatusInfo } from '@app/model';\n\n// 监控状态接口\ninterface MonitoringState {\n  sensorEnabled: boolean;\n  permissionEnabled: boolean;\n  isRunning: boolean;\n  threshold: string;\n}\n\n// 权限检查接口\ninterface ForegroundServiceInfo {\n  passed: boolean;\n}\n\n// Android权限状态接口\ninterface AndroidPermissionStatus {\n  overall_status: string;\n  permissions: Array<{\n    permission_type: string;\n    level: string;\n    can_detect: boolean;\n    description: string;\n    timestamp: number;\n  }>;\n  last_updated: number;\n}\n\nexport const UnifiedMonitoringControl: React.FC = () => {\n  const [state, setState] = useState<MonitoringState>({\n    sensorEnabled: false,\n    permissionEnabled: false,\n    isRunning: false,\n    threshold: '5.0',\n  });\n  \n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [dialogCallback, setDialogCallback] = useState<{\n    onPassed: () => void;\n    onCancel: () => void;\n  } | null>(null);\n\n  // 权限状态相关state\n  const [permissionExpanded, setPermissionExpanded] = useState(false);\n  const [keepExpanded, setKeepExpanded] = useState(false);\n  const [permissionData, setPermissionData] = useState<PermissionStatusInfo[]>([]);\n  const [selfPermissionData, setSelfPermissionData] = useState<AndroidPermissionStatus | null>(null);\n  const [permissionLoading, setPermissionLoading] = useState(false);\n  const [lastBackendUpdate, setLastBackendUpdate] = useState<number>(0);\n  const [lastSelfUpdate, setLastSelfUpdate] = useState<number>(0);\n\n  // 初始化：获取Android端状态\n  useEffect(() => {\n    loadInitialState();\n  }, []);\n\n  // 权限数据更新定时器\n  useEffect(() => {\n    let backendInterval: NodeJS.Timeout;\n    let selfInterval: NodeJS.Timeout;\n\n    if (permissionExpanded || keepExpanded) {\n      // 后端API每5分钟更新一次\n      backendInterval = setInterval(() => {\n        loadBackendPermissions();\n      }, 5 * 60 * 1000);\n\n      // 自己的权限每1分钟更新一次\n      selfInterval = setInterval(() => {\n        loadSelfPermissions();\n      }, 60 * 1000);\n\n      // 立即加载一次\n      loadBackendPermissions();\n      loadSelfPermissions();\n    }\n\n    return () => {\n      if (backendInterval) clearInterval(backendInterval);\n      if (selfInterval) clearInterval(selfInterval);\n    };\n  }, [permissionExpanded, keepExpanded, state.permissionEnabled]);\n\n  const loadInitialState = async () => {\n    try {\n      // 获取传感器监控状态\n      const sensorScript = `\n        var isMonitoring = com.fanfanlo.emergencycall.manager.SensorManager.isMonitoring();\n        isMonitoring;\n      `;\n      const { javaResultString: sensorResult } = autoWebViewJs.callScript(sensorScript);\n      const isRunning = sensorResult === 'true';\n\n      // 获取震动阈值\n      const thresholdScript = `\n        var thresholdValue = com.fanfanlo.emergencycall.manager.SensorManager.getThreshold();\n        thresholdValue;\n      `;\n      const { javaResultString: thresholdResult } = autoWebViewJs.callScript(thresholdScript);\n      const thresholdValue = parseFloat(thresholdResult || '5.0');\n\n      // 获取权限监控状态 (从即将扩展的SensorManager中获取)\n      const permissionScript = `\n        var isPermissionMonitoring = com.fanfanlo.emergencycall.manager.SensorManager.isPermissionMonitoringEnabled();\n        isPermissionMonitoring;\n      `;\n      let permissionEnabled = false;\n      try {\n        const { javaResultString: permissionResult } = autoWebViewJs.callScript(permissionScript);\n        permissionEnabled = permissionResult === 'true';\n      } catch (error) {\n        console.log('Permission monitoring not yet available:', error);\n      }\n\n      setState(prev => ({\n        ...prev,\n        isRunning,\n        threshold: thresholdValue.toString(),\n        sensorEnabled: isRunning, // 如果服务在运行，假设传感器已启用\n        permissionEnabled,\n      }));\n\n      console.log('Initial state loaded:', {\n        isRunning,\n        threshold: thresholdValue,\n        permissionEnabled\n      });\n    } catch (error) {\n      console.error('Error loading initial state:', error);\n    }\n  };\n\n  // 加载后端权限数据\n  const loadBackendPermissions = async () => {\n    if (!state.permissionEnabled) return;\n    \n    try {\n      setPermissionLoading(true);\n      const result = await getRelatedPermissions({\n        include_myself: false,\n        include_contacts: true,\n        page_size: 50\n      });\n      \n      if (result.is_ok && result.data) {\n        setPermissionData(result.data.permissions);\n        setLastBackendUpdate(Date.now());\n      }\n    } catch (error) {\n      console.error('加载后端权限数据失败:', error);\n    } finally {\n      setPermissionLoading(false);\n    }\n  };\n\n  // 加载自己的权限数据\n  const loadSelfPermissions = async () => {\n    if (!state.permissionEnabled) return;\n    \n    try {\n      const script = `com.fanfanlo.emergencycall.permission.PermissionManager.getCurrentPermissionStatusJson();`;\n      const { javaResultString } = autoWebViewJs.callScript(script);\n      \n      if (javaResultString) {\n        const data = JSON.parse(javaResultString) as AndroidPermissionStatus;\n        setSelfPermissionData(data);\n        setLastSelfUpdate(Date.now());\n      }\n    } catch (error) {\n      console.error('加载自己权限数据失败:', error);\n    }\n  };\n\n  // 权限状态图标\n  const getPermissionIcon = (status: string) => {\n    switch (status?.toLowerCase()) {\n      case 'granted':\n      case 'high':\n        return <CheckCircle color=\"success\" />;\n      case 'denied':\n      case 'low':\n        return <Cancel color=\"error\" />;\n      case 'medium':\n        return <Help color=\"warning\" />;\n      default:\n        return <Help color=\"disabled\" />;\n    }\n  };\n\n  // 格式化权限类型显示名称\n  const formatPermissionType = (type: string) => {\n    const typeMap: { [key: string]: string } = {\n      'camera': '相机权限',\n      'microphone': '麦克风权限',\n      'location': '位置权限',\n      'overlay': '悬浮窗权限',\n      'battery_optimization': '电池优化',\n      'notification': '通知权限',\n      'screen_on': '屏幕常亮'\n    };\n    return typeMap[type] || type;\n  };\n\n  // 渲染权限列表项\n  const renderPermissionItem = (permission: any, isAndroidData = false) => {\n    const status = isAndroidData ? permission.level : (\n      permission.camera_status || \n      permission.microphone_status || \n      permission.location_status || \n      permission.overlay_status || \n      permission.battery_optimization_status || \n      permission.notification_status || \n      permission.screen_on_status ||\n      permission.overall_status\n    );\n    \n    return (\n      <ListItem key={isAndroidData ? permission.permission_type : permission.user_id}>\n        <ListItemIcon>\n          {getPermissionIcon(status)}\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            isAndroidData \n              ? formatPermissionType(permission.permission_type)\n              : (permission.user_name || `用户 ${permission.user_id}`)\n          }\n          secondary={\n            isAndroidData\n              ? `状态: ${status} | ${permission.description}`\n              : `总体状态: ${permission.overall_status} | 最后检查: ${permission.last_check_time ? new Date(permission.last_check_time).toLocaleString() : '未知'}`\n          }\n        />\n      </ListItem>\n    );\n  };\n\n  const handleSetThreshold = () => {\n    const thresholdValue = parseFloat(state.threshold);\n    if (isNaN(thresholdValue)) {\n      alert('请输入一个有效的数字作为阈值。');\n      return;\n    }\n    \n    try {\n      const script = `com.fanfanlo.emergencycall.manager.SensorManager.updateThreshold(${thresholdValue});`;\n      autoWebViewJs.callScript(script);\n      alert(`震动阈值已设置为: ${thresholdValue}`);\n    } catch (error) {\n      console.error('Error setting threshold:', error);\n      alert('设置阈值失败。请确保您在安卓应用中。');\n    }\n  };\n\n  const handleToggleMonitoring = () => {\n    if (state.isRunning) {\n      // 停止监控服务\n      stopMonitoring();\n    } else {\n      // 检查是否至少启用一种监控\n      if (!state.sensorEnabled && !state.permissionEnabled) {\n        alert('请至少启用一种监控功能（传感器监控或权限监控）');\n        return;\n      }\n      \n      // 检查前台服务权限，然后启动\n      checkForegroundServicePermission(() => {\n        startMonitoring();\n      });\n    }\n  };\n\n  const startMonitoring = () => {\n    try {\n      // 调用统一的启动方法\n      const script = `\n        com.fanfanlo.emergencycall.manager.SensorManager.startUnifiedMonitoring(${state.sensorEnabled}, ${state.permissionEnabled});\n      `;\n      autoWebViewJs.callScript(script);\n      \n      setState(prev => ({ ...prev, isRunning: true }));\n      console.log('Started unified monitoring:', { \n        sensor: state.sensorEnabled, \n        permission: state.permissionEnabled \n      });\n    } catch (error) {\n      console.error('Error starting monitoring:', error);\n      alert('启动监控失败。');\n    }\n  };\n\n  const stopMonitoring = () => {\n    try {\n      const script = `com.fanfanlo.emergencycall.manager.SensorManager.stopMonitoring();`;\n      autoWebViewJs.callScript(script);\n      \n      setState(prev => ({ ...prev, isRunning: false }));\n      console.log('Stopped monitoring');\n    } catch (error) {\n      console.error('Error stopping monitoring:', error);\n      alert('停止监控失败。');\n    }\n  };\n\n  const checkForegroundServicePermission = (callback: () => void) => {\n    const info = autoJsStoreUtils.read<ForegroundServiceInfo>('showForegroundServiceInfo', { passed: false });\n    \n    if (!info || !info.passed) {\n      setDialogCallback({\n        onPassed: () => {\n          autoJsStoreUtils.write('showForegroundServiceInfo', { passed: true });\n          setDialogOpen(false);\n          callback();\n        },\n        onCancel: () => {\n          autoJsStoreUtils.write('showForegroundServiceInfo', { passed: false });\n          setDialogOpen(false);\n        }\n      });\n      setDialogOpen(true);\n    } else {\n      callback();\n    }\n  };\n\n  const handleSensorToggle = (enabled: boolean) => {\n    setState(prev => ({ ...prev, sensorEnabled: enabled }));\n  };\n\n  const handlePermissionToggle = (enabled: boolean) => {\n    setState(prev => ({ ...prev, permissionEnabled: enabled }));\n    \n    // 如果启用权限监控，同时更新Android端配置\n    if (enabled) {\n      try {\n        const script = `com.fanfanlo.emergencycall.manager.SensorManager.enablePermissionMonitoring(true);`;\n        autoWebViewJs.callScript(script);\n      } catch (error) {\n        console.error('Error enabling permission monitoring:', error);\n      }\n    }\n  };\n\n  const getStatusChips = () => {\n    const chips = [];\n    \n    if (state.sensorEnabled) {\n      chips.push(\n        <Chip \n          key=\"sensor\" \n          icon={<Sensors />} \n          label=\"传感器监控\" \n          color=\"primary\" \n          size=\"small\" \n        />\n      );\n    }\n    \n    if (state.permissionEnabled) {\n      chips.push(\n        <Chip \n          key=\"permission\" \n          icon={<Security />} \n          label=\"权限监控\" \n          color=\"secondary\" \n          size=\"small\" \n        />\n      );\n    }\n\n    return chips;\n  };\n\n  return (\n    <Paper elevation={3} sx={{ padding: 2, margin: 1 }}>\n      <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n        <SettingsIcon />\n        统一监控控制\n      </Typography>\n\n      {/* 状态显示 */}\n      <Box sx={{ mb: 2 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n          当前状态: {state.isRunning ? '监控中' : '已停止'}\n        </Typography>\n        <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n          {getStatusChips()}\n          {!state.sensorEnabled && !state.permissionEnabled && (\n            <Chip label=\"未选择监控功能\" color=\"default\" size=\"small\" />\n          )}\n        </Box>\n      </Box>\n\n      <Divider sx={{ my: 2 }} />\n\n      {/* 传感器监控设置 */}\n      <Box sx={{ mb: 2 }}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.sensorEnabled}\n              onChange={(e) => handleSensorToggle(e.target.checked)}\n              disabled={state.isRunning}\n            />\n          }\n          label={\n            <Box>\n              <Typography variant=\"subtitle2\">\n                <Sensors sx={{ verticalAlign: 'bottom', mr: 0.5 }} />\n                传感器监控 (摔倒检测)\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                监控设备加速度和陀螺仪数据，检测摔倒事件\n              </Typography>\n            </Box>\n          }\n        />\n\n        {state.sensorEnabled && (\n          <Box sx={{ ml: 4, mt: 1, display: 'flex', alignItems: 'center', gap: 2 }}>\n            <TextField\n              label=\"震动阈值\"\n              variant=\"outlined\"\n              type=\"number\"\n              value={state.threshold}\n              onChange={(e) => setState(prev => ({ ...prev, threshold: e.target.value }))}\n              size=\"small\"\n              sx={{ width: 120 }}\n              disabled={state.isRunning}\n            />\n            <Button \n              variant=\"outlined\" \n              onClick={handleSetThreshold}\n              size=\"small\"\n              disabled={state.isRunning}\n            >\n              设置\n            </Button>\n          </Box>\n        )}\n      </Box>\n\n      {/* 权限监控设置 */}\n      <Box sx={{ mb: 2 }}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.permissionEnabled}\n              onChange={(e) => handlePermissionToggle(e.target.checked)}\n              disabled={state.isRunning}\n            />\n          }\n          label={\n            <Box>\n              <Typography variant=\"subtitle2\">\n                <Security sx={{ verticalAlign: 'bottom', mr: 0.5 }} />\n                权限监控\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                定期检测关键权限状态，确保紧急功能可用\n              </Typography>\n            </Box>\n          }\n        />\n      </Box>\n\n      <Divider sx={{ my: 2 }} />\n\n      {/* 权限状态显示 */}\n      {state.permissionEnabled && (\n        <Accordion \n          expanded={permissionExpanded} \n          onChange={(_, expanded) => setPermissionExpanded(expanded)}\n          sx={{ mb: 2 }}\n        >\n          <AccordionSummary expandIcon={<ExpandMore />}>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, width: '100%' }}>\n              <Groups />\n              <Typography variant=\"subtitle2\">权限状态监控</Typography>\n              {permissionLoading && <CircularProgress size={16} />}\n              <Box sx={{ ml: 'auto' }}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={keepExpanded}\n                      onChange={(e) => setKeepExpanded(e.target.checked)}\n                      size=\"small\"\n                    />\n                  }\n                  label=\"保持展开\"\n                  onClick={(e) => e.stopPropagation()}\n                />\n              </Box>\n            </Box>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Box>\n              {/* 自己的权限状态 */}\n              {selfPermissionData && (\n                <Box sx={{ mb: 2 }}>\n                  <Typography variant=\"subtitle2\" sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n                    <Person />\n                    我的权限状态\n                    <Chip \n                      label={`总体: ${selfPermissionData.overall_status}`} \n                      size=\"small\" \n                      color={selfPermissionData.overall_status === 'high' ? 'success' : selfPermissionData.overall_status === 'medium' ? 'warning' : 'error'}\n                    />\n                  </Typography>\n                  <List dense>\n                    {selfPermissionData.permissions.map(permission => \n                      renderPermissionItem(permission, true)\n                    )}\n                  </List>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    最后更新: {lastSelfUpdate ? new Date(lastSelfUpdate).toLocaleString() : '未更新'} (每分钟刷新)\n                  </Typography>\n                </Box>\n              )}\n\n              {/* 其他用户权限状态 */}\n              {permissionData.length > 0 && (\n                <Box>\n                  <Typography variant=\"subtitle2\" sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n                    <Groups />\n                    联系人权限状态\n                  </Typography>\n                  <List dense>\n                    {permissionData.map(permission => \n                      renderPermissionItem(permission, false)\n                    )}\n                  </List>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    最后更新: {lastBackendUpdate ? new Date(lastBackendUpdate).toLocaleString() : '未更新'} (每5分钟刷新)\n                  </Typography>\n                </Box>\n              )}\n\n              {permissionData.length === 0 && !selfPermissionData && !permissionLoading && (\n                <Alert severity=\"info\">\n                  暂无权限数据。请确保权限监控已启用且有联系人数据。\n                </Alert>\n              )}\n            </Box>\n          </AccordionDetails>\n        </Accordion>\n      )}\n\n      <Divider sx={{ my: 2 }} />\n\n      {/* 控制按钮 */}\n      <Grid2 container spacing={2}>\n        <Grid2 size={12}>\n          <Button\n            variant=\"contained\"\n            color={state.isRunning ? 'error' : 'primary'}\n            onClick={handleToggleMonitoring}\n            fullWidth\n            startIcon={state.isRunning ? <Stop /> : <PlayArrow />}\n            disabled={!state.isRunning && !state.sensorEnabled && !state.permissionEnabled}\n          >\n            {state.isRunning ? '停止监控' : '开始监控'}\n          </Button>\n        </Grid2>\n      </Grid2>\n\n      {/* 提示信息 */}\n      {!state.sensorEnabled && !state.permissionEnabled && (\n        <Alert severity=\"info\" sx={{ mt: 2 }}>\n          请至少选择一种监控功能：传感器监控用于摔倒检测，权限监控确保紧急功能可用。\n        </Alert>\n      )}\n\n      {/* 前台服务授权对话框 */}\n      <Dialog\n        open={dialogOpen}\n        onClose={() => dialogCallback?.onCancel()}\n        aria-labelledby=\"foreground-service-dialog-title\"\n      >\n        <DialogTitle id=\"foreground-service-dialog-title\">\n          启用前台服务通知\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            为了在应用退到后台后仍能持续监控传感器数据和权限状态，我们需要启用一个前台服务。\n            这会在您的设备通知栏显示一个持续的通知。您是否同意？\n          </DialogContentText>\n          \n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              前台服务将监控以下功能：\n            </Typography>\n            <Box sx={{ mt: 1 }}>\n              {state.sensorEnabled && (\n                <Chip icon={<Sensors />} label=\"传感器监控\" size=\"small\" sx={{ mr: 1, mb: 1 }} />\n              )}\n              {state.permissionEnabled && (\n                <Chip icon={<Security />} label=\"权限监控\" size=\"small\" sx={{ mr: 1, mb: 1 }} />\n              )}\n            </Box>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => dialogCallback?.onCancel()}>\n            不同意\n          </Button>\n          <Button onClick={() => dialogCallback?.onPassed()} autoFocus variant=\"contained\">\n            同意\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n};\n\nexport default UnifiedMonitoringControl;","export { UnifiedMonitoringControl } from './UnifiedMonitoringControl';","import { autoWebViewJs } from \"@droid/android\";\r\nimport { Box, Button } from \"@mui/material\";\r\n\r\n\r\nexport function TestEmergencyCall() {\r\n    function onClick(){\r\n        const script = `\r\n        var instance = com.fanfanlo.emergencycall.service\r\n.SensorMonitoringService.callFallDetection();\r\n        `\r\n        const res = autoWebViewJs.callScript(script);\r\n        console.log(\"TestEmergencyCall res=\", res);\r\n    }\r\n    return(\r\n        <Box sx={{mt:\"10px\", mb:\"10px\"\r\n        }}>\r\n            <Button onClick={onClick}>\r\n                测试呼救\r\n            </Button>\r\n        </Box>  \r\n    )\r\n}","import { autoWebViewJs } from \"@droid/android\";\r\nimport { Log } from \"@fanfanlo\";\r\n\r\nconst fileLog = new Log(false, 'stopAllHandler_f');\r\n\r\nexport function stopAllHandler() {\r\n\r\n    try {\r\n      fileLog.log('开始停止所有紧急音频和震动...');\r\n\r\n      // 使用正确的停止方法（与EmergencyAudioControl.tsx保持一致）\r\n      const stopEmergencyMethods = [\r\n        // 停止监控\r\n        `com.fanfanlo.emergencycall.manager.SensorManager.stopMonitoring();`,\r\n        \r\n        // 停止呼救者声音 (V1 + V2)\r\n        `\r\n        try {\r\n          com.fanfanlo.emergencycall.manager.SoundManager.stop();\r\n          com.fanfanlo.emergencycall.manager.AlarmSoundManager.stop();\r\n          com.fanfanlo.emergencycall.v2.core.EmergencySystemV2.forceStopHelpSound();\r\n        } catch(e) {\r\n          console.log('停止呼救者声音失败:', e);\r\n        }\r\n        `,\r\n        \r\n        // 停止联系人报警声音（主要方法）\r\n        `\r\n        try {\r\n          com.fanfanlo.emergencycall.manager.SoundManager.stopEmergencyAlarm();\r\n          \r\n          // 备用方案：如果WebViewActivity的Android接口可用，也调用它\r\n          if(typeof Android !== 'undefined' && typeof Android.stopAlarm === 'function') {\r\n            Android.stopAlarm();\r\n          }\r\n        } catch(e) {\r\n          console.log('停止联系人报警声音失败:', e);\r\n        }\r\n        `\r\n      ];\r\n\r\n      for (const script of stopEmergencyMethods) {\r\n        try {\r\n          fileLog.log(`调用停止脚本: ${script.trim()}`);\r\n          autoWebViewJs.callScript(script);\r\n        } catch (methodError) {\r\n          fileLog.warn(`停止方法调用失败:`, methodError);\r\n          // 继续尝试其他方法\r\n        }\r\n      }\r\n\r\n      fileLog.log('已停止所有紧急音频和震动');\r\n      return true;\r\n    //   setMessage({\r\n    //     type: 'success',\r\n    //     text: '已停止所有紧急音频和震动'\r\n    //   });\r\n    } catch (error) {\r\n      fileLog.error('停止紧急音频失败:', error);\r\n    //   setMessage({\r\n    //     type: 'error',\r\n    //     text: `停止失败: ${error instanceof Error ? error.message : '未知错误'}`\r\n    //   });\r\n    return false;\r\n    } finally {\r\n    //   setLoading(false);\r\n    }\r\n    \r\n}","import React, { useState } from 'react';\nimport {\n  Button,\n  Snackbar,\n  Alert,\n  Fab,\n  Tooltip\n} from '@mui/material';\nimport {\n  Stop as StopIcon,\n  VolumeOff as VolumeOffIcon\n} from '@mui/icons-material';\nimport { autoWebViewJs } from \"@droid/android\";\nimport { Log } from \"@fanfanlo\";\nimport { stopAllHandler } from './stopAllHandler';\n\nconst fileLog = new Log(false, 'EmergencyStopButton');\n\ninterface EmergencyStopButtonProps {\n  variant?: 'button' | 'fab';\n  size?: 'small' | 'medium' | 'large';\n  fullWidth?: boolean;\n}\n\n/**\n * 紧急停止按钮组件\n * 快速停止所有紧急呼救相关的音频和震动\n */\nconst EmergencyStopButton: React.FC<EmergencyStopButtonProps> = ({ \n  variant = 'button',\n  size = 'medium',\n  fullWidth = false\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n\n  /**\n   * 检查是否在Android WebView环境中\n   */\n  const isAndroidWebView = (): boolean => {\n    try {\n      return !!(autoWebViewJs && typeof autoWebViewJs.callScript === 'function');\n    } catch (e) {\n      fileLog.error('检查WebView环境时出错:', e);\n      return false;\n    }\n  };\n\n  /**\n   * 停止所有紧急呼救音频和震动\n   */\n  const handleStopAllEmergencyAudio = async (): Promise<void> => {\n    setLoading(true);\n    setMessage(null);\n\n    const bl = stopAllHandler();\n    if (bl){\n      \n      setMessage({\n        type: 'success',\n        text: '已停止所有紧急音频和震动'\n      });\n    }else{\n      \n      setMessage({\n        type: 'error',\n        text: `停止失败`\n      });\n    }\n    setLoading(false);\n    // try {\n    //   fileLog.log('开始停止所有紧急音频和震动...');\n\n    //   // 使用正确的停止方法（与EmergencyAudioControl.tsx保持一致）\n    //   const stopEmergencyMethods = [\n    //     // 停止监控\n    //     `com.fanfanlo.emergencycall.manager.SensorManager.stopMonitoring();`,\n        \n    //     // 停止呼救者声音 (V1 + V2)\n    //     `\n    //     try {\n    //       com.fanfanlo.emergencycall.manager.SoundManager.stop();\n    //       com.fanfanlo.emergencycall.manager.AlarmSoundManager.stop();\n    //       com.fanfanlo.emergencycall.v2.core.EmergencySystemV2.forceStopHelpSound();\n    //     } catch(e) {\n    //       console.log('停止呼救者声音失败:', e);\n    //     }\n    //     `,\n        \n    //     // 停止联系人报警声音（主要方法）\n    //     `\n    //     try {\n    //       com.fanfanlo.emergencycall.manager.SoundManager.stopEmergencyAlarm();\n          \n    //       // 备用方案：如果WebViewActivity的Android接口可用，也调用它\n    //       if(typeof Android !== 'undefined' && typeof Android.stopAlarm === 'function') {\n    //         Android.stopAlarm();\n    //       }\n    //     } catch(e) {\n    //       console.log('停止联系人报警声音失败:', e);\n    //     }\n    //     `\n    //   ];\n\n    //   for (const script of stopEmergencyMethods) {\n    //     try {\n    //       fileLog.log(`调用停止脚本: ${script.trim()}`);\n    //       autoWebViewJs.callScript(script);\n    //     } catch (methodError) {\n    //       fileLog.warn(`停止方法调用失败:`, methodError);\n    //       // 继续尝试其他方法\n    //     }\n    //   }\n\n    //   setMessage({\n    //     type: 'success',\n    //     text: '已停止所有紧急音频和震动'\n    //   });\n    // } catch (error) {\n    //   fileLog.error('停止紧急音频失败:', error);\n    //   setMessage({\n    //     type: 'error',\n    //     text: `停止失败: ${error instanceof Error ? error.message : '未知错误'}`\n    //   });\n    // } finally {\n    //   setLoading(false);\n    // }\n  };\n\n  /**\n   * 关闭消息提示\n   */\n  const handleCloseMessage = () => {\n    setMessage(null);\n  };\n\n  // 浮动操作按钮样式\n  if (variant === 'fab') {\n    return (\n      <>\n        <Tooltip title=\"停止所有紧急音频和震动\" placement=\"left\">\n          <Fab\n            color=\"error\"\n            onClick={handleStopAllEmergencyAudio}\n            disabled={loading}\n            size={size}\n            sx={{\n              position: 'fixed',\n              bottom: 80,\n              right: 16,\n              zIndex: 1000\n            }}\n          >\n            {loading ? <VolumeOffIcon /> : <StopIcon />}\n          </Fab>\n        </Tooltip>\n\n        <Snackbar\n          open={!!message}\n          autoHideDuration={4000}\n          onClose={handleCloseMessage}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert \n            onClose={handleCloseMessage} \n            severity={message?.type || 'info'}\n            sx={{ width: '100%' }}\n          >\n            {message?.text}\n          </Alert>\n        </Snackbar>\n      </>\n    );\n  }\n\n  // 普通按钮样式\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        color=\"error\"\n        size={size}\n        fullWidth={fullWidth}\n        startIcon={loading ? <VolumeOffIcon /> : <StopIcon />}\n        onClick={handleStopAllEmergencyAudio}\n        disabled={loading}\n        sx={{ mb: 1 }}\n      >\n        🔕 停止紧急音频\n      </Button>\n\n      <Snackbar\n        open={!!message}\n        autoHideDuration={4000}\n        onClose={handleCloseMessage}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert \n          onClose={handleCloseMessage} \n          severity={message?.type || 'info'}\n          sx={{ width: '100%' }}\n        >\n          {message?.text}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default EmergencyStopButton;","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Switch,\n  TextField,\n  Paper,\n  Button,\n  FormControlLabel,\n  Slider,\n  Divider,\n  Alert,\n  Snackbar,\n} from '@mui/material';\nimport { PlayArrow, Stop, VolumeUp } from '@mui/icons-material';\nimport { autoJsStoreUtils, autoWebViewJs } from '@droid/android';\n\n// TTS设置数据结构\ninterface EmergencyTTSSettings {\n  enabled: boolean;\n  message: string;\n  repeatInterval: number;\n  voiceSpeed: number;\n  voicePitch: number;\n  lastUpdated: number;\n}\n\n// 默认设置\nconst DEFAULT_SETTINGS: EmergencyTTSSettings = {\n  enabled: false,\n  message: '我遇到了紧急情况，需要帮助！请立即联系紧急服务！',\n  repeatInterval: 3000,\n  voiceSpeed: 1.0,\n  voicePitch: 1.0,\n  lastUpdated: Date.now(),\n};\n\nconst TTS_SETTINGS_KEY = 'emergencyTTSSettings';\n\nexport const EmergencyTTSSettings: React.FC = () => {\n  const [settings, setSettings] = useState<EmergencyTTSSettings>(DEFAULT_SETTINGS);\n  const [loading, setLoading] = useState(true);\n  const [testing, setTesting] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // 加载设置\n  useEffect(() => {\n    const loadSettings = async () => {\n      try {\n        setLoading(true);\n        const savedSettings = await autoJsStoreUtils.read<EmergencyTTSSettings>(\n          TTS_SETTINGS_KEY, \n          DEFAULT_SETTINGS\n        );\n        setSettings(savedSettings);\n      } catch (err) {\n        console.error('加载TTS设置失败:', err);\n        setError('加载设置失败');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadSettings();\n  }, []);\n\n  // 保存设置\n  const saveSettings = async (newSettings: EmergencyTTSSettings) => {\n    try {\n      const settingsToSave = {\n        ...newSettings,\n        lastUpdated: Date.now(),\n      };\n      \n      await autoJsStoreUtils.write(TTS_SETTINGS_KEY, settingsToSave);\n      setSettings(settingsToSave);\n      setShowSuccess(true);\n      setError(null);\n    } catch (err) {\n      console.error('保存TTS设置失败:', err);\n      setError('保存设置失败');\n    }\n  };\n\n  // 测试TTS\n  const testTTS = async () => {\n    if (!settings.message.trim()) {\n      setError('请输入呼救文字后再测试');\n      return;\n    }\n\n    try {\n      setTesting(true);\n      \n      // 调用Android端TTS测试方法\n      const script = `\n        com.fanfanlo.emergencycall.manager.EmergencyTTSManager.testTTS(\"${settings.message}\", ${settings.voiceSpeed}, ${settings.voicePitch});\n      `;\n      \n      await new Promise(resolve => setTimeout(resolve, 500)); // 模拟测试时间\n      // TODO: 实际调用时取消注释\n      autoWebViewJs.callScript(script);\n      \n    } catch (err) {\n      console.error('TTS测试失败:', err);\n      setError('TTS测试失败');\n    } finally {\n      setTesting(false);\n    }\n  };\n\n  // 停止TTS测试\n  const stopTest = async () => {\n    try {\n      const script = `\n        com.fanfanlo.emergencycall.manager.EmergencyTTSManager.stopTest();\n      `;\n      // TODO: 实际调用时取消注释\n      // autoWebViewJs.callScript(script);\n      setTesting(false);\n    } catch (err) {\n      console.error('停止TTS测试失败:', err);\n    }\n  };\n\n  const handleSettingChange = (key: keyof EmergencyTTSSettings, value: any) => {\n    const newSettings = { ...settings, [key]: value };\n    setSettings(newSettings);\n  };\n\n  const handleSave = () => {\n    if (settings.enabled && !settings.message.trim()) {\n      setError('启用TTS功能时，呼救文字不能为空');\n      return;\n    }\n    saveSettings(settings);\n  };\n\n  if (loading) {\n    return (\n      <Box sx={{ p: 2, textAlign: 'center' }}>\n        <Typography>加载中...</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ p: 2, maxWidth: 600, margin: '0 auto' }}>\n      <Typography variant=\"h5\" sx={{ mb: 3, fontWeight: 'bold' }}>\n        <VolumeUp sx={{ mr: 1, verticalAlign: 'bottom' }} />\n        紧急呼救语音设置\n      </Typography>\n\n      <Paper sx={{ p: 3, mb: 2 }}>\n        {/* 启用开关 */}\n        <FormControlLabel\n          control={\n            <Switch\n              checked={settings.enabled}\n              onChange={(e) => handleSettingChange('enabled', e.target.checked)}\n              color=\"primary\"\n            />\n          }\n          label={\n            <Box>\n              <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                启用TTS语音呼救\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                开启后将使用TTS语音代替默认的呼救音频\n              </Typography>\n            </Box>\n          }\n        />\n\n        <Divider sx={{ my: 3 }} />\n\n        {/* 呼救文字设置 */}\n        <Box sx={{ mb: 3 }}>\n          <Typography variant=\"subtitle1\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n            呼救文字内容\n          </Typography>\n          <TextField\n            fullWidth\n            multiline\n            rows={3}\n            value={settings.message}\n            onChange={(e) => handleSettingChange('message', e.target.value)}\n            placeholder=\"请输入紧急情况下要播报的文字...\"\n            disabled={!settings.enabled}\n            helperText={`当前字数: ${settings.message.length} 字符`}\n            sx={{ \n              '& .MuiInputBase-input': {\n                fontSize: '16px',\n                lineHeight: 1.5,\n              }\n            }}\n          />\n        </Box>\n\n        {/* 语音设置 */}\n        {settings.enabled && (\n          <>\n            <Divider sx={{ my: 3 }} />\n            \n            <Typography variant=\"subtitle1\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n              语音参数设置\n            </Typography>\n\n            {/* 重复间隔 */}\n            <Box sx={{ mb: 3 }}>\n              <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                重复间隔: {settings.repeatInterval / 1000} 秒\n              </Typography>\n              <Slider\n                value={settings.repeatInterval}\n                onChange={(_, value) => handleSettingChange('repeatInterval', value)}\n                min={2000}\n                max={10000}\n                step={500}\n                marks={[\n                  { value: 2000, label: '2s' },\n                  { value: 5000, label: '5s' },\n                  { value: 10000, label: '10s' },\n                ]}\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={(value) => `${value / 1000}s`}\n              />\n            </Box>\n\n            {/* 语音速度 */}\n            <Box sx={{ mb: 3 }}>\n              <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                语音速度: {settings.voiceSpeed}x\n              </Typography>\n              <Slider\n                value={settings.voiceSpeed}\n                onChange={(_, value) => handleSettingChange('voiceSpeed', value)}\n                min={0.5}\n                max={2.0}\n                step={0.1}\n                marks={[\n                  { value: 0.5, label: '0.5x' },\n                  { value: 1.0, label: '1.0x' },\n                  { value: 2.0, label: '2.0x' },\n                ]}\n                valueLabelDisplay=\"auto\"\n              />\n            </Box>\n\n            {/* 语音音调 */}\n            <Box sx={{ mb: 3 }}>\n              <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                语音音调: {settings.voicePitch}x\n              </Typography>\n              <Slider\n                value={settings.voicePitch}\n                onChange={(_, value) => handleSettingChange('voicePitch', value)}\n                min={0.5}\n                max={2.0}\n                step={0.1}\n                marks={[\n                  { value: 0.5, label: '低' },\n                  { value: 1.0, label: '标准' },\n                  { value: 2.0, label: '高' },\n                ]}\n                valueLabelDisplay=\"auto\"\n              />\n            </Box>\n          </>\n        )}\n\n        <Divider sx={{ my: 3 }} />\n\n        {/* 操作按钮 */}\n        <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap' }}>\n          <Button\n            variant=\"contained\"\n            onClick={handleSave}\n            sx={{ minWidth: 100 }}\n          >\n            保存设置\n          </Button>\n\n          {settings.enabled && settings.message.trim() && (\n            <>\n              {!testing ? (\n                <Button\n                  variant=\"outlined\"\n                  startIcon={<PlayArrow />}\n                  onClick={testTTS}\n                  sx={{ minWidth: 100 }}\n                >\n                  测试语音\n                </Button>\n              ) : (\n                <Button\n                  variant=\"outlined\"\n                  color=\"error\"\n                  startIcon={<Stop />}\n                  onClick={stopTest}\n                  sx={{ minWidth: 100 }}\n                >\n                  停止测试\n                </Button>\n              )}\n            </>\n          )}\n        </Box>\n\n        {/* 使用说明 */}\n        <Box sx={{ mt: 3, p: 2, backgroundColor: 'rgba(0,0,0,0.05)', borderRadius: 1 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            <strong>使用说明:</strong><br />\n            • 启用后，紧急呼救将使用TTS语音代替默认音频<br />\n            • 请设置简洁明了的呼救文字，确保在紧急情况下能清楚传达<br />\n            • 建议先测试语音效果，确认语速和音调适中<br />\n            • 重复间隔设置过短可能影响语音清晰度\n          </Typography>\n        </Box>\n      </Paper>\n\n      {/* 成功提示 */}\n      <Snackbar\n        open={showSuccess}\n        autoHideDuration={3000}\n        onClose={() => setShowSuccess(false)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setShowSuccess(false)} severity=\"success\">\n          TTS设置保存成功！\n        </Alert>\n      </Snackbar>\n\n      {/* 错误提示 */}\n      <Snackbar\n        open={!!error}\n        autoHideDuration={6000}\n        onClose={() => setError(null)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setError(null)} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};","export { EmergencyTTSSettings } from './EmergencyTTSSettings';","import { AppShell, TabbarContainer } from '@app/ui';\nimport { MeetingRoom5 } from '@im/livekit';\nimport { IMOpenPageLink } from '@im/matrix';\nimport { Box, Button, Grid2 } from '@mui/material';\nimport { InviteContactDialog } from '@src/components/dialogs/InviteContactDialog';\nimport InvitationManager from '@src/components/InvitationManager/InvitationManager';\nimport { JpushIsInitialized } from '@src/components/jpush/IsInitialized';\nimport { NavBar } from '@src/components/navbar/NavBar';\nimport PendingInvitationsList from '@src/components/PendingInvitationsList/PendingInvitationsList';\nimport PreAlarmConfig2 from '@src/components/pre-alarm-config2';\nimport ShortcutConfig from '@src/components/shortcut-config/ShortcutConfig';\nimport { ListenShowPrivacyContent } from '@src/components/privacies/ListenShowPrivacyContent';\nimport { UnifiedMonitoringControl } from '@src/components/unified-monitoring-control';\nimport { TestEmergencyCall } from '@src/components/test/TestEmergencyCall';\nimport EmergencyAudioControl from '@src/components/emergency-audio-control/EmergencyAudioControl';\nimport EmergencyStopButton from '@src/components/emergency-audio-control/EmergencyStopButton';\nimport { mainModel } from '@src/libs/mc/main/MainModel';\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport MeetingList from '@src/components/meeting-list/MeetingList';\nimport { EmergencyTTSSettings } from '@src/components/emergency-tts-settings';\n\nfunction Content() {\n  const [openInviteDialog, setOpenInviteDialog] = useState(false);\n\n  return (\n    <Box sx={{ my: 2, p: 2 }}>\n      {/* 紧急停止按钮 - 置顶显示 */}\n      {/* <EmergencyStopButton fullWidth size=\"large\" /> */}\n      \n      {/* <Box>\n        <Link href=\"/how-to-use\" style={{ textDecoration: 'none' }}>\n          如何使用</Link>\n      </Box> */}\n      <ListenShowPrivacyContent type=\"main\" />\n      {/* <InvitationManager /> */}\n      <MeetingList maxItemLength={3} />\n      <PendingInvitationsList />\n      <PreAlarmConfig2 />\n      <EmergencyTTSSettings />\n      {/* <PreAlarmConfigComponent /> */}\n\n      {/* <JpushIsInitialized /> */}\n\n      <TestEmergencyCall />\n\n      <UnifiedMonitoringControl />\n      {/*  统一监控控制 - 集成传感器监控和权限监控 */}\n      \n      <Grid2 container spacing={2} sx={{ m: 2 }}>\n        <Grid2 size={6}>\n          <Button variant=\"contained\" onClick={() => setOpenInviteDialog(true)}>\n            邀请紧急联系人\n          </Button>\n        </Grid2>\n        <Link href=\"/contacts\" style={{ textDecoration: 'none' }}>\n          联系人管理\n        </Link>\n      </Grid2>\n      {openInviteDialog && <InviteContactDialog open={openInviteDialog} onClose={() => setOpenInviteDialog(false)} />}\n\n      <Box sx={{mt: 2, mb: 2}}>\n        <EmergencyStopButton variant=\"button\" />\n      </Box>\n      {/* <MeetingRoom5\n        roomName=\"test-room\"\n        userName={`user-${Math.random().toString(36).substring(2, 8)}`}\n        livekitConfig={mainModel.appConfig.livekit}\n        // role=\"initiator\" // Add role for testing\n      />\n       */}\n\n      <ShortcutConfig />\n      \n      {/* <EmergencyAudioControl /> */}\n      {/* 浮动紧急停止按钮 */}\n      {/* <EmergencyStopButton variant=\"fab\" /> */}\n\n<Box>\n      <Link href={\"/logs\"}>日志</Link>\n      <IMOpenPageLink />\n</Box>\n      <Box sx={{ mt: \"2rem\" }}></Box>\n      \n    </Box>\n  );\n}\n\nexport default function Home() {\n  return (\n    <AppShell>\n      <TabbarContainer titleConf={{ ns: 'emergency-call/pages/home/content', key: 'home.title' }} navBar={<NavBar />}>\n        <Content />\n      </TabbarContainer>\n    </AppShell>\n  );\n}\n","import { useEffect } from 'react';\nimport { autoJsStoreUtils, isRealInAndroid } from '@droid/android';\nimport { PrivacyDialogDisplay } from './PrivacyDialogDisplay';\nimport { useState } from 'react';\n\ninterface PrivacyDialogAutoProps {\n  type: string;\n  area: string;\n}\n\ninterface IPrivacyInfo {\n  agree: boolean;\n  disagreeTime: number;\n}\n\n/**\n * 自动逻辑组件 - 负责处理隐私协议的自动弹出逻辑\n * 包含原有的35-49行逻辑：检查用户是否已同意、是否在冷却期等\n */\nexport function PrivacyDialogAuto({ type, area }: PrivacyDialogAutoProps) {\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // 原有的自动弹出逻辑 (35-49行)\n  useEffect(() => {\n    const def: IPrivacyInfo = { agree: false, disagreeTime: 0 };\n    const res = autoJsStoreUtils.read<IPrivacyInfo>(`privacy_${type}`, def);\n    const value: IPrivacyInfo = res && 'agree' in res ? res : def;\n    \n    // 不在Android环境中不弹出\n    if (!isRealInAndroid) {\n      return;\n    }\n    \n    // 已经同意了，不弹出\n    if (value.agree) {\n      return;\n    }\n    \n    // 在冷却期内（拒绝后3天内），不弹出\n    if (value.disagreeTime && value.disagreeTime != 0 && value.disagreeTime + 3 * 24 * 60 * 60 * 1000 > Date.now()) {\n      return;\n    }\n    \n    // 满足条件，弹出隐私协议\n    setOpen(true);\n  }, [type]);\n\n  return (\n    <PrivacyDialogDisplay\n      open={open}\n      onClose={handleClose}\n      type={type}\n      area={area}\n    />\n  );\n}","import { useRouter } from \"next/router\";\r\nimport { useTranslation } from \"@fanfanlo\";\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport ListIcon from '@mui/icons-material/List';\r\nimport { BottomNavigation, BottomNavigationAction } from \"@mui/material\";\r\ninterface TabInfoType {\r\n  label: string;\r\n  value: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nexport function NavBar() {\r\n  const router = useRouter();\r\n  const { pathname } = router;\r\n  const { t } = useTranslation('emergency-call/components/navbar/content');\r\n  const tabInfoList: TabInfoType[] = [\r\n    { label: t('NavBar.home'), value: '/', icon: <HomeIcon /> },\r\n    // { label: t('NavBar.logs'), value: '/logs', icon: <ListIcon /> },\r\n    // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n    // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n    { label: t('NavBar.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n  ];\r\n  return (\r\n\r\n    <BottomNavigation showLabels value={pathname}>\r\n      {tabInfoList.map(e => (\r\n        <BottomNavigationAction\r\n          key={e.value}\r\n          label={e.label}\r\n          icon={e.icon}\r\n          data-id={`tabbar-${e.value}`}\r\n          className={pathname === e.value ? 'Mui-selected' : ''}\r\n          onClick={() => {\r\n            if (pathname === e.value) return;\r\n            router.push(e.value);\r\n          }}\r\n        />\r\n      ))}\r\n    </BottomNavigation>\r\n  );\r\n}","import { IRequestOptions } from \"../IRequestOptions\";\nimport { tms } from \"../tms\";\nimport { IRequestHandler, request } from \"@fanfanlo\";\n\n/**\n * 获取所有邀请的请求参数\n */\nexport interface IParamsListAllInvitations {\n  // 可以添加分页等参数\n  page?: number;\n  page_size?: number;\n}\n\n/**\n * 用户信息\n */\nexport interface IInvitationUserInfo {\n  user_id: string;\n  display_name: string;\n  avatar_url?: string;\n}\n\n// 邀请状态类型\nexport type InviteStatus = 'pending' | 'accepted' | 'declined' | 'expired' | 'cancelled';\n\n// 邀请记录详情\nexport interface IInvitationDetails {\n  invitation_id: string;\n  user_info: {\n    user_id: string;\n    display_name: string;\n    avatar_url?: string;\n  };\n  status: InviteStatus;\n  message: string;\n  created_at: number;\n  expires_at: number;\n}\n\n/**\n * 获取所有邀请的响应结果\n */\nexport interface IResultListAllInvitations {\n  is_ok: boolean;\n  msg?: string;\n  sent_invitations: IInvitationDetails[];\n  received_invitations: IInvitationDetails[];\n}\n\n/**\n * 响应邀请的请求参数\n */\nexport interface IParamsRespondToInvite {\n  invitation_id: string;\n  action: 'accept' | 'decline' | 'cancel' | 'remove';\n}\n\n/**\n * 获取所有邀请（发送和接收的）\n */\nexport async function tmsEmergencyCallListAllInvitations(\n  opts: IRequestOptions<IParamsListAllInvitations>\n) {\n  return request<IResultListAllInvitations, IParamsListAllInvitations>(\n    tms.TEmc,\n    tms.MEmcListAllInvitations,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n/**\n * 取消或删除邀请\n * @param invitationId 邀请ID\n * @param isReceived 是否是接收的邀请\n * @returns Promise\n */\nexport async function cancelOrRemoveInvitation(\n  invitationId: string,\n  isReceived: boolean\n) {\n  const action = isReceived ? 'remove' : 'cancel';\n  return emergencyCallInvitationService.respondToInvite({\n    params: {\n      invitation_id: invitationId,\n      action\n    }\n  } as any);\n}\n\n/**\n * 响应邀请\n */\nexport async function tmsEmergencyCallRespondToInvite(\n  opts: IRequestOptions<IParamsRespondToInvite>\n) {\n  return request<{ is_ok: boolean; msg?: string }, IParamsRespondToInvite>(\n    tms.TEmc,\n    tms.MEmcRespondToInvite,\n    opts.params,\n    opts.gateway,\n    opts.handler\n  );\n}\n\n// 导出所有接口\nexport const emergencyCallInvitationService = {\n  listAllInvitations: tmsEmergencyCallListAllInvitations,\n  respondToInvite: tmsEmergencyCallRespondToInvite,\n};\n\nexport default emergencyCallInvitationService;\n","import { Dialog, DialogContent, IconButton } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport React from 'react';\nimport { autoJsStoreUtils, autoWebViewJs } from '@droid/android';\n\ninterface PrivacyDialogDisplayProps {\n  open: boolean;\n  onClose: () => void;\n  type: string;\n  area: string;\n}\n\ninterface IPrivacyInfo {\n  agree: boolean;\n  disagreeTime: number;\n}\n\n/**\n * 纯显示组件 - 负责隐私协议弹窗的显示和交互\n * 可以被手动控制打开/关闭\n */\nexport function PrivacyDialogDisplay({ open, onClose, type, area }: PrivacyDialogDisplayProps) {\n  const [iframeSrc, setIframeSrc] = useState(`/privacies/${type}/${area}.html`);\n  const iframeRef = React.useRef<HTMLIFrameElement>(null);\n\n  useEffect(() => {\n    setIframeSrc(`/privacies/${type}/${area}.html`);\n  }, [type, area]);\n\n  useEffect(() => {\n    const handleMessage = (event: MessageEvent) => {\n      // 安全检查：确保消息来自iframe\n      if (event.source !== iframeRef.current?.contentWindow) {\n        return;\n      }\n\n      const { sender, agree } = event.data;\n\n      if (sender === 'privacy_page') {\n        console.log(`Received privacy decision: ${agree ? 'Agreed' : 'Disagreed'}`);\n\n        const value: IPrivacyInfo = {\n          agree,\n          disagreeTime: agree ? 0 : Date.now()\n        };\n\n        // 保存到本地存储\n        autoJsStoreUtils.write(`privacy_${type}`, value);\n        \n        // 同步到Android端\n        const script = `\n          var data = new com.fanfanlo.emergencycall.data.PrivacyData(${value.agree}, ${value.disagreeTime});\n          com.fanfanlo.emergencycall.data.PrivacyStateHolder.updateMainPrivacyByJs(data);\n        `;\n        autoWebViewJs.callScript(script);\n\n        // 关闭弹窗\n        onClose();\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, [type, onClose]);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          width: '80%',\n          height: '80%',\n          maxWidth: 'none',\n        },\n      }}\n    >\n      <IconButton\n        aria-label=\"close\"\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 8,\n          color: theme => theme.palette.grey[500],\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n      <DialogContent sx={{ padding: 0, overflow: 'hidden' }}>\n        {iframeSrc && (\n          <iframe\n            ref={iframeRef}\n            src={iframeSrc}\n            style={{ width: '100%', height: '100%', border: 'none' }}\n            title={`Privacy Policy - ${type}/${area}`}\n          />\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}","'use client';\r\nimport { BottomNavigation, BottomNavigationAction, Box, CssBaseline, Paper, Stack } from '@mui/material';\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport StorefrontIcon from '@mui/icons-material/Storefront';\r\nimport { useRouter } from 'next/router';\r\nimport React, { PropsWithChildren } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ITitleI18nConf } from '../page';\r\nimport AndroidPageContent from '../page/AndroidPageContent';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\n// interface TabInfoType {\r\n//   label: string;\r\n//   value: string;\r\n//   icon: React.ReactNode;\r\n// }\r\n\r\nfunction BottomBar({navBar}:{navBar?:React.ReactNode}) {\r\n  return <Paper\r\n    id=\"bottom-navigation\"\r\n    sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }}\r\n    elevation={3}>\r\n    {/* <NavBar /> */}\r\n    {navBar}\r\n  </Paper>;\r\n}\r\n// function NavBar() {\r\n//   const router = useRouter();\r\n//   const { pathname } = router;\r\n//   const { t } = useTranslation('app-ui/components/tabbar/content');\r\n//   const tabInfoList: TabInfoType[] = [\r\n//     { label: t('content.home'), value: '/', icon: <HomeIcon /> },\r\n//     // { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n//     // { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n//     { label: t('content.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n//   ];\r\n//   return (\r\n\r\n//     <BottomNavigation showLabels value={pathname}>\r\n//       {tabInfoList.map(e => (\r\n//         <BottomNavigationAction\r\n//           key={e.value}\r\n//           label={e.label}\r\n//           icon={e.icon}\r\n//           data-id={`tabbar-${e.value}`}\r\n//           className={pathname === e.value ? 'Mui-selected' : ''}\r\n//           onClick={() => {\r\n//             if (pathname === e.value) return;\r\n//             router.push(e.value);\r\n//           }}\r\n//         />\r\n//       ))}\r\n//     </BottomNavigation>\r\n//   );\r\n// }\r\n\r\n\r\n// testWatchUpdates()\r\nexport function TabbarContainer({ children, titleConf, navBar }: {titleConf?:ITitleI18nConf, navBar:React.ReactNode} & PropsWithChildren)  {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', height2: '100vh' }}>\r\n      <CssBaseline />\r\n      <Stack direction={\"column\"} spacing={3}\r\n      \r\n      >\r\n        <AndroidPageContent titleConf={titleConf}>\r\n          {children}\r\n        </AndroidPageContent>\r\n        <BottomBar navBar={navBar} />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\n"],"names":["request","tms","tmsEmcInviteContacts","opts","res","TEmc","MEmcInviteContacts","params","gateway","handler","tmsEmcGetContactTypes","MEmcGetContactTypes","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Box","CircularProgress","Autocomplete","useState","useCallback","useEffect","useRef","user","toast","matrixUser","authService","Log","useProxyWatch","fileLogger","isValidIdentity","text","test","is11DigitNumber","InviteContactDialog","open","onClose","onInviteSent","uiLogger","sub","contacts","setContacts","remark","setRemark","callType","setCallType","availableCallTypes","setAvailableCallTypes","console","log","message","setMessage","isLoading","setIsLoading","isTypesLoading","setIsTypesLoading","pendingParams","setPendingParams","executionLock","accessToken","userData","userInfo","loginResponse","access_token","isUserLoggedIn","data","sessionData","global_user_info","userToken","storeData","user_token","current","finalParams","matrix_access_token","type","executeApiCall","error","responseData","printLog","err","shellIsOk","dataIsOk","errorMessage","results","msg","successResults","filter","r","result_code","infoResults","errorResults","length","success","infoMessages","map","Boolean","join","errorMessages","fetchCallTypes","logger","JSON","stringify","types","formattedTypes","id","uuid","name","is_system","defaultType","warn","handleSendInvitation","contactInputs","split","c","trim","contactIdentities","input","push","identity","identityType","appLoggedIn","showLoginDialog","currentAccessToken","apiParams","maxWidth","fullWidth","component","sx","mt","autoFocus","margin","label","multiline","rows","variant","placeholder","value","onChange","e","target","disabled","freeSolo","options","option","event","newValue","inputValue","onInputChange","newInputValue","reason","disablePortal","disableClearable","forcePopupIcon","mb","width","renderInput","InputProps","endAdornment","color","size","ListboxProps","style","maxHeight","overflow","onClick","tmsEmergencyCallListPendingReceivedInvitations","MEmcListPendingReceivedInvitations","emergencyCallPendingInvitationService","listPendingReceivedInvitations","React","Typography","Card","CardContent","CardActions","Avatar","Chip","Alert","Stack","Check","CheckIcon","Close","CloseIcon","AccessTime","AccessTimeIcon","Notifications","NotificationsIcon","formatDistanceToNow","zhCN","emergencyCallInvitationService","AppModelEvent","appModel","PendingInvitationCard","invitation","onRespond","isProcessing","isProcessingAction","setIsProcessingAction","handleRespond","action","isExpired","Date","expires_at","opacity","display","alignItems","src","user_info","avatar_url","alt","display_name","height","mr","toUpperCase","flexGrow","created_at","addSuffix","locale","textAlign","icon","fontSize","fontWeight","justifyContent","pt","startIcon","PendingInvitationsList","setError","invitations","setInvitations","setIsProcessing","loadPendingInvitations","is_ok","handleRespondToInvite","invitationId","respondToInvite","invitation_id","Error","prev","invite","dispatcher","emit","InviteListUpdated","unsubscribe","addListener","flexDirection","p","severity","spacing","Switch","Paper","Collapse","Divider","IconButton","FormControlLabel","Tooltip","FormControl","MenuItem","InputLabel","Select","DragIndicator","DragIndicatorIcon","ExpandLess","Settings","Delete","PlayArrow","Stop","VolumeUp","VolumeUpIcon","Vibration","VibrationIcon","DndContext","closestCenter","KeyboardSensor","PointerSensor","TouchSensor","useSensor","useSensors","arrayMove","SortableContext","sortableKeyboardCoordinates","useSortable","verticalListSortingStrategy","CSS","debounce","autoJsStoreUtils","PRE_ALARM_CONFIG_KEY","defaultSoundResources","SortableActionItem","isPlaying","onUpdate","onRemove","onPreview","onStopPreview","attributes","listeners","setNodeRef","transform","transition","isDragging","Transform","toString","zIndex","ref","elevation","gap","userSelect","cursor","touchAction","duration","parseInt","resourceId","startAdornment","title","sound","PreAlarmConfig2","config","setConfig","expanded","setExpanded","playingSoundId","setPlayingSoundId","debouncedWrite","newConfig","write","sensors","activationConstraint","distance","delay","tolerance","coordinateGetter","loadConfig","storedConfig","read","actionsWithIds","actions","Math","random","substr","enabled","maxWaitDuration","updateConfig","updates","handleToggleEnabled","checked","handleAddAction","newAction","now","handleUpdateAction","handleRemoveAction","handleDragEnd","active","over","oldIndex","findIndex","a","newIndex","handlePreviewSound","handleStopSound","window","SoundManager","previewSound","stopPreview","borderRadius","control","in","border","borderColor","gutterBottom","ml","my","direction","collisionDetection","onDragEnd","items","strategy","Grid","MedicalServices","MedicalIcon","Security","SecurityIcon","Shortcut","ShortcutIcon","autoWebViewJs","ShortcutConfig","medicalName","setMedicalName","securityName","setSecurityName","isCreating","setIsCreating","handleCreateMedicalShortcut","supportScript","javaResultString","supportResult","callScript","script","handleCreateSecurityShortcut","handleCheckSupport","brandScript","guideScript","brandResult","guideResult","supportInfo","handleRequestPermission","undefined","result","startsWith","fallbackScript","fallbackResult","brand","brandName","guideText","fallbackError","pre","whiteSpace","container","item","xs","md","flexWrap","bgcolor","ul","paddingLeft","li","strong","PrivacyDialogAuto","ListenShowPrivacyContent","setOpen","area","getRelatedPermissions","defaultParams","page_size","page_offset","include_myself","include_contacts","t","TPermission","m","MPermissionGetRelatedPermissions","DialogContentText","Grid2","Accordion","AccordionSummary","AccordionDetails","List","ListItem","ListItemIcon","ListItemText","Sensors","SettingsIcon","ExpandMore","CheckCircle","Cancel","Help","Person","Groups","UnifiedMonitoringControl","state","setState","sensorEnabled","permissionEnabled","isRunning","threshold","dialogOpen","setDialogOpen","dialogCallback","setDialogCallback","permissionExpanded","setPermissionExpanded","keepExpanded","setKeepExpanded","permissionData","setPermissionData","selfPermissionData","setSelfPermissionData","permissionLoading","setPermissionLoading","lastBackendUpdate","setLastBackendUpdate","lastSelfUpdate","setLastSelfUpdate","loadInitialState","backendInterval","selfInterval","setInterval","loadBackendPermissions","loadSelfPermissions","clearInterval","sensorScript","sensorResult","thresholdScript","thresholdResult","thresholdValue","parseFloat","permissionScript","permissionResult","permissions","parse","getPermissionIcon","status","toLowerCase","formatPermissionType","typeMap","renderPermissionItem","permission","isAndroidData","level","camera_status","microphone_status","location_status","overlay_status","battery_optimization_status","notification_status","screen_on_status","overall_status","primary","permission_type","user_name","user_id","secondary","description","last_check_time","toLocaleString","handleSetThreshold","isNaN","alert","handleToggleMonitoring","stopMonitoring","checkForegroundServicePermission","startMonitoring","sensor","callback","info","passed","onPassed","onCancel","handleSensorToggle","handlePermissionToggle","getStatusChips","chips","padding","verticalAlign","_","expandIcon","stopPropagation","dense","aria-labelledby","TestEmergencyCall","fileLog","stopAllHandler","stopEmergencyMethods","methodError","Snackbar","Fab","StopIcon","VolumeOff","VolumeOffIcon","EmergencyStopButton","loading","setLoading","isAndroidWebView","handleStopAllEmergencyAudio","bl","handleCloseMessage","placement","position","bottom","right","autoHideDuration","anchorOrigin","vertical","horizontal","Slider","DEFAULT_SETTINGS","repeatInterval","voiceSpeed","voicePitch","lastUpdated","TTS_SETTINGS_KEY","EmergencyTTSSettings","settings","setSettings","testing","setTesting","showSuccess","setShowSuccess","loadSettings","savedSettings","saveSettings","newSettings","settingsToSave","testTTS","Promise","resolve","setTimeout","stopTest","handleSettingChange","key","handleSave","helperText","lineHeight","min","max","step","marks","valueLabelDisplay","valueLabelFormat","minWidth","backgroundColor","br","AppShell","TabbarContainer","IMOpenPageLink","NavBar","Link","MeetingList","Content","openInviteDialog","setOpenInviteDialog","maxItemLength","href","textDecoration","Home","titleConf","ns","navBar","isRealInAndroid","PrivacyDialogDisplay","handleClose","def","agree","disagreeTime","useRouter","useTranslation","HomeIcon","BottomNavigation","BottomNavigationAction","router","pathname","tabInfoList","showLabels","data-id","className","tmsEmergencyCallListAllInvitations","MEmcListAllInvitations","cancelOrRemoveInvitation","isReceived","tmsEmergencyCallRespondToInvite","MEmcRespondToInvite","listAllInvitations","iframeSrc","setIframeSrc","iframeRef","handleMessage","source","contentWindow","sender","addEventListener","removeEventListener","PaperProps","aria-label","top","theme","palette","grey","iframe","CssBaseline","AndroidPageContent","BottomBar","left","children","height2"],"sourceRoot":"","ignoreList":[5]}