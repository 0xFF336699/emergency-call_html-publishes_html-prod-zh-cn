# 最终方案 v15：上传除locales外的所有文件，HTML最后上传
name: Deploy all files except locales to Qiniu

on:
  push:
    branches:
      - main

jobs:
  deploy-all-except-locales:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Upload non-HTML files (except locales) to Qiniu first
        env:
          QINIU_BUCKET_NAME: ${{ secrets.QINIU_BUCKET_NAME }}
          QINIU_ACCESS_KEY: ${{ secrets.QINIU_ACCESS_KEY }}
          QINIU_SECRET_KEY: ${{ secrets.QINIU_SECRET_KEY }}
          QINIU_DOMAIN: ${{ secrets.QINIU_DOMAIN }}
        run: |
          echo "Downloading and setting up qshell..."
          wget https://github.com/qiniu/qshell/releases/download/v2.16.0/qshell-v2.16.0-linux-amd64.tar.gz -O qshell.tar.gz
          tar -xvf qshell.tar.gz
          chmod +x qshell
          
          # 清除可能存在的用户配置，避免重复添加错误
          ./qshell user clean
          ./qshell account $QINIU_ACCESS_KEY $QINIU_SECRET_KEY deploy_user

          echo "Creating temporary directory for non-HTML files (excluding locales)..."
          TARGET_DIR="non_html_files"
          mkdir -p $TARGET_DIR
          
          # 复制除了locales目录和HTML文件外的所有文件
          find docs -type f ! -name "*.html" ! -path "docs/locales/*" | while read -r filepath; do
            mkdir -p "$TARGET_DIR/$(dirname "$filepath")"
            cp "$filepath" "$TARGET_DIR/$filepath"
          done
          
          echo "Uploading non-HTML files (excluding locales)..."
          if [ "$(find "$TARGET_DIR/docs" -type f 2>/dev/null | wc -l)" -gt 0 ]; then
            cat > qupload-non-html.json << EOF
          {
              "src_dir": "$TARGET_DIR/docs",
              "bucket": "$QINIU_BUCKET_NAME",
              "overwrite": true,
              "rescan_local": true,
              "log_level": "info"
          }
          EOF
            ./qshell qupload -c 10 qupload-non-html.json
            echo "Non-HTML files uploaded successfully."
          else
            echo "No non-HTML files found to upload."
          fi

      - name: Upload HTML files to Qiniu last
        env:
          QINIU_BUCKET_NAME: ${{ secrets.QINIU_BUCKET_NAME }}
          QINIU_ACCESS_KEY: ${{ secrets.QINIU_ACCESS_KEY }}
          QINIU_SECRET_KEY: ${{ secrets.QINIU_SECRET_KEY }}
          QINIU_DOMAIN: ${{ secrets.QINIU_DOMAIN }}
        run: |
          echo "Setting up qshell for HTML upload..."
          chmod +x qshell
          
          # 由于第一步已经配置过用户，这里不需要重新配置
          # 如果需要重新配置，先清除用户配置
          # ./qshell user clean
          # ./qshell account $QINIU_ACCESS_KEY $QINIU_SECRET_KEY deploy_user

          echo "Creating a temporary directory with only HTML files..."
          TARGET_DIR="html_only"
          mkdir -p $TARGET_DIR
          find docs -type f -name "*.html" | while read -r filepath; do
            mkdir -p "$TARGET_DIR/$(dirname "$filepath")"
            cp "$filepath" "$TARGET_DIR/$filepath"
          done
          
          echo "Uploading the HTML files..."
          cat > qupload-html.json << EOF
          {
              "src_dir": "$TARGET_DIR/docs",
              "bucket": "$QINIU_BUCKET_NAME",
              "overwrite": true,
              "rescan_local": true,
              "log_level": "info"
          }
          EOF
          ./qshell qupload -c 10 qupload-html.json

          # --- 4. 核心修正：简化根域名的刷新逻辑 ---
          echo "Refreshing CDN cache for HTML files..."
          
          # 创建一个空的刷新列表文件
          > urls_to_refresh.txt

          # 使用 < 重定向，避免 subshell 问题
          while read -r filepath; do
            path_no_index=$(echo "$filepath" | sed 's/index\.html$//')
            path_no_ext=$(echo "$path_no_index" | sed 's/\.html$//')
            
            # 生成带斜杠的 URL (目录)
            if [ "${path_no_index: -1}" == "/" ]; then
              echo "${QINIU_DOMAIN}${path_no_index}" >> urls_to_refresh.txt
            fi
            
            # 生成不带斜杠的 URL (文件或目录的别名)
            if [ "$path_no_ext" != "$path_no_index" ]; then
               echo "${QINIU_DOMAIN}${path_no_ext}" >> urls_to_refresh.txt
            fi
          done < <(find docs -type f -name "*.html" | sed 's/docs\///')
          
          # --- 最重要的修正：无条件地刷新根域名 ---
          # 只要根目录的 index.html 存在，就刷新根域名
          if [ -f "docs/index.html" ]; then
            echo "$QINIU_DOMAIN" >> urls_to_refresh.txt
          fi

          # 去重
          sort -u urls_to_refresh.txt -o urls_to_refresh.txt

          echo "--- URLs to be refreshed ---"
          cat urls_to_refresh.txt
          
          # 启用刷新!
          echo "Executing CDN refresh..."
          ./qshell cdnrefresh -i urls_to_refresh.txt

          echo "All files deployment completed successfully."
